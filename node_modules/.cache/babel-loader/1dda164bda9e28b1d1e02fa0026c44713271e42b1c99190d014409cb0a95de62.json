{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{Box,Typography,Card,CardContent,Button,LinearProgress,IconButton,useTheme,useMediaQuery,Container,Grid}from'@mui/material';import{CheckCircle as CheckCircleIcon,Help as HelpIcon,Close as CloseIcon,ArrowBack as ArrowBackIcon,PlayArrow as PlayArrowIcon,Pause as PauseIcon,Stop as StopIcon}from'@mui/icons-material';import{getAssignedWords}from'../utils/vocabularyData';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const VocabularyLearning=_ref=>{let{assignment,onComplete,onClose,timerDuration=1.5// 기본값 1.5초\n}=_ref;const theme=useTheme();const isMobile=useMediaQuery(theme.breakpoints.down('md'));const[session,setSession]=useState(null);const[currentWord,setCurrentWord]=useState(null);const[showMeaning,setShowMeaning]=useState(false);const[doubleCheckTimer,setDoubleCheckTimer]=useState(0);const[isPaused,setIsPaused]=useState(false);const[showResults,setShowResults]=useState(false);const[firstChoice,setFirstChoice]=useState(null);const[learningResults,setLearningResults]=useState([]);// 학습 결과 저장\nconst[hasUserClickedMeaning,setHasUserClickedMeaning]=useState(false);// 사용자가 뜻을 클릭했는지 추적\nconst[elapsedTime,setElapsedTime]=useState(0);// 경과 시간 (초)\nuseEffect(()=>{initializeSession();},[assignment]);// 경과 시간 타이머\nuseEffect(()=>{if(!session||showResults)return;const timer=setInterval(()=>{setElapsedTime(prev=>prev+1);},1000);return()=>clearInterval(timer);},[session,showResults]);// 시간 포맷팅 함수\nconst formatTime=seconds=>{const minutes=Math.floor(seconds/60);const remainingSeconds=seconds%60;return`${minutes.toString().padStart(2,'0')}분 ${remainingSeconds.toString().padStart(2,'0')}초`;};const initializeSession=useCallback(()=>{var _assignment$vocabular;// 배정된 과제의 단어 목록 가져오기\nconsole.log('=== VocabularyLearning initializeSession ===');console.log('Assignment object:',assignment);console.log('Assignment type:',typeof assignment);console.log('Assignment keys:',Object.keys(assignment||{}));console.log('Assignment properties:');console.log('  - taskId:',assignment===null||assignment===void 0?void 0:assignment.taskId);console.log('  - taskTitle:',assignment===null||assignment===void 0?void 0:assignment.taskTitle);console.log('  - area:',assignment===null||assignment===void 0?void 0:assignment.area);console.log('  - startUnit:',assignment===null||assignment===void 0?void 0:assignment.startUnit);console.log('  - startDate:',assignment===null||assignment===void 0?void 0:assignment.startDate);console.log('  - weeklySchedule:',assignment===null||assignment===void 0?void 0:assignment.weeklySchedule);console.log('  - vocabularyData:',assignment===null||assignment===void 0?void 0:assignment.vocabularyData);console.log('  - vocabularyData length:',assignment===null||assignment===void 0?void 0:(_assignment$vocabular=assignment.vocabularyData)===null||_assignment$vocabular===void 0?void 0:_assignment$vocabular.length);const assignedWords=getAssignedWords(assignment);console.log('Returned from getAssignedWords:');console.log('  - Words count:',assignedWords.length);console.log('  - First word:',assignedWords[0]);console.log('  - All words:',assignedWords.map(w=>({english:w.english,korean:w.korean,unit:w.unit})));console.log('=== End initializeSession ===');if(assignedWords.length===0){console.error('No words assigned to this task');alert('학습할 단어가 없습니다. 오늘은 학습일이 아니거나 모든 단원을 완료했을 수 있습니다.');onClose();return;}const newSession={id:Date.now().toString(),words:assignedWords,currentWordIndex:0,completedWords:[],triangleWords:[],xWords:[],isCompleted:false,startTime:new Date(),round:1// 1회차로 시작\n};setSession(newSession);setCurrentWord(assignedWords[0]);setElapsedTime(0);// 새로운 세션 시작 시 타이머 리셋\n},[assignment,onClose]);const handleWordCheck=checkType=>{if(!session||!currentWord)return;setFirstChoice(checkType);setShowMeaning(true);setHasUserClickedMeaning(false);// 새로운 단어 시작 시 리셋\n// 타이머 시작\nsetDoubleCheckTimer(timerDuration);};const handleMistaken=()=>{if(!session||!currentWord||!firstChoice)return;console.log('handleMistaken 호출됨:',{currentWord:currentWord.english,firstChoice});const updatedSession={...session};// 기존 선택을 제거하고 triangle(재학습)로 변경\nupdatedSession.completedWords=updatedSession.completedWords.filter(id=>id!==currentWord.id);updatedSession.triangleWords=updatedSession.triangleWords.filter(id=>id!==currentWord.id);updatedSession.xWords=updatedSession.xWords.filter(id=>id!==currentWord.id);// 재학습으로 분류\nupdatedSession.triangleWords.push(currentWord.id);console.log('handleMistaken 후 session 상태:',{completedWords:updatedSession.completedWords.length,triangleWords:updatedSession.triangleWords.length,xWords:updatedSession.xWords.length});setSession(updatedSession);setShowMeaning(false);setDoubleCheckTimer(0);setFirstChoice(null);setHasUserClickedMeaning(true);// 사용자가 뜻을 클릭했음을 표시\n// 즉시 다음 단어로 이동하지 않고 상태 업데이트가 완료될 때까지 기다림\nconst nextIndex=updatedSession.currentWordIndex+1;if(nextIndex>=updatedSession.words.length){// 현재 회차 완료 - completeRound 호출\ncompleteRound();}else{// 다음 단어로\nsetSession({...updatedSession,currentWordIndex:nextIndex});setCurrentWord(updatedSession.words[nextIndex]);setShowMeaning(false);setHasUserClickedMeaning(false);// 다음 단어 시작 시 리셋\n}};const confirmChoice=()=>{if(!session||!currentWord||!firstChoice)return;console.log('confirmChoice 호출됨:',{currentWord:currentWord.english,firstChoice});const updatedSession={...session};// 첫 번째 선택을 확정\nif(firstChoice==='circle'){updatedSession.completedWords.push(currentWord.id);}else if(firstChoice==='triangle'){updatedSession.triangleWords.push(currentWord.id);}else{updatedSession.xWords.push(currentWord.id);}console.log('confirmChoice 후 session 상태:',{completedWords:updatedSession.completedWords.length,triangleWords:updatedSession.triangleWords.length,xWords:updatedSession.xWords.length});setSession(updatedSession);setShowMeaning(false);setDoubleCheckTimer(0);setFirstChoice(null);// 즉시 다음 단어로 이동\nconst nextIndex=updatedSession.currentWordIndex+1;if(nextIndex>=updatedSession.words.length){// 현재 회차 완료 - completeRound 호출\ncompleteRound();}else{// 다음 단어로\nsetSession({...updatedSession,currentWordIndex:nextIndex});setCurrentWord(updatedSession.words[nextIndex]);setShowMeaning(false);setHasUserClickedMeaning(false);// 다음 단어 시작 시 리셋\n}};const completeRound=useCallback(()=>{if(!session)return;const endTime=new Date();// 현재 회차 결과 저장 (각 단어의 상태 포함)\nconst wordStates=session.words.map(word=>{let status;if(session.completedWords.includes(word.id)){status='complete';// 완전히 알고 있어요\n}else if(session.triangleWords.includes(word.id)){status='repeat';// 1번 더 볼래요\n}else if(session.xWords.includes(word.id)){status='unknown';// 모르겠어요\n}else{status='forgot';// 아 몰랐어요 (체크하지 않은 경우)\n}return{word:word,status:status};});const roundResult={round:session.round,totalWords:session.words.length,completedWords:session.completedWords.length,triangleWords:session.triangleWords.length,xWords:session.xWords.length,startTime:session.startTime,endTime:endTime,wordStates:wordStates// 각 단어의 상태 추가\n};const newResults=[...learningResults,roundResult];setLearningResults(newResults);// 동그라미 하지 않은 단어들 확인\nconst remainingWords=session.words.filter(word=>!session.completedWords.includes(word.id));console.log(`${session.round}회차 완료. 남은 단어:`,remainingWords.length);if(remainingWords.length===0){// 모든 단어를 완료한 경우\nsetShowResults(true);}else{// 다음 회차 학습 자동 시작\nconst newSession={id:Date.now().toString(),words:remainingWords,currentWordIndex:0,completedWords:[],triangleWords:[],xWords:[],isCompleted:false,startTime:new Date(),round:session.round+1};setSession(newSession);setCurrentWord(remainingWords[0]);setShowMeaning(false);setHasUserClickedMeaning(false);// 새로운 회차 시작 시 리셋\nsetElapsedTime(0);// 새로운 회차 시작 시 타이머 리셋\n// 다음 회차 시작 알림 (오답학습인 경우 다른 메시지)\nconst isWrongAnswerLearning=assignment===null||assignment===void 0?void 0:assignment.isWrongAnswerLearning;if(isWrongAnswerLearning){alert(`${session.round}회차 오답학습이 완료되었습니다.\\n동그라미 하지 않은 ${remainingWords.length}개 단어로 ${session.round+1}회차 오답학습을 시작합니다.`);}else{alert(`${session.round}회차 학습이 완료되었습니다.\\n동그라미 하지 않은 ${remainingWords.length}개 단어로 ${session.round+1}회차 학습을 시작합니다.`);}}},[session,learningResults,assignment]);useEffect(()=>{if(doubleCheckTimer>0){const timer=setTimeout(()=>{setDoubleCheckTimer(prev=>Math.max(0,prev-0.1));},100);return()=>clearTimeout(timer);}else if(doubleCheckTimer===0&&showMeaning&&firstChoice&&!hasUserClickedMeaning){// 사용자가 뜻을 클릭하지 않았을 때만 confirmChoice 호출\nconfirmChoice();}},[doubleCheckTimer,showMeaning,firstChoice,hasUserClickedMeaning,confirmChoice]);const getProgress=()=>{if(!session)return 0;const totalWords=session.words.length;const processedWords=session.currentWordIndex+1;return processedWords/totalWords*100;};const handleFinalComplete=()=>{var _learningResults$,_learningResults$2;// 전체 학습에서 최종적으로 완료한 단어 수 계산\nconst totalWordsLearned=((_learningResults$=learningResults[0])===null||_learningResults$===void 0?void 0:_learningResults$.totalWords)||0;// 1회차에서 완료한 단어 수\nconst firstRoundCompleted=learningResults.length>1?totalWordsLearned-learningResults[1].totalWords:((_learningResults$2=learningResults[0])===null||_learningResults$2===void 0?void 0:_learningResults$2.completedWords)||0;// 마지막 회차에서 완료한 단어 수\nconst lastRoundCompleted=learningResults.length>1?learningResults[learningResults.length-1].completedWords:0;// 실제 최종 완료 단어 수\nconst actualFinalCompletedWords=firstRoundCompleted+lastRoundCompleted;// 결과 배열의 마지막 요소를 수정하여 정확한 완료 단어 수 반영\nconst correctedResults=learningResults.map((result,index)=>{if(index===learningResults.length-1){return{...result,actualFinalCompletedWords// 실제 최종 완료 단어 수 추가\n};}return result;});onComplete(correctedResults);};if(!session||!currentWord){return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',height:'100vh'},children:/*#__PURE__*/_jsx(Typography,{children:\"\\uD559\\uC2B5\\uC744 \\uC900\\uBE44\\uD558\\uB294 \\uC911...\"})});}if(showResults){var _learningResults$3;// 최종 결과 계산\nconst totalWordsLearned=((_learningResults$3=learningResults[0])===null||_learningResults$3===void 0?void 0:_learningResults$3.totalWords)||0;// 전체 학습에서 최종적으로 동그라미(완료)한 단어 수 계산\n// 마지막 회차의 결과가 최종 결과\nconst lastRoundResult=learningResults[learningResults.length-1];const finalCompletedWords=lastRoundResult?lastRoundResult.completedWords:0;// 1회차에서 완료한 단어 수 계산 (전체 - 2회차에 넘어간 단어)\nconst firstRoundCompleted=learningResults.length>1?totalWordsLearned-learningResults[1].totalWords:totalWordsLearned;// 실제 최종 완료 단어 수 = 1회차 완료 + 마지막 회차 완료\nconst actualFinalCompletedWords=learningResults.length>1?firstRoundCompleted+finalCompletedWords:finalCompletedWords;return/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",sx:{py:3},children:/*#__PURE__*/_jsx(Card,{sx:{borderRadius:isMobile?2:1},children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:isMobile?3:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center',mb:3},children:[/*#__PURE__*/_jsx(CheckCircleIcon,{sx:{fontSize:64,color:'success.main',mb:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",sx:{mb:1,fontWeight:600},children:\"\\uBAA8\\uB4E0 \\uD559\\uC2B5 \\uC644\\uB8CC!\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",color:\"text.secondary\",children:[\"\\uCD1D \",learningResults.length,\"\\uD68C\\uCC28 \\uD559\\uC2B5\\uC744 \\uC644\\uB8CC\\uD588\\uC2B5\\uB2C8\\uB2E4.\"]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2,fontWeight:600},children:\"\\uC804\\uCCB4 \\uD559\\uC2B5 \\uACB0\\uACFC\"}),learningResults.map((result,index)=>/*#__PURE__*/_jsxs(Box,{sx:{mb:2,p:2,bgcolor:'grey.50',borderRadius:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",sx:{fontWeight:600,mb:1},children:[result.round,\"\\uD68C\\uCC28 \\uD559\\uC2B5\"]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"\\uC644\\uB8CC: \",result.completedWords,\"\\uAC1C\"]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"\\uC7AC\\uD559\\uC2B5: \",result.triangleWords,\"\\uAC1C\"]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"\\uBBF8\\uC644\\uB8CC: \",result.xWords,\"\\uAC1C\"]})})]})]},index)),/*#__PURE__*/_jsxs(Box,{sx:{mt:3,p:2,bgcolor:'primary.50',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{fontWeight:600,mb:1},children:\"\\uCD5C\\uC885 \\uACB0\\uACFC\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"\\uCD1D \",totalWordsLearned,\"\\uAC1C \\uB2E8\\uC5B4 \\uC911 \",actualFinalCompletedWords,\"\\uAC1C \\uC644\\uB8CC (\",Math.round(actualFinalCompletedWords/totalWordsLearned*100),\"%)\"]})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:2,justifyContent:'center'},children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleFinalComplete,size:isMobile?\"large\":\"medium\",children:\"\\uD559\\uC2B5 \\uC644\\uB8CC\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:onClose,size:isMobile?\"large\":\"medium\",children:\"\\uB2EB\\uAE30\"})]})]})})});}return/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",sx:{py:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(IconButton,{onClick:onClose,sx:{mr:2},children:/*#__PURE__*/_jsx(ArrowBackIcon,{})}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{fontWeight:600},children:[assignment!==null&&assignment!==void 0&&assignment.isWrongAnswerLearning?'오답학습':'단어 학습',\" - \",session.round,\"\\uD68C\\uCC28\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{ml:2},children:formatTime(elapsedTime)})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1},children:[/*#__PURE__*/_jsx(IconButton,{onClick:()=>setIsPaused(!isPaused),children:isPaused?/*#__PURE__*/_jsx(PlayArrowIcon,{}):/*#__PURE__*/_jsx(PauseIcon,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:onClose,children:/*#__PURE__*/_jsx(StopIcon,{})})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[session.round,\"\\uD68C\\uCC28 \\uC9C4\\uD589\\uB960: \",Math.round(getProgress()),\"%\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[session.currentWordIndex+1,\" / \",session.words.length]})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:getProgress(),sx:{height:8,borderRadius:4}})]}),/*#__PURE__*/_jsx(Card,{sx:{mb:6,borderRadius:isMobile?2:1},children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:isMobile?8:7,textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",sx:{mb:4,fontWeight:600},children:currentWord.english}),currentWord.pronunciation&&/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"text.secondary\",sx:{mb:6,fontStyle:'italic'},children:currentWord.pronunciation}),!currentWord.pronunciation&&/*#__PURE__*/_jsx(Box,{sx:{mb:6}}),showMeaning?/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Box,{onClick:handleMistaken,sx:{width:'100%',height:60,// 높이 줄임\nborder:'2px dashed #ccc',borderRadius:2,display:'flex',alignItems:'center',justifyContent:'center',cursor:'pointer',backgroundColor:'rgba(0,0,0,0.02)',mt:6,// 위쪽 여백 증가\nmb:6,// 아래쪽 여백 증가\n'&:hover':{backgroundColor:'rgba(0,0,0,0.05)',borderColor:'#999'}},children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",color:\"primary\",sx:{fontWeight:600,textAlign:'center'},children:currentWord.korean})})}):/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'center',gap:1,height:60,// 높이 줄임\nmt:6,// 버튼 위쪽 여백 증가\nmb:6// 버튼 아래쪽 여백 추가\n},children:[/*#__PURE__*/_jsxs(Button,{variant:\"contained\",color:\"success\",size:\"large\",onClick:()=>handleWordCheck('circle'),sx:{py:1.5,px:2,borderRadius:2,whiteSpace:'nowrap',fontSize:isMobile?'0.9rem':'1rem',minWidth:isMobile?100:120,height:60,// 높이 줄임\n'&:hover':{transform:'scale(1.02)'}},children:[/*#__PURE__*/_jsx(CheckCircleIcon,{sx:{mr:1,fontSize:isMobile?20:24}}),\"\\uB2E4\\uC2DC \\uC548\\uBCFC\\uB798\"]}),/*#__PURE__*/_jsxs(Button,{variant:\"contained\",size:\"large\",onClick:()=>handleWordCheck('triangle'),sx:{py:1.5,px:2,borderRadius:2,whiteSpace:'nowrap',fontSize:isMobile?'0.9rem':'1rem',minWidth:isMobile?100:120,height:60,// 높이 줄임\nbackgroundColor:'#FFD700',color:'black','&:hover':{backgroundColor:'#FFC700',transform:'scale(1.02)'}},children:[/*#__PURE__*/_jsx(HelpIcon,{sx:{mr:1,fontSize:isMobile?20:24}}),\"1\\uBC88\\uC740 \\uB354\\uBCF4\\uC790\"]}),/*#__PURE__*/_jsxs(Button,{variant:\"contained\",color:\"error\",size:\"large\",onClick:()=>handleWordCheck('x'),sx:{py:1.5,px:2,borderRadius:2,whiteSpace:'nowrap',fontSize:isMobile?'0.9rem':'1rem',minWidth:isMobile?100:120,height:60,// 높이 줄임\n'&:hover':{transform:'scale(1.02)'}},children:[/*#__PURE__*/_jsx(CloseIcon,{sx:{mr:1,fontSize:isMobile?20:24}}),\"\\uC644\\uC804 \\uBAA8\\uB984\"]})]})})]})}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-around',textAlign:'center',mt:3},children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"success.main\",sx:{fontWeight:600},children:session.completedWords.length}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"\\uC644\\uB8CC\"})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"warning.main\",sx:{fontWeight:600},children:session.triangleWords.length}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"\\uC7AC\\uD559\\uC2B5\"})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"error.main\",sx:{fontWeight:600},children:session.xWords.length}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"\\uBBF8\\uC644\\uB8CC\"})]})]})]});};export default VocabularyLearning;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","Typography","Card","CardContent","Button","LinearProgress","IconButton","useTheme","useMediaQuery","Container","Grid","CheckCircle","CheckCircleIcon","Help","HelpIcon","Close","CloseIcon","ArrowBack","ArrowBackIcon","PlayArrow","PlayArrowIcon","Pause","PauseIcon","Stop","StopIcon","getAssignedWords","jsx","_jsx","jsxs","_jsxs","VocabularyLearning","_ref","assignment","onComplete","onClose","timerDuration","theme","isMobile","breakpoints","down","session","setSession","currentWord","setCurrentWord","showMeaning","setShowMeaning","doubleCheckTimer","setDoubleCheckTimer","isPaused","setIsPaused","showResults","setShowResults","firstChoice","setFirstChoice","learningResults","setLearningResults","hasUserClickedMeaning","setHasUserClickedMeaning","elapsedTime","setElapsedTime","initializeSession","timer","setInterval","prev","clearInterval","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","_assignment$vocabular","console","log","Object","keys","taskId","taskTitle","area","startUnit","startDate","weeklySchedule","vocabularyData","length","assignedWords","map","w","english","korean","unit","error","alert","newSession","id","Date","now","words","currentWordIndex","completedWords","triangleWords","xWords","isCompleted","startTime","round","handleWordCheck","checkType","handleMistaken","updatedSession","filter","push","nextIndex","completeRound","confirmChoice","endTime","wordStates","word","status","includes","roundResult","totalWords","newResults","remainingWords","isWrongAnswerLearning","setTimeout","max","clearTimeout","getProgress","processedWords","handleFinalComplete","_learningResults$","_learningResults$2","totalWordsLearned","firstRoundCompleted","lastRoundCompleted","actualFinalCompletedWords","correctedResults","result","index","sx","display","justifyContent","alignItems","height","children","_learningResults$3","lastRoundResult","finalCompletedWords","maxWidth","py","borderRadius","p","textAlign","mb","fontSize","color","variant","fontWeight","bgcolor","container","spacing","item","xs","mt","gap","onClick","size","mr","ml","value","pronunciation","fontStyle","width","border","cursor","backgroundColor","borderColor","px","whiteSpace","minWidth","transform"],"sources":["C:/Users/user/pro_planner/src/components/VocabularyLearning.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  LinearProgress,\r\n  IconButton,\r\n  useTheme,\r\n  useMediaQuery,\r\n  Container,\r\n  Grid,\r\n} from '@mui/material';\r\nimport {\r\n  CheckCircle as CheckCircleIcon,\r\n  Help as HelpIcon,\r\n  Close as CloseIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  PlayArrow as PlayArrowIcon,\r\n  Pause as PauseIcon,\r\n  Stop as StopIcon,\r\n} from '@mui/icons-material';\r\nimport { getAssignedWords, VocabularyWord } from '../utils/vocabularyData';\r\n\r\ninterface LearningSession {\r\n  id: string;\r\n  words: VocabularyWord[];\r\n  currentWordIndex: number;\r\n  completedWords: string[];\r\n  triangleWords: string[];\r\n  xWords: string[];\r\n  isCompleted: boolean;\r\n  startTime: Date;\r\n  endTime?: Date;\r\n  round: number; // 회차 추가\r\n}\r\n\r\ninterface LearningResult {\r\n  round: number;\r\n  totalWords: number;\r\n  completedWords: number;\r\n  triangleWords: number;\r\n  xWords: number;\r\n  startTime: Date;\r\n  endTime: Date;\r\n  wordStates?: Array<{\r\n    word: VocabularyWord;\r\n    status: 'complete' | 'repeat' | 'unknown' | 'forgot';\r\n  }>;\r\n}\r\n\r\ninterface VocabularyLearningProps {\r\n  assignment: any; // TaskAssignment 타입\r\n  onComplete: (results: LearningResult[]) => void; // 결과 배열로 변경\r\n  onClose: () => void;\r\n  timerDuration?: number; // 타이머 시간 (초)\r\n}\r\n\r\nconst VocabularyLearning: React.FC<VocabularyLearningProps> = ({\r\n  assignment,\r\n  onComplete,\r\n  onClose,\r\n  timerDuration = 1.5, // 기본값 1.5초\r\n}) => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n  \r\n  const [session, setSession] = useState<LearningSession | null>(null);\r\n  const [currentWord, setCurrentWord] = useState<VocabularyWord | null>(null);\r\n  const [showMeaning, setShowMeaning] = useState(false);\r\n  const [doubleCheckTimer, setDoubleCheckTimer] = useState<number>(0);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [firstChoice, setFirstChoice] = useState<'circle' | 'triangle' | 'x' | null>(null);\r\n  const [learningResults, setLearningResults] = useState<LearningResult[]>([]); // 학습 결과 저장\r\n  const [hasUserClickedMeaning, setHasUserClickedMeaning] = useState(false); // 사용자가 뜻을 클릭했는지 추적\r\n  const [elapsedTime, setElapsedTime] = useState(0); // 경과 시간 (초)\r\n\r\n  useEffect(() => {\r\n    initializeSession();\r\n  }, [assignment]);\r\n\r\n  // 경과 시간 타이머\r\n  useEffect(() => {\r\n    if (!session || showResults) return;\r\n    \r\n    const timer = setInterval(() => {\r\n      setElapsedTime(prev => prev + 1);\r\n    }, 1000);\r\n    \r\n    return () => clearInterval(timer);\r\n  }, [session, showResults]);\r\n\r\n  // 시간 포맷팅 함수\r\n  const formatTime = (seconds: number) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes.toString().padStart(2, '0')}분 ${remainingSeconds.toString().padStart(2, '0')}초`;\r\n  };\r\n\r\n  const initializeSession = useCallback(() => {\r\n    // 배정된 과제의 단어 목록 가져오기\r\n    console.log('=== VocabularyLearning initializeSession ===');\r\n    console.log('Assignment object:', assignment);\r\n    console.log('Assignment type:', typeof assignment);\r\n    console.log('Assignment keys:', Object.keys(assignment || {}));\r\n    console.log('Assignment properties:');\r\n    console.log('  - taskId:', assignment?.taskId);\r\n    console.log('  - taskTitle:', assignment?.taskTitle);\r\n    console.log('  - area:', assignment?.area);\r\n    console.log('  - startUnit:', assignment?.startUnit);\r\n    console.log('  - startDate:', assignment?.startDate);\r\n    console.log('  - weeklySchedule:', assignment?.weeklySchedule);\r\n    console.log('  - vocabularyData:', assignment?.vocabularyData);\r\n    console.log('  - vocabularyData length:', assignment?.vocabularyData?.length);\r\n    \r\n    const assignedWords = getAssignedWords(assignment);\r\n    \r\n    console.log('Returned from getAssignedWords:');\r\n    console.log('  - Words count:', assignedWords.length);\r\n    console.log('  - First word:', assignedWords[0]);\r\n    console.log('  - All words:', assignedWords.map(w => ({ english: w.english, korean: w.korean, unit: w.unit })));\r\n    console.log('=== End initializeSession ===');\r\n    \r\n    if (assignedWords.length === 0) {\r\n      console.error('No words assigned to this task');\r\n      alert('학습할 단어가 없습니다. 오늘은 학습일이 아니거나 모든 단원을 완료했을 수 있습니다.');\r\n      onClose();\r\n      return;\r\n    }\r\n    \r\n    const newSession: LearningSession = {\r\n      id: Date.now().toString(),\r\n      words: assignedWords,\r\n      currentWordIndex: 0,\r\n      completedWords: [],\r\n      triangleWords: [],\r\n      xWords: [],\r\n      isCompleted: false,\r\n      startTime: new Date(),\r\n      round: 1, // 1회차로 시작\r\n    };\r\n         setSession(newSession);\r\n     setCurrentWord(assignedWords[0]);\r\n     setElapsedTime(0); // 새로운 세션 시작 시 타이머 리셋\r\n  }, [assignment, onClose]);\r\n\r\n\r\n\r\n  const handleWordCheck = (checkType: 'circle' | 'triangle' | 'x') => {\r\n    if (!session || !currentWord) return;\r\n\r\n    setFirstChoice(checkType);\r\n    setShowMeaning(true);\r\n    setHasUserClickedMeaning(false); // 새로운 단어 시작 시 리셋\r\n    \r\n    // 타이머 시작\r\n    setDoubleCheckTimer(timerDuration);\r\n  };\r\n\r\n  const handleMistaken = () => {\r\n    if (!session || !currentWord || !firstChoice) return;\r\n\r\n    console.log('handleMistaken 호출됨:', { currentWord: currentWord.english, firstChoice });\r\n    \r\n    const updatedSession = { ...session };\r\n    \r\n    // 기존 선택을 제거하고 triangle(재학습)로 변경\r\n    updatedSession.completedWords = updatedSession.completedWords.filter(id => id !== currentWord.id);\r\n    updatedSession.triangleWords = updatedSession.triangleWords.filter(id => id !== currentWord.id);\r\n    updatedSession.xWords = updatedSession.xWords.filter(id => id !== currentWord.id);\r\n    \r\n    // 재학습으로 분류\r\n    updatedSession.triangleWords.push(currentWord.id);\r\n\r\n    console.log('handleMistaken 후 session 상태:', {\r\n      completedWords: updatedSession.completedWords.length,\r\n      triangleWords: updatedSession.triangleWords.length,\r\n      xWords: updatedSession.xWords.length\r\n    });\r\n\r\n    setSession(updatedSession);\r\n    setShowMeaning(false);\r\n    setDoubleCheckTimer(0);\r\n    setFirstChoice(null);\r\n    setHasUserClickedMeaning(true); // 사용자가 뜻을 클릭했음을 표시\r\n    \r\n    // 즉시 다음 단어로 이동하지 않고 상태 업데이트가 완료될 때까지 기다림\r\n    const nextIndex = updatedSession.currentWordIndex + 1;\r\n    \r\n    if (nextIndex >= updatedSession.words.length) {\r\n      // 현재 회차 완료 - completeRound 호출\r\n      completeRound();\r\n    } else {\r\n      // 다음 단어로\r\n      setSession({ ...updatedSession, currentWordIndex: nextIndex });\r\n      setCurrentWord(updatedSession.words[nextIndex]);\r\n      setShowMeaning(false);\r\n      setHasUserClickedMeaning(false); // 다음 단어 시작 시 리셋\r\n    }\r\n  };\r\n\r\n  const confirmChoice = () => {\r\n    if (!session || !currentWord || !firstChoice) return;\r\n\r\n    console.log('confirmChoice 호출됨:', { currentWord: currentWord.english, firstChoice });\r\n    \r\n    const updatedSession = { ...session };\r\n    \r\n    // 첫 번째 선택을 확정\r\n    if (firstChoice === 'circle') {\r\n      updatedSession.completedWords.push(currentWord.id);\r\n    } else if (firstChoice === 'triangle') {\r\n      updatedSession.triangleWords.push(currentWord.id);\r\n    } else {\r\n      updatedSession.xWords.push(currentWord.id);\r\n    }\r\n\r\n    console.log('confirmChoice 후 session 상태:', {\r\n      completedWords: updatedSession.completedWords.length,\r\n      triangleWords: updatedSession.triangleWords.length,\r\n      xWords: updatedSession.xWords.length\r\n    });\r\n\r\n    setSession(updatedSession);\r\n    setShowMeaning(false);\r\n    setDoubleCheckTimer(0);\r\n    setFirstChoice(null);\r\n    \r\n    // 즉시 다음 단어로 이동\r\n    const nextIndex = updatedSession.currentWordIndex + 1;\r\n    \r\n    if (nextIndex >= updatedSession.words.length) {\r\n      // 현재 회차 완료 - completeRound 호출\r\n      completeRound();\r\n    } else {\r\n      // 다음 단어로\r\n      setSession({ ...updatedSession, currentWordIndex: nextIndex });\r\n      setCurrentWord(updatedSession.words[nextIndex]);\r\n      setShowMeaning(false);\r\n      setHasUserClickedMeaning(false); // 다음 단어 시작 시 리셋\r\n    }\r\n  };\r\n\r\n  const completeRound = useCallback(() => {\r\n    if (!session) return;\r\n    \r\n    const endTime = new Date();\r\n    \r\n    // 현재 회차 결과 저장 (각 단어의 상태 포함)\r\n    const wordStates = session.words.map(word => {\r\n      let status: 'complete' | 'repeat' | 'unknown' | 'forgot';\r\n      \r\n      if (session.completedWords.includes(word.id)) {\r\n        status = 'complete'; // 완전히 알고 있어요\r\n      } else if (session.triangleWords.includes(word.id)) {\r\n        status = 'repeat'; // 1번 더 볼래요\r\n      } else if (session.xWords.includes(word.id)) {\r\n        status = 'unknown'; // 모르겠어요\r\n      } else {\r\n        status = 'forgot'; // 아 몰랐어요 (체크하지 않은 경우)\r\n      }\r\n      \r\n      return {\r\n        word: word,\r\n        status: status\r\n      };\r\n    });\r\n    \r\n    const roundResult: LearningResult = {\r\n      round: session.round,\r\n      totalWords: session.words.length,\r\n      completedWords: session.completedWords.length,\r\n      triangleWords: session.triangleWords.length,\r\n      xWords: session.xWords.length,\r\n      startTime: session.startTime,\r\n      endTime: endTime,\r\n      wordStates: wordStates, // 각 단어의 상태 추가\r\n    };\r\n    \r\n    const newResults = [...learningResults, roundResult];\r\n    setLearningResults(newResults);\r\n    \r\n    // 동그라미 하지 않은 단어들 확인\r\n    const remainingWords = session.words.filter(word => \r\n      !session.completedWords.includes(word.id)\r\n    );\r\n    \r\n    console.log(`${session.round}회차 완료. 남은 단어:`, remainingWords.length);\r\n    \r\n    if (remainingWords.length === 0) {\r\n      // 모든 단어를 완료한 경우\r\n      setShowResults(true);\r\n    } else {\r\n      // 다음 회차 학습 자동 시작\r\n      const newSession: LearningSession = {\r\n        id: Date.now().toString(),\r\n        words: remainingWords,\r\n        currentWordIndex: 0,\r\n        completedWords: [],\r\n        triangleWords: [],\r\n        xWords: [],\r\n        isCompleted: false,\r\n        startTime: new Date(),\r\n        round: session.round + 1,\r\n      };\r\n      \r\n             setSession(newSession);\r\n       setCurrentWord(remainingWords[0]);\r\n       setShowMeaning(false);\r\n       setHasUserClickedMeaning(false); // 새로운 회차 시작 시 리셋\r\n       setElapsedTime(0); // 새로운 회차 시작 시 타이머 리셋\r\n      \r\n      // 다음 회차 시작 알림 (오답학습인 경우 다른 메시지)\r\n      const isWrongAnswerLearning = assignment?.isWrongAnswerLearning;\r\n      if (isWrongAnswerLearning) {\r\n        alert(`${session.round}회차 오답학습이 완료되었습니다.\\n동그라미 하지 않은 ${remainingWords.length}개 단어로 ${session.round + 1}회차 오답학습을 시작합니다.`);\r\n      } else {\r\n        alert(`${session.round}회차 학습이 완료되었습니다.\\n동그라미 하지 않은 ${remainingWords.length}개 단어로 ${session.round + 1}회차 학습을 시작합니다.`);\r\n      }\r\n    }\r\n  }, [session, learningResults, assignment]);\r\n\r\n  useEffect(() => {\r\n    if (doubleCheckTimer > 0) {\r\n      const timer = setTimeout(() => {\r\n        setDoubleCheckTimer(prev => Math.max(0, prev - 0.1));\r\n      }, 100);\r\n      return () => clearTimeout(timer);\r\n    } else if (doubleCheckTimer === 0 && showMeaning && firstChoice && !hasUserClickedMeaning) {\r\n      // 사용자가 뜻을 클릭하지 않았을 때만 confirmChoice 호출\r\n      confirmChoice();\r\n    }\r\n  }, [doubleCheckTimer, showMeaning, firstChoice, hasUserClickedMeaning, confirmChoice]);\r\n\r\n  const getProgress = () => {\r\n    if (!session) return 0;\r\n    const totalWords = session.words.length;\r\n    const processedWords = session.currentWordIndex + 1;\r\n    return (processedWords / totalWords) * 100;\r\n  };\r\n\r\n  const handleFinalComplete = () => {\r\n    // 전체 학습에서 최종적으로 완료한 단어 수 계산\r\n    const totalWordsLearned = learningResults[0]?.totalWords || 0;\r\n    \r\n    // 1회차에서 완료한 단어 수\r\n    const firstRoundCompleted = learningResults.length > 1 \r\n      ? totalWordsLearned - learningResults[1].totalWords \r\n      : learningResults[0]?.completedWords || 0;\r\n    \r\n    // 마지막 회차에서 완료한 단어 수\r\n    const lastRoundCompleted = learningResults.length > 1\r\n      ? learningResults[learningResults.length - 1].completedWords\r\n      : 0;\r\n    \r\n    // 실제 최종 완료 단어 수\r\n    const actualFinalCompletedWords = firstRoundCompleted + lastRoundCompleted;\r\n    \r\n    // 결과 배열의 마지막 요소를 수정하여 정확한 완료 단어 수 반영\r\n    const correctedResults = learningResults.map((result, index) => {\r\n      if (index === learningResults.length - 1) {\r\n        return {\r\n          ...result,\r\n          actualFinalCompletedWords // 실제 최종 완료 단어 수 추가\r\n        };\r\n      }\r\n      return result;\r\n    });\r\n    \r\n    onComplete(correctedResults);\r\n  };\r\n\r\n\r\n\r\n  if (!session || !currentWord) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n        <Typography>학습을 준비하는 중...</Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (showResults) {\r\n    // 최종 결과 계산\r\n    const totalWordsLearned = learningResults[0]?.totalWords || 0;\r\n    \r\n    // 전체 학습에서 최종적으로 동그라미(완료)한 단어 수 계산\r\n    // 마지막 회차의 결과가 최종 결과\r\n    const lastRoundResult = learningResults[learningResults.length - 1];\r\n    const finalCompletedWords = lastRoundResult ? lastRoundResult.completedWords : 0;\r\n    \r\n    // 1회차에서 완료한 단어 수 계산 (전체 - 2회차에 넘어간 단어)\r\n    const firstRoundCompleted = learningResults.length > 1 \r\n      ? totalWordsLearned - learningResults[1].totalWords \r\n      : totalWordsLearned;\r\n    \r\n    // 실제 최종 완료 단어 수 = 1회차 완료 + 마지막 회차 완료\r\n    const actualFinalCompletedWords = learningResults.length > 1 \r\n      ? firstRoundCompleted + finalCompletedWords\r\n      : finalCompletedWords;\r\n    \r\n    return (\r\n      <Container maxWidth=\"md\" sx={{ py: 3 }}>\r\n        <Card sx={{ borderRadius: isMobile ? 2 : 1 }}>\r\n          <CardContent sx={{ p: isMobile ? 3 : 2 }}>\r\n            <Box sx={{ textAlign: 'center', mb: 3 }}>\r\n              <CheckCircleIcon sx={{ fontSize: 64, color: 'success.main', mb: 2 }} />\r\n              <Typography variant=\"h5\" sx={{ mb: 1, fontWeight: 600 }}>\r\n                모든 학습 완료!\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\">\r\n                총 {learningResults.length}회차 학습을 완료했습니다.\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Box sx={{ mb: 3 }}>\r\n              <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 600 }}>\r\n                전체 학습 결과\r\n              </Typography>\r\n              \r\n              {/* 회차별 결과 */}\r\n              {learningResults.map((result, index) => (\r\n                <Box key={index} sx={{ mb: 2, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\r\n                  <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 1 }}>\r\n                    {result.round}회차 학습\r\n                  </Typography>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={4}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        완료: {result.completedWords}개\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        재학습: {result.triangleWords}개\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        미완료: {result.xWords}개\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              ))}\r\n              \r\n              {/* 최종 결과 요약 */}\r\n              <Box sx={{ mt: 3, p: 2, bgcolor: 'primary.50', borderRadius: 1 }}>\r\n                <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 1 }}>\r\n                  최종 결과\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  총 {totalWordsLearned}개 단어 중 {actualFinalCompletedWords}개 완료\r\n                  ({Math.round((actualFinalCompletedWords / totalWordsLearned) * 100)}%)\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={handleFinalComplete}\r\n                size={isMobile ? \"large\" : \"medium\"}\r\n              >\r\n                학습 완료\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={onClose}\r\n                size={isMobile ? \"large\" : \"medium\"}\r\n              >\r\n                닫기\r\n              </Button>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ py: 3 }}>\r\n      {/* 헤더 */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n                 <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n           <IconButton onClick={onClose} sx={{ mr: 2 }}>\r\n             <ArrowBackIcon />\r\n           </IconButton>\r\n           <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n             {assignment?.isWrongAnswerLearning ? '오답학습' : '단어 학습'} - {session.round}회차\r\n           </Typography>\r\n           <Typography variant=\"body2\" color=\"text.secondary\" sx={{ ml: 2 }}>\r\n             {formatTime(elapsedTime)}\r\n           </Typography>\r\n         </Box>\r\n        \r\n        <Box sx={{ display: 'flex', gap: 1 }}>\r\n          <IconButton onClick={() => setIsPaused(!isPaused)}>\r\n            {isPaused ? <PlayArrowIcon /> : <PauseIcon />}\r\n          </IconButton>\r\n          <IconButton onClick={onClose}>\r\n            <StopIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* 진행률 */}\r\n      <Box sx={{ mb: 3 }}>\r\n                 <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n           <Typography variant=\"body2\">\r\n             {session.round}회차 진행률: {Math.round(getProgress())}%\r\n           </Typography>\r\n           <Typography variant=\"body2\">\r\n             {session.currentWordIndex + 1} / {session.words.length}\r\n           </Typography>\r\n         </Box>\r\n         \r\n        <LinearProgress\r\n          variant=\"determinate\"\r\n          value={getProgress()}\r\n          sx={{ height: 8, borderRadius: 4 }}\r\n        />\r\n      </Box>\r\n\r\n      {/* 단어 카드 */}\r\n      <Card sx={{ mb: 6, borderRadius: isMobile ? 2 : 1 }}>\r\n        <CardContent sx={{ p: isMobile ? 8 : 7, textAlign: 'center' }}>\r\n          <Typography variant=\"h3\" sx={{ mb: 4, fontWeight: 600 }}>\r\n            {currentWord.english}\r\n          </Typography>\r\n          {currentWord.pronunciation && (\r\n            <Typography variant=\"h6\" color=\"text.secondary\" sx={{ mb: 6, fontStyle: 'italic' }}>\r\n              {currentWord.pronunciation}\r\n            </Typography>\r\n          )}\r\n          {!currentWord.pronunciation && (\r\n            <Box sx={{ mb: 6 }} />\r\n          )}\r\n\r\n          {showMeaning ? (\r\n            <Box>\r\n              <Box\r\n                onClick={handleMistaken}\r\n                sx={{\r\n                  width: '100%',\r\n                  height: 60, // 높이 줄임\r\n                  border: '2px dashed #ccc',\r\n                  borderRadius: 2,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  cursor: 'pointer',\r\n                  backgroundColor: 'rgba(0,0,0,0.02)',\r\n                  mt: 6, // 위쪽 여백 증가\r\n                  mb: 6, // 아래쪽 여백 증가\r\n                  '&:hover': {\r\n                    backgroundColor: 'rgba(0,0,0,0.05)',\r\n                    borderColor: '#999'\r\n                  }\r\n                }}\r\n              >\r\n                <Typography \r\n                  variant=\"h5\" \r\n                  color=\"primary\" \r\n                  sx={{ \r\n                    fontWeight: 600,\r\n                    textAlign: 'center'\r\n                  }}\r\n                >\r\n                  {currentWord.korean}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          ) : (\r\n            <Box>\r\n              <Box sx={{ \r\n                display: 'flex', \r\n                justifyContent: 'center', \r\n                gap: 1,\r\n                height: 60, // 높이 줄임\r\n                mt: 6, // 버튼 위쪽 여백 증가\r\n                mb: 6 // 버튼 아래쪽 여백 추가\r\n              }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"success\"\r\n                  size=\"large\"\r\n                  onClick={() => handleWordCheck('circle')}\r\n                  sx={{ \r\n                    py: 1.5,\r\n                    px: 2,\r\n                    borderRadius: 2,\r\n                    whiteSpace: 'nowrap',\r\n                    fontSize: isMobile ? '0.9rem' : '1rem',\r\n                    minWidth: isMobile ? 100 : 120,\r\n                    height: 60, // 높이 줄임\r\n                    '&:hover': { transform: 'scale(1.02)' }\r\n                  }}\r\n                >\r\n                  <CheckCircleIcon sx={{ mr: 1, fontSize: isMobile ? 20 : 24 }} />\r\n                  다시 안볼래\r\n                </Button>\r\n                \r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"large\"\r\n                  onClick={() => handleWordCheck('triangle')}\r\n                  sx={{ \r\n                    py: 1.5,\r\n                    px: 2,\r\n                    borderRadius: 2,\r\n                    whiteSpace: 'nowrap',\r\n                    fontSize: isMobile ? '0.9rem' : '1rem',\r\n                    minWidth: isMobile ? 100 : 120,\r\n                    height: 60, // 높이 줄임\r\n                    backgroundColor: '#FFD700',\r\n                    color: 'black',\r\n                    '&:hover': { \r\n                      backgroundColor: '#FFC700',\r\n                      transform: 'scale(1.02)' \r\n                    }\r\n                  }}\r\n                >\r\n                  <HelpIcon sx={{ mr: 1, fontSize: isMobile ? 20 : 24 }} />\r\n                  1번은 더보자\r\n                </Button>\r\n                \r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"error\"\r\n                  size=\"large\"\r\n                  onClick={() => handleWordCheck('x')}\r\n                  sx={{ \r\n                    py: 1.5,\r\n                    px: 2,\r\n                    borderRadius: 2,\r\n                    whiteSpace: 'nowrap',\r\n                    fontSize: isMobile ? '0.9rem' : '1rem',\r\n                    minWidth: isMobile ? 100 : 120,\r\n                    height: 60, // 높이 줄임\r\n                    '&:hover': { transform: 'scale(1.02)' }\r\n                  }}\r\n                >\r\n                  <CloseIcon sx={{ mr: 1, fontSize: isMobile ? 20 : 24 }} />\r\n                  완전 모름\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* 학습 통계 */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-around', textAlign: 'center', mt: 3 }}>\r\n        <Box>\r\n          <Typography variant=\"h6\" color=\"success.main\" sx={{ fontWeight: 600 }}>\r\n            {session.completedWords.length}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            완료\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Typography variant=\"h6\" color=\"warning.main\" sx={{ fontWeight: 600 }}>\r\n            {session.triangleWords.length}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            재학습\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Typography variant=\"h6\" color=\"error.main\" sx={{ fontWeight: 600 }}>\r\n            {session.xWords.length}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            미완료\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VocabularyLearning; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
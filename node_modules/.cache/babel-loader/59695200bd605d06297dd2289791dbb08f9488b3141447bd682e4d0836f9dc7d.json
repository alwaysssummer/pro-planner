{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{Box,Typography,Card,CardContent,Button,LinearProgress,IconButton,useTheme,useMediaQuery,Container,Grid}from'@mui/material';import{CheckCircle as CheckCircleIcon,Help as HelpIcon,Close as CloseIcon,ArrowBack as ArrowBackIcon,PlayArrow as PlayArrowIcon,Pause as PauseIcon,Stop as StopIcon}from'@mui/icons-material';import{getAssignedWords}from'../utils/vocabularyData';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const VocabularyLearning=_ref=>{let{assignment,onComplete,onClose,timerDuration=1.5// 기본값 1.5초\n}=_ref;const theme=useTheme();const isMobile=useMediaQuery(theme.breakpoints.down('md'));const[session,setSession]=useState(null);const[currentWord,setCurrentWord]=useState(null);const[showMeaning,setShowMeaning]=useState(false);const[doubleCheckTimer,setDoubleCheckTimer]=useState(0);const[isPaused,setIsPaused]=useState(false);const[showResults,setShowResults]=useState(false);const[firstChoice,setFirstChoice]=useState(null);const[learningResults,setLearningResults]=useState([]);// 학습 결과 저장\nuseEffect(()=>{initializeSession();},[assignment]);const initializeSession=useCallback(()=>{var _assignment$vocabular;// 배정된 과제의 단어 목록 가져오기\nconsole.log('=== VocabularyLearning initializeSession ===');console.log('Assignment object:',assignment);console.log('Assignment type:',typeof assignment);console.log('Assignment keys:',Object.keys(assignment||{}));console.log('Assignment properties:');console.log('  - taskId:',assignment===null||assignment===void 0?void 0:assignment.taskId);console.log('  - taskTitle:',assignment===null||assignment===void 0?void 0:assignment.taskTitle);console.log('  - area:',assignment===null||assignment===void 0?void 0:assignment.area);console.log('  - startUnit:',assignment===null||assignment===void 0?void 0:assignment.startUnit);console.log('  - startDate:',assignment===null||assignment===void 0?void 0:assignment.startDate);console.log('  - weeklySchedule:',assignment===null||assignment===void 0?void 0:assignment.weeklySchedule);console.log('  - vocabularyData:',assignment===null||assignment===void 0?void 0:assignment.vocabularyData);console.log('  - vocabularyData length:',assignment===null||assignment===void 0?void 0:(_assignment$vocabular=assignment.vocabularyData)===null||_assignment$vocabular===void 0?void 0:_assignment$vocabular.length);const assignedWords=getAssignedWords(assignment);console.log('Returned from getAssignedWords:');console.log('  - Words count:',assignedWords.length);console.log('  - First word:',assignedWords[0]);console.log('  - All words:',assignedWords.map(w=>({english:w.english,unit:w.unit})));console.log('=== End initializeSession ===');if(assignedWords.length===0){console.error('No words assigned to this task');alert('학습할 단어가 없습니다. 오늘은 학습일이 아니거나 모든 단원을 완료했을 수 있습니다.');onClose();return;}const newSession={id:Date.now().toString(),words:assignedWords,currentWordIndex:0,completedWords:[],triangleWords:[],xWords:[],isCompleted:false,startTime:new Date(),round:1// 1회차로 시작\n};setSession(newSession);setCurrentWord(assignedWords[0]);},[assignment,onClose]);const handleWordCheck=checkType=>{if(!session||!currentWord)return;setFirstChoice(checkType);setShowMeaning(true);// 타이머 시작\nsetDoubleCheckTimer(timerDuration);};const handleMistaken=()=>{if(!session||!currentWord||!firstChoice)return;const updatedSession={...session};// 기존 선택을 제거하고 x(모르겠어요)로 변경\nupdatedSession.completedWords=updatedSession.completedWords.filter(id=>id!==currentWord.id);updatedSession.triangleWords=updatedSession.triangleWords.filter(id=>id!==currentWord.id);updatedSession.xWords=updatedSession.xWords.filter(id=>id!==currentWord.id);// 모르겠어요로 분류\nupdatedSession.xWords.push(currentWord.id);setSession(updatedSession);setShowMeaning(false);setDoubleCheckTimer(0);setFirstChoice(null);handleNextWord();};const confirmChoice=()=>{if(!session||!currentWord||!firstChoice)return;const updatedSession={...session};// 첫 번째 선택을 확정\nif(firstChoice==='circle'){updatedSession.completedWords.push(currentWord.id);}else if(firstChoice==='triangle'){updatedSession.triangleWords.push(currentWord.id);}else{updatedSession.xWords.push(currentWord.id);}setSession(updatedSession);setShowMeaning(false);setDoubleCheckTimer(0);setFirstChoice(null);handleNextWord();};const completeRound=useCallback(()=>{if(!session)return;const endTime=new Date();// 현재 회차 결과 저장 (각 단어의 상태 포함)\nconst wordStates=session.words.map(word=>{let status;if(session.completedWords.includes(word.id)){status='complete';// 완전히 알고 있어요\n}else if(session.triangleWords.includes(word.id)){status='repeat';// 1번 더 볼래요\n}else if(session.xWords.includes(word.id)){status='unknown';// 모르겠어요\n}else{status='forgot';// 아 몰랐어요 (체크하지 않은 경우)\n}return{word:word,status:status};});const roundResult={round:session.round,totalWords:session.words.length,completedWords:session.completedWords.length,triangleWords:session.triangleWords.length,xWords:session.xWords.length,startTime:session.startTime,endTime:endTime,wordStates:wordStates// 각 단어의 상태 추가\n};const newResults=[...learningResults,roundResult];setLearningResults(newResults);// 동그라미 하지 않은 단어들 확인\nconst remainingWords=session.words.filter(word=>!session.completedWords.includes(word.id));console.log(`${session.round}회차 완료. 남은 단어:`,remainingWords.length);if(remainingWords.length===0){// 모든 단어를 완료한 경우\nsetShowResults(true);}else{// 2회차 학습 자동 시작\nconst newSession={id:Date.now().toString(),words:remainingWords,currentWordIndex:0,completedWords:[],triangleWords:[],xWords:[],isCompleted:false,startTime:new Date(),round:session.round+1};setSession(newSession);setCurrentWord(remainingWords[0]);setShowMeaning(false);// 2회차 시작 알림\nalert(`${session.round}회차 학습이 완료되었습니다.\\n동그라미 하지 않은 ${remainingWords.length}개 단어로 ${session.round+1}회차 학습을 시작합니다.`);}},[session,learningResults]);const handleNextWord=useCallback(()=>{if(!session)return;const nextIndex=session.currentWordIndex+1;if(nextIndex>=session.words.length){// 현재 회차 완료\ncompleteRound();}else{// 다음 단어로\nsetSession({...session,currentWordIndex:nextIndex});setCurrentWord(session.words[nextIndex]);setShowMeaning(false);}},[session,completeRound]);useEffect(()=>{if(doubleCheckTimer>0){const timer=setTimeout(()=>{setDoubleCheckTimer(prev=>Math.max(0,prev-0.1));},100);return()=>clearTimeout(timer);}else if(doubleCheckTimer===0&&showMeaning){confirmChoice();}},[doubleCheckTimer,showMeaning,confirmChoice]);const getProgress=()=>{if(!session)return 0;const totalWords=session.words.length;const processedWords=session.currentWordIndex+1;return processedWords/totalWords*100;};const handleFinalComplete=()=>{var _learningResults$,_learningResults$2;// 전체 학습에서 최종적으로 완료한 단어 수 계산\nconst totalWordsLearned=((_learningResults$=learningResults[0])===null||_learningResults$===void 0?void 0:_learningResults$.totalWords)||0;// 1회차에서 완료한 단어 수\nconst firstRoundCompleted=learningResults.length>1?totalWordsLearned-learningResults[1].totalWords:((_learningResults$2=learningResults[0])===null||_learningResults$2===void 0?void 0:_learningResults$2.completedWords)||0;// 마지막 회차에서 완료한 단어 수\nconst lastRoundCompleted=learningResults.length>1?learningResults[learningResults.length-1].completedWords:0;// 실제 최종 완료 단어 수\nconst actualFinalCompletedWords=firstRoundCompleted+lastRoundCompleted;// 결과 배열의 마지막 요소를 수정하여 정확한 완료 단어 수 반영\nconst correctedResults=learningResults.map((result,index)=>{if(index===learningResults.length-1){return{...result,actualFinalCompletedWords// 실제 최종 완료 단어 수 추가\n};}return result;});onComplete(correctedResults);};if(!session||!currentWord){return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',height:'100vh'},children:/*#__PURE__*/_jsx(Typography,{children:\"\\uD559\\uC2B5\\uC744 \\uC900\\uBE44\\uD558\\uB294 \\uC911...\"})});}if(showResults){var _learningResults$3;// 최종 결과 계산\nconst totalWordsLearned=((_learningResults$3=learningResults[0])===null||_learningResults$3===void 0?void 0:_learningResults$3.totalWords)||0;// 전체 학습에서 최종적으로 동그라미(완료)한 단어 수 계산\n// 마지막 회차의 결과가 최종 결과\nconst lastRoundResult=learningResults[learningResults.length-1];const finalCompletedWords=lastRoundResult?lastRoundResult.completedWords:0;// 1회차에서 완료한 단어 수 계산 (전체 - 2회차에 넘어간 단어)\nconst firstRoundCompleted=learningResults.length>1?totalWordsLearned-learningResults[1].totalWords:totalWordsLearned;// 실제 최종 완료 단어 수 = 1회차 완료 + 마지막 회차 완료\nconst actualFinalCompletedWords=learningResults.length>1?firstRoundCompleted+finalCompletedWords:finalCompletedWords;return/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",sx:{py:3},children:/*#__PURE__*/_jsx(Card,{sx:{borderRadius:isMobile?2:1},children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:isMobile?3:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center',mb:3},children:[/*#__PURE__*/_jsx(CheckCircleIcon,{sx:{fontSize:64,color:'success.main',mb:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",sx:{mb:1,fontWeight:600},children:\"\\uBAA8\\uB4E0 \\uD559\\uC2B5 \\uC644\\uB8CC!\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",color:\"text.secondary\",children:[\"\\uCD1D \",learningResults.length,\"\\uD68C\\uCC28 \\uD559\\uC2B5\\uC744 \\uC644\\uB8CC\\uD588\\uC2B5\\uB2C8\\uB2E4.\"]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2,fontWeight:600},children:\"\\uC804\\uCCB4 \\uD559\\uC2B5 \\uACB0\\uACFC\"}),learningResults.map((result,index)=>/*#__PURE__*/_jsxs(Box,{sx:{mb:2,p:2,bgcolor:'grey.50',borderRadius:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",sx:{fontWeight:600,mb:1},children:[result.round,\"\\uD68C\\uCC28 \\uD559\\uC2B5\"]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"\\uC644\\uB8CC: \",result.completedWords,\"\\uAC1C\"]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"\\uC7AC\\uD559\\uC2B5: \",result.triangleWords,\"\\uAC1C\"]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"\\uBBF8\\uC644\\uB8CC: \",result.xWords,\"\\uAC1C\"]})})]})]},index)),/*#__PURE__*/_jsxs(Box,{sx:{mt:3,p:2,bgcolor:'primary.50',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{fontWeight:600,mb:1},children:\"\\uCD5C\\uC885 \\uACB0\\uACFC\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"\\uCD1D \",totalWordsLearned,\"\\uAC1C \\uB2E8\\uC5B4 \\uC911 \",actualFinalCompletedWords,\"\\uAC1C \\uC644\\uB8CC (\",Math.round(actualFinalCompletedWords/totalWordsLearned*100),\"%)\"]})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:2,justifyContent:'center'},children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleFinalComplete,size:isMobile?\"large\":\"medium\",children:\"\\uD559\\uC2B5 \\uC644\\uB8CC\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:onClose,size:isMobile?\"large\":\"medium\",children:\"\\uB2EB\\uAE30\"})]})]})})});}return/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",sx:{py:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(IconButton,{onClick:onClose,sx:{mr:2},children:/*#__PURE__*/_jsx(ArrowBackIcon,{})}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{fontWeight:600},children:[\"\\uB2E8\\uC5B4 \\uD559\\uC2B5 - \",session.round,\"\\uD68C\\uCC28\"]})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1},children:[/*#__PURE__*/_jsx(IconButton,{onClick:()=>setIsPaused(!isPaused),children:isPaused?/*#__PURE__*/_jsx(PlayArrowIcon,{}):/*#__PURE__*/_jsx(PauseIcon,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:onClose,children:/*#__PURE__*/_jsx(StopIcon,{})})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[session.round,\"\\uD68C\\uCC28 \\uC9C4\\uD589\\uB960: \",Math.round(getProgress()),\"%\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[session.currentWordIndex+1,\" / \",session.words.length]})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:getProgress(),sx:{height:8,borderRadius:4}})]}),/*#__PURE__*/_jsx(Card,{sx:{mb:3,borderRadius:isMobile?2:1},children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:isMobile?4:3,textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",sx:{mb:1,fontWeight:600},children:currentWord.english}),currentWord.pronunciation&&/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"text.secondary\",sx:{mb:3,fontStyle:'italic'},children:currentWord.pronunciation}),showMeaning?/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",color:\"primary\",sx:{mb:3,fontWeight:600},children:currentWord.korean}),firstChoice==='circle'&&/*#__PURE__*/_jsx(Box,{sx:{mb:3},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"inherit\",size:\"large\",fullWidth:true,onClick:handleMistaken,sx:{py:2,borderRadius:2,backgroundColor:'black',color:'white','&:hover':{backgroundColor:'grey.900',transform:'scale(1.02)'}},children:\"\\uC544 \\uBAB0\\uB790\\uC5B4\\uC694\"})})]}):/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'center',gap:1},children:[/*#__PURE__*/_jsxs(Button,{variant:\"contained\",color:\"success\",size:\"large\",onClick:()=>handleWordCheck('circle'),sx:{py:2,px:2,borderRadius:2,whiteSpace:'nowrap',fontSize:isMobile?'0.9rem':'1rem',minWidth:isMobile?100:120,'&:hover':{transform:'scale(1.02)'}},children:[/*#__PURE__*/_jsx(CheckCircleIcon,{sx:{mr:1,fontSize:isMobile?20:24}}),\"\\uB2E4\\uC2DC \\uC548\\uBCFC\\uB798\"]}),/*#__PURE__*/_jsxs(Button,{variant:\"contained\",size:\"large\",onClick:()=>handleWordCheck('triangle'),sx:{py:2,px:2,borderRadius:2,whiteSpace:'nowrap',fontSize:isMobile?'0.9rem':'1rem',minWidth:isMobile?100:120,backgroundColor:'#FFD700',color:'black','&:hover':{backgroundColor:'#FFC700',transform:'scale(1.02)'}},children:[/*#__PURE__*/_jsx(HelpIcon,{sx:{mr:1,fontSize:isMobile?20:24}}),\"1\\uBC88\\uC740 \\uB354\\uBCF4\\uC790\"]}),/*#__PURE__*/_jsxs(Button,{variant:\"contained\",color:\"error\",size:\"large\",onClick:()=>handleWordCheck('x'),sx:{py:2,px:2,borderRadius:2,whiteSpace:'nowrap',fontSize:isMobile?'0.9rem':'1rem',minWidth:isMobile?100:120,'&:hover':{transform:'scale(1.02)'}},children:[/*#__PURE__*/_jsx(CloseIcon,{sx:{mr:1,fontSize:isMobile?20:24}}),\"\\uC644\\uC804 \\uBAA8\\uB984\"]})]})})]})}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-around',textAlign:'center'},children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"success.main\",sx:{fontWeight:600},children:session.completedWords.length}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"\\uC644\\uB8CC\"})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"warning.main\",sx:{fontWeight:600},children:session.triangleWords.length}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"\\uC7AC\\uD559\\uC2B5\"})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"error.main\",sx:{fontWeight:600},children:session.xWords.length}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"\\uBBF8\\uC644\\uB8CC\"})]})]})]});};export default VocabularyLearning;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","Typography","Card","CardContent","Button","LinearProgress","IconButton","useTheme","useMediaQuery","Container","Grid","CheckCircle","CheckCircleIcon","Help","HelpIcon","Close","CloseIcon","ArrowBack","ArrowBackIcon","PlayArrow","PlayArrowIcon","Pause","PauseIcon","Stop","StopIcon","getAssignedWords","jsx","_jsx","jsxs","_jsxs","VocabularyLearning","_ref","assignment","onComplete","onClose","timerDuration","theme","isMobile","breakpoints","down","session","setSession","currentWord","setCurrentWord","showMeaning","setShowMeaning","doubleCheckTimer","setDoubleCheckTimer","isPaused","setIsPaused","showResults","setShowResults","firstChoice","setFirstChoice","learningResults","setLearningResults","initializeSession","_assignment$vocabular","console","log","Object","keys","taskId","taskTitle","area","startUnit","startDate","weeklySchedule","vocabularyData","length","assignedWords","map","w","english","unit","error","alert","newSession","id","Date","now","toString","words","currentWordIndex","completedWords","triangleWords","xWords","isCompleted","startTime","round","handleWordCheck","checkType","handleMistaken","updatedSession","filter","push","handleNextWord","confirmChoice","completeRound","endTime","wordStates","word","status","includes","roundResult","totalWords","newResults","remainingWords","nextIndex","timer","setTimeout","prev","Math","max","clearTimeout","getProgress","processedWords","handleFinalComplete","_learningResults$","_learningResults$2","totalWordsLearned","firstRoundCompleted","lastRoundCompleted","actualFinalCompletedWords","correctedResults","result","index","sx","display","justifyContent","alignItems","height","children","_learningResults$3","lastRoundResult","finalCompletedWords","maxWidth","py","borderRadius","p","textAlign","mb","fontSize","color","variant","fontWeight","bgcolor","container","spacing","item","xs","mt","gap","onClick","size","mr","value","pronunciation","fontStyle","korean","fullWidth","backgroundColor","transform","px","whiteSpace","minWidth"],"sources":["C:/Users/user/pro_planner/src/components/VocabularyLearning.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  LinearProgress,\r\n  IconButton,\r\n  useTheme,\r\n  useMediaQuery,\r\n  Container,\r\n  Grid,\r\n} from '@mui/material';\r\nimport {\r\n  CheckCircle as CheckCircleIcon,\r\n  Help as HelpIcon,\r\n  Close as CloseIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  PlayArrow as PlayArrowIcon,\r\n  Pause as PauseIcon,\r\n  Stop as StopIcon,\r\n} from '@mui/icons-material';\r\nimport { getAssignedWords, VocabularyWord } from '../utils/vocabularyData';\r\n\r\ninterface LearningSession {\r\n  id: string;\r\n  words: VocabularyWord[];\r\n  currentWordIndex: number;\r\n  completedWords: string[];\r\n  triangleWords: string[];\r\n  xWords: string[];\r\n  isCompleted: boolean;\r\n  startTime: Date;\r\n  endTime?: Date;\r\n  round: number; // 회차 추가\r\n}\r\n\r\ninterface LearningResult {\r\n  round: number;\r\n  totalWords: number;\r\n  completedWords: number;\r\n  triangleWords: number;\r\n  xWords: number;\r\n  startTime: Date;\r\n  endTime: Date;\r\n  wordStates?: Array<{\r\n    word: VocabularyWord;\r\n    status: 'complete' | 'repeat' | 'unknown' | 'forgot';\r\n  }>;\r\n}\r\n\r\ninterface VocabularyLearningProps {\r\n  assignment: any; // TaskAssignment 타입\r\n  onComplete: (results: LearningResult[]) => void; // 결과 배열로 변경\r\n  onClose: () => void;\r\n  timerDuration?: number; // 타이머 시간 (초)\r\n}\r\n\r\nconst VocabularyLearning: React.FC<VocabularyLearningProps> = ({\r\n  assignment,\r\n  onComplete,\r\n  onClose,\r\n  timerDuration = 1.5, // 기본값 1.5초\r\n}) => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n  \r\n  const [session, setSession] = useState<LearningSession | null>(null);\r\n  const [currentWord, setCurrentWord] = useState<VocabularyWord | null>(null);\r\n  const [showMeaning, setShowMeaning] = useState(false);\r\n  const [doubleCheckTimer, setDoubleCheckTimer] = useState<number>(0);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [firstChoice, setFirstChoice] = useState<'circle' | 'triangle' | 'x' | null>(null);\r\n  const [learningResults, setLearningResults] = useState<LearningResult[]>([]); // 학습 결과 저장\r\n\r\n  useEffect(() => {\r\n    initializeSession();\r\n  }, [assignment]);\r\n\r\n  const initializeSession = useCallback(() => {\r\n    // 배정된 과제의 단어 목록 가져오기\r\n    console.log('=== VocabularyLearning initializeSession ===');\r\n    console.log('Assignment object:', assignment);\r\n    console.log('Assignment type:', typeof assignment);\r\n    console.log('Assignment keys:', Object.keys(assignment || {}));\r\n    console.log('Assignment properties:');\r\n    console.log('  - taskId:', assignment?.taskId);\r\n    console.log('  - taskTitle:', assignment?.taskTitle);\r\n    console.log('  - area:', assignment?.area);\r\n    console.log('  - startUnit:', assignment?.startUnit);\r\n    console.log('  - startDate:', assignment?.startDate);\r\n    console.log('  - weeklySchedule:', assignment?.weeklySchedule);\r\n    console.log('  - vocabularyData:', assignment?.vocabularyData);\r\n    console.log('  - vocabularyData length:', assignment?.vocabularyData?.length);\r\n    \r\n    const assignedWords = getAssignedWords(assignment);\r\n    \r\n    console.log('Returned from getAssignedWords:');\r\n    console.log('  - Words count:', assignedWords.length);\r\n    console.log('  - First word:', assignedWords[0]);\r\n    console.log('  - All words:', assignedWords.map(w => ({ english: w.english, unit: w.unit })));\r\n    console.log('=== End initializeSession ===');\r\n    \r\n    if (assignedWords.length === 0) {\r\n      console.error('No words assigned to this task');\r\n      alert('학습할 단어가 없습니다. 오늘은 학습일이 아니거나 모든 단원을 완료했을 수 있습니다.');\r\n      onClose();\r\n      return;\r\n    }\r\n    \r\n    const newSession: LearningSession = {\r\n      id: Date.now().toString(),\r\n      words: assignedWords,\r\n      currentWordIndex: 0,\r\n      completedWords: [],\r\n      triangleWords: [],\r\n      xWords: [],\r\n      isCompleted: false,\r\n      startTime: new Date(),\r\n      round: 1, // 1회차로 시작\r\n    };\r\n    setSession(newSession);\r\n    setCurrentWord(assignedWords[0]);\r\n  }, [assignment, onClose]);\r\n\r\n  const handleWordCheck = (checkType: 'circle' | 'triangle' | 'x') => {\r\n    if (!session || !currentWord) return;\r\n\r\n    setFirstChoice(checkType);\r\n    setShowMeaning(true);\r\n    \r\n    // 타이머 시작\r\n    setDoubleCheckTimer(timerDuration);\r\n  };\r\n\r\n  const handleMistaken = () => {\r\n    if (!session || !currentWord || !firstChoice) return;\r\n\r\n    const updatedSession = { ...session };\r\n    \r\n    // 기존 선택을 제거하고 x(모르겠어요)로 변경\r\n    updatedSession.completedWords = updatedSession.completedWords.filter(id => id !== currentWord.id);\r\n    updatedSession.triangleWords = updatedSession.triangleWords.filter(id => id !== currentWord.id);\r\n    updatedSession.xWords = updatedSession.xWords.filter(id => id !== currentWord.id);\r\n    \r\n    // 모르겠어요로 분류\r\n    updatedSession.xWords.push(currentWord.id);\r\n\r\n    setSession(updatedSession);\r\n    setShowMeaning(false);\r\n    setDoubleCheckTimer(0);\r\n    setFirstChoice(null);\r\n    handleNextWord();\r\n  };\r\n\r\n  const confirmChoice = () => {\r\n    if (!session || !currentWord || !firstChoice) return;\r\n\r\n    const updatedSession = { ...session };\r\n    \r\n    // 첫 번째 선택을 확정\r\n    if (firstChoice === 'circle') {\r\n      updatedSession.completedWords.push(currentWord.id);\r\n    } else if (firstChoice === 'triangle') {\r\n      updatedSession.triangleWords.push(currentWord.id);\r\n    } else {\r\n      updatedSession.xWords.push(currentWord.id);\r\n    }\r\n\r\n    setSession(updatedSession);\r\n    setShowMeaning(false);\r\n    setDoubleCheckTimer(0);\r\n    setFirstChoice(null);\r\n    handleNextWord();\r\n  };\r\n\r\n  const completeRound = useCallback(() => {\r\n    if (!session) return;\r\n    \r\n    const endTime = new Date();\r\n    \r\n    // 현재 회차 결과 저장 (각 단어의 상태 포함)\r\n    const wordStates = session.words.map(word => {\r\n      let status: 'complete' | 'repeat' | 'unknown' | 'forgot';\r\n      \r\n      if (session.completedWords.includes(word.id)) {\r\n        status = 'complete'; // 완전히 알고 있어요\r\n      } else if (session.triangleWords.includes(word.id)) {\r\n        status = 'repeat'; // 1번 더 볼래요\r\n      } else if (session.xWords.includes(word.id)) {\r\n        status = 'unknown'; // 모르겠어요\r\n      } else {\r\n        status = 'forgot'; // 아 몰랐어요 (체크하지 않은 경우)\r\n      }\r\n      \r\n      return {\r\n        word: word,\r\n        status: status\r\n      };\r\n    });\r\n    \r\n    const roundResult: LearningResult = {\r\n      round: session.round,\r\n      totalWords: session.words.length,\r\n      completedWords: session.completedWords.length,\r\n      triangleWords: session.triangleWords.length,\r\n      xWords: session.xWords.length,\r\n      startTime: session.startTime,\r\n      endTime: endTime,\r\n      wordStates: wordStates, // 각 단어의 상태 추가\r\n    };\r\n    \r\n    const newResults = [...learningResults, roundResult];\r\n    setLearningResults(newResults);\r\n    \r\n    // 동그라미 하지 않은 단어들 확인\r\n    const remainingWords = session.words.filter(word => \r\n      !session.completedWords.includes(word.id)\r\n    );\r\n    \r\n    console.log(`${session.round}회차 완료. 남은 단어:`, remainingWords.length);\r\n    \r\n    if (remainingWords.length === 0) {\r\n      // 모든 단어를 완료한 경우\r\n      setShowResults(true);\r\n    } else {\r\n      // 2회차 학습 자동 시작\r\n      const newSession: LearningSession = {\r\n        id: Date.now().toString(),\r\n        words: remainingWords,\r\n        currentWordIndex: 0,\r\n        completedWords: [],\r\n        triangleWords: [],\r\n        xWords: [],\r\n        isCompleted: false,\r\n        startTime: new Date(),\r\n        round: session.round + 1,\r\n      };\r\n      \r\n      setSession(newSession);\r\n      setCurrentWord(remainingWords[0]);\r\n      setShowMeaning(false);\r\n      \r\n      // 2회차 시작 알림\r\n      alert(`${session.round}회차 학습이 완료되었습니다.\\n동그라미 하지 않은 ${remainingWords.length}개 단어로 ${session.round + 1}회차 학습을 시작합니다.`);\r\n    }\r\n  }, [session, learningResults]);\r\n\r\n  const handleNextWord = useCallback(() => {\r\n    if (!session) return;\r\n\r\n    const nextIndex = session.currentWordIndex + 1;\r\n    \r\n    if (nextIndex >= session.words.length) {\r\n      // 현재 회차 완료\r\n      completeRound();\r\n    } else {\r\n      // 다음 단어로\r\n      setSession({ ...session, currentWordIndex: nextIndex });\r\n      setCurrentWord(session.words[nextIndex]);\r\n      setShowMeaning(false);\r\n    }\r\n  }, [session, completeRound]);\r\n\r\n  useEffect(() => {\r\n    if (doubleCheckTimer > 0) {\r\n      const timer = setTimeout(() => {\r\n        setDoubleCheckTimer(prev => Math.max(0, prev - 0.1));\r\n      }, 100);\r\n      return () => clearTimeout(timer);\r\n    } else if (doubleCheckTimer === 0 && showMeaning) {\r\n      confirmChoice();\r\n    }\r\n  }, [doubleCheckTimer, showMeaning, confirmChoice]);\r\n\r\n  const getProgress = () => {\r\n    if (!session) return 0;\r\n    const totalWords = session.words.length;\r\n    const processedWords = session.currentWordIndex + 1;\r\n    return (processedWords / totalWords) * 100;\r\n  };\r\n\r\n  const handleFinalComplete = () => {\r\n    // 전체 학습에서 최종적으로 완료한 단어 수 계산\r\n    const totalWordsLearned = learningResults[0]?.totalWords || 0;\r\n    \r\n    // 1회차에서 완료한 단어 수\r\n    const firstRoundCompleted = learningResults.length > 1 \r\n      ? totalWordsLearned - learningResults[1].totalWords \r\n      : learningResults[0]?.completedWords || 0;\r\n    \r\n    // 마지막 회차에서 완료한 단어 수\r\n    const lastRoundCompleted = learningResults.length > 1\r\n      ? learningResults[learningResults.length - 1].completedWords\r\n      : 0;\r\n    \r\n    // 실제 최종 완료 단어 수\r\n    const actualFinalCompletedWords = firstRoundCompleted + lastRoundCompleted;\r\n    \r\n    // 결과 배열의 마지막 요소를 수정하여 정확한 완료 단어 수 반영\r\n    const correctedResults = learningResults.map((result, index) => {\r\n      if (index === learningResults.length - 1) {\r\n        return {\r\n          ...result,\r\n          actualFinalCompletedWords // 실제 최종 완료 단어 수 추가\r\n        };\r\n      }\r\n      return result;\r\n    });\r\n    \r\n    onComplete(correctedResults);\r\n  };\r\n\r\n  if (!session || !currentWord) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n        <Typography>학습을 준비하는 중...</Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (showResults) {\r\n    // 최종 결과 계산\r\n    const totalWordsLearned = learningResults[0]?.totalWords || 0;\r\n    \r\n    // 전체 학습에서 최종적으로 동그라미(완료)한 단어 수 계산\r\n    // 마지막 회차의 결과가 최종 결과\r\n    const lastRoundResult = learningResults[learningResults.length - 1];\r\n    const finalCompletedWords = lastRoundResult ? lastRoundResult.completedWords : 0;\r\n    \r\n    // 1회차에서 완료한 단어 수 계산 (전체 - 2회차에 넘어간 단어)\r\n    const firstRoundCompleted = learningResults.length > 1 \r\n      ? totalWordsLearned - learningResults[1].totalWords \r\n      : totalWordsLearned;\r\n    \r\n    // 실제 최종 완료 단어 수 = 1회차 완료 + 마지막 회차 완료\r\n    const actualFinalCompletedWords = learningResults.length > 1 \r\n      ? firstRoundCompleted + finalCompletedWords\r\n      : finalCompletedWords;\r\n    \r\n    return (\r\n      <Container maxWidth=\"md\" sx={{ py: 3 }}>\r\n        <Card sx={{ borderRadius: isMobile ? 2 : 1 }}>\r\n          <CardContent sx={{ p: isMobile ? 3 : 2 }}>\r\n            <Box sx={{ textAlign: 'center', mb: 3 }}>\r\n              <CheckCircleIcon sx={{ fontSize: 64, color: 'success.main', mb: 2 }} />\r\n              <Typography variant=\"h5\" sx={{ mb: 1, fontWeight: 600 }}>\r\n                모든 학습 완료!\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\">\r\n                총 {learningResults.length}회차 학습을 완료했습니다.\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Box sx={{ mb: 3 }}>\r\n              <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 600 }}>\r\n                전체 학습 결과\r\n              </Typography>\r\n              \r\n              {/* 회차별 결과 */}\r\n              {learningResults.map((result, index) => (\r\n                <Box key={index} sx={{ mb: 2, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\r\n                  <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 1 }}>\r\n                    {result.round}회차 학습\r\n                  </Typography>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={4}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        완료: {result.completedWords}개\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        재학습: {result.triangleWords}개\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        미완료: {result.xWords}개\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              ))}\r\n              \r\n              {/* 최종 결과 요약 */}\r\n              <Box sx={{ mt: 3, p: 2, bgcolor: 'primary.50', borderRadius: 1 }}>\r\n                <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 1 }}>\r\n                  최종 결과\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  총 {totalWordsLearned}개 단어 중 {actualFinalCompletedWords}개 완료\r\n                  ({Math.round((actualFinalCompletedWords / totalWordsLearned) * 100)}%)\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={handleFinalComplete}\r\n                size={isMobile ? \"large\" : \"medium\"}\r\n              >\r\n                학습 완료\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={onClose}\r\n                size={isMobile ? \"large\" : \"medium\"}\r\n              >\r\n                닫기\r\n              </Button>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ py: 3 }}>\r\n      {/* 헤더 */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <IconButton onClick={onClose} sx={{ mr: 2 }}>\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n            단어 학습 - {session.round}회차\r\n          </Typography>\r\n        </Box>\r\n        \r\n        <Box sx={{ display: 'flex', gap: 1 }}>\r\n          <IconButton onClick={() => setIsPaused(!isPaused)}>\r\n            {isPaused ? <PlayArrowIcon /> : <PauseIcon />}\r\n          </IconButton>\r\n          <IconButton onClick={onClose}>\r\n            <StopIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* 진행률 */}\r\n      <Box sx={{ mb: 3 }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n          <Typography variant=\"body2\">\r\n            {session.round}회차 진행률: {Math.round(getProgress())}%\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            {session.currentWordIndex + 1} / {session.words.length}\r\n          </Typography>\r\n        </Box>\r\n        <LinearProgress\r\n          variant=\"determinate\"\r\n          value={getProgress()}\r\n          sx={{ height: 8, borderRadius: 4 }}\r\n        />\r\n      </Box>\r\n\r\n      {/* 단어 카드 */}\r\n      <Card sx={{ mb: 3, borderRadius: isMobile ? 2 : 1 }}>\r\n        <CardContent sx={{ p: isMobile ? 4 : 3, textAlign: 'center' }}>\r\n                     <Typography variant=\"h3\" sx={{ mb: 1, fontWeight: 600 }}>\r\n             {currentWord.english}\r\n           </Typography>\r\n           {currentWord.pronunciation && (\r\n             <Typography variant=\"h6\" color=\"text.secondary\" sx={{ mb: 3, fontStyle: 'italic' }}>\r\n               {currentWord.pronunciation}\r\n             </Typography>\r\n           )}\r\n\r\n          {showMeaning ? (\r\n            <Box>\r\n              <Typography variant=\"h5\" color=\"primary\" sx={{ mb: 3, fontWeight: 600 }}>\r\n                {currentWord.korean}\r\n              </Typography>\r\n              \r\n                             {firstChoice === 'circle' && (\r\n                 <Box sx={{ mb: 3 }}>\r\n                   <Button\r\n                     variant=\"contained\"\r\n                     color=\"inherit\"\r\n                     size=\"large\"\r\n                     fullWidth\r\n                     onClick={handleMistaken}\r\n                     sx={{ \r\n                       py: 2,\r\n                       borderRadius: 2,\r\n                       backgroundColor: 'black',\r\n                       color: 'white',\r\n                       '&:hover': { \r\n                         backgroundColor: 'grey.900',\r\n                         transform: 'scale(1.02)' \r\n                       }\r\n                     }}\r\n                   >\r\n                     아 몰랐어요\r\n                   </Button>\r\n                 </Box>\r\n               )}\r\n\r\n\r\n            </Box>\r\n          ) : (\r\n                         <Box>\r\n              \r\n                             <Box sx={{ display: 'flex', justifyContent: 'center', gap: 1 }}>\r\n                 <Button\r\n                   variant=\"contained\"\r\n                   color=\"success\"\r\n                   size=\"large\"\r\n                   onClick={() => handleWordCheck('circle')}\r\n                   sx={{ \r\n                     py: 2,\r\n                     px: 2,\r\n                     borderRadius: 2,\r\n                     whiteSpace: 'nowrap',\r\n                     fontSize: isMobile ? '0.9rem' : '1rem',\r\n                     minWidth: isMobile ? 100 : 120,\r\n                     '&:hover': { transform: 'scale(1.02)' }\r\n                   }}\r\n                 >\r\n                   <CheckCircleIcon sx={{ mr: 1, fontSize: isMobile ? 20 : 24 }} />\r\n                   다시 안볼래\r\n                 </Button>\r\n                 \r\n                                   <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    onClick={() => handleWordCheck('triangle')}\r\n                    sx={{ \r\n                      py: 2,\r\n                      px: 2,\r\n                      borderRadius: 2,\r\n                      whiteSpace: 'nowrap',\r\n                      fontSize: isMobile ? '0.9rem' : '1rem',\r\n                      minWidth: isMobile ? 100 : 120,\r\n                      backgroundColor: '#FFD700',\r\n                      color: 'black',\r\n                      '&:hover': { \r\n                        backgroundColor: '#FFC700',\r\n                        transform: 'scale(1.02)' \r\n                      }\r\n                    }}\r\n                  >\r\n                    <HelpIcon sx={{ mr: 1, fontSize: isMobile ? 20 : 24 }} />\r\n                    1번은 더보자\r\n                  </Button>\r\n                 \r\n                 <Button\r\n                   variant=\"contained\"\r\n                   color=\"error\"\r\n                   size=\"large\"\r\n                   onClick={() => handleWordCheck('x')}\r\n                   sx={{ \r\n                     py: 2,\r\n                     px: 2,\r\n                     borderRadius: 2,\r\n                     whiteSpace: 'nowrap',\r\n                     fontSize: isMobile ? '0.9rem' : '1rem',\r\n                     minWidth: isMobile ? 100 : 120,\r\n                     '&:hover': { transform: 'scale(1.02)' }\r\n                   }}\r\n                 >\r\n                   <CloseIcon sx={{ mr: 1, fontSize: isMobile ? 20 : 24 }} />\r\n                   완전 모름\r\n                 </Button>\r\n               </Box>\r\n            </Box>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* 학습 통계 */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-around', textAlign: 'center' }}>\r\n        <Box>\r\n          <Typography variant=\"h6\" color=\"success.main\" sx={{ fontWeight: 600 }}>\r\n            {session.completedWords.length}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            완료\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Typography variant=\"h6\" color=\"warning.main\" sx={{ fontWeight: 600 }}>\r\n            {session.triangleWords.length}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            재학습\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Typography variant=\"h6\" color=\"error.main\" sx={{ fontWeight: 600 }}>\r\n            {session.xWords.length}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            미완료\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VocabularyLearning; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
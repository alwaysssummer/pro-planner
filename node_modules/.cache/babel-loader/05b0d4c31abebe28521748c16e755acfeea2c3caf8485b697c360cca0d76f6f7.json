{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\pro_planner\\\\src\\\\components\\\\VocabularyEvaluation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Card, CardContent, Button, TextField, LinearProgress, IconButton, useTheme, useMediaQuery, Container, Alert, Chip } from '@mui/material';\nimport { CheckCircle as CheckCircleIcon, Close as CloseIcon, PlayArrow as PlayArrowIcon, Send as SendIcon, Refresh as RefreshIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VocabularyEvaluation = ({\n  vocabularyData,\n  onComplete,\n  onClose\n}) => {\n  _s();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [isEvaluating, setIsEvaluating] = useState(false);\n  const [evaluationResults, setEvaluationResults] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [currentResult, setCurrentResult] = useState(null);\n  const [autoNextTimer, setAutoNextTimer] = useState(null);\n\n  // 라운드 관리 상태\n  const [currentRound, setCurrentRound] = useState(1);\n  const [wordsToEvaluate, setWordsToEvaluate] = useState(vocabularyData);\n  const [allResults, setAllResults] = useState([]);\n\n  // 100점일 때만 자동으로 다음 단어 이동\n  useEffect(() => {\n    if (showResult && currentResult && currentResult.score === 100) {\n      // 기존 타이머가 있다면 정리\n      if (autoNextTimer) {\n        clearTimeout(autoNextTimer);\n      }\n\n      // 3초 후 자동으로 다음 단어로 이동 (100점일 때만)\n      const timer = setTimeout(() => {\n        handleNextWord();\n      }, 3000);\n      setAutoNextTimer(timer);\n    }\n\n    // 클린업 함수\n    return () => {\n      if (autoNextTimer) {\n        clearTimeout(autoNextTimer);\n        setAutoNextTimer(null);\n      }\n    };\n  }, [showResult, currentResult]);\n\n  // 데이터 유효성 검사\n  if (!vocabularyData || vocabularyData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        py: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          borderRadius: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            p: 3,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"error\",\n            children: \"\\uD3C9\\uAC00\\uD560 \\uB2E8\\uC5B4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            sx: {\n              mt: 2\n            },\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n  const currentWord = wordsToEvaluate[currentWordIndex];\n  const progress = (currentWordIndex + 1) / wordsToEvaluate.length * 100;\n\n  // 디버깅 로그 추가\n  console.log('=== VocabularyEvaluation 디버깅 ===');\n  console.log('vocabularyData:', vocabularyData);\n  console.log('currentWordIndex:', currentWordIndex);\n  console.log('currentWord:', currentWord);\n  console.log('currentWord.word:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.word);\n  console.log('currentWord.meaning:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.meaning);\n\n  // 현재 단어가 유효한지 확인\n  if (!currentWord) {\n    console.error('currentWord가 undefined입니다');\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        py: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          borderRadius: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            p: 3,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"error\",\n            children: \"\\uB2E8\\uC5B4 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC62C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            sx: {\n              mt: 2\n            },\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n  const evaluateWithGemini = async (userAnswer, correctAnswer, word) => {\n    try {\n      // API 키를 직접 설정 (환경변수 문제 해결)\n      const GEMINI_API_KEY = 'AIzaSyDQJ6SXBexKbCGeU-DXWCVmtfCJ56gAATs';\n      console.log('=== Gemini API 디버깅 ===');\n      console.log('Gemini API 키 설정됨:', !!GEMINI_API_KEY);\n      console.log('API 키 앞 10자리:', GEMINI_API_KEY.substring(0, 10) + '...');\n      const prompt = `다음 영어 단어의 뜻을 채점해주세요:\n영어 단어: ${word}\n정답: ${correctAnswer}\n사용자 답변: ${userAnswer}\n점수만 숫자로 답변해주세요. (100: 정답, 50-90: 부분정답, 0: 오답)`;\n      console.log('Gemini API 호출 시작...');\n      console.log('프롬프트:', prompt);\n      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${GEMINI_API_KEY}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: prompt\n            }]\n          }]\n        })\n      });\n      console.log('API 응답 상태:', response.status);\n      console.log('API 응답 OK:', response.ok);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API 응답 오류 내용:', errorText);\n        throw new Error(`API 응답 오류: ${response.status} - ${errorText}`);\n      }\n      const data = await response.json();\n      console.log('API 응답 데이터:', data);\n      if (!data.candidates || !data.candidates[0] || !data.candidates[0].content) {\n        console.error('API 응답 형식 오류:', data);\n        throw new Error('API 응답 형식 오류');\n      }\n      const scoreText = data.candidates[0].content.parts[0].text.trim();\n      console.log('추출된 점수 텍스트:', scoreText);\n      const score = parseInt(scoreText);\n      console.log('파싱된 점수:', score);\n      if (isNaN(score)) {\n        throw new Error(`점수 파싱 오류: \"${scoreText}\"`);\n      }\n      const finalScore = Math.max(0, Math.min(100, score));\n      console.log('최종 점수:', finalScore);\n      return finalScore;\n    } catch (error) {\n      console.error('Gemini API 호출 실패:', error);\n\n      // API 실패 시 기본 채점 로직 (간단한 문자열 비교)\n      const cleanUser = userAnswer.toLowerCase().trim();\n      const cleanCorrect = correctAnswer.toLowerCase().trim();\n      if (cleanUser === cleanCorrect) {\n        console.log('API 실패 시 기본 채점: 완전 일치 - 100점');\n        return 100;\n      } else if (cleanUser.includes(cleanCorrect) || cleanCorrect.includes(cleanUser)) {\n        console.log('API 실패 시 기본 채점: 부분 일치 - 70점');\n        return 70;\n      } else {\n        console.log('API 실패 시 기본 채점: 불일치 - 30점 (API 실패로 인한 기본 점수)');\n        return 30; // API 실패 시 최소 점수 보장\n      }\n    }\n  };\n  const handleSubmitAnswer = async () => {\n    console.log('=== handleSubmitAnswer 디버깅 ===');\n    console.log('userAnswer:', userAnswer);\n    console.log('userAnswer.trim():', userAnswer === null || userAnswer === void 0 ? void 0 : userAnswer.trim());\n    console.log('currentWord:', currentWord);\n    console.log('currentWord.meaning:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.meaning);\n    console.log('currentWord.word:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.word);\n    console.log('currentWord.id:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.id);\n    if (!userAnswer || !userAnswer.trim()) {\n      console.error('사용자 답변이 비어있음');\n      alert('답변을 입력해주세요.');\n      return;\n    }\n    if (!currentWord) {\n      console.error('currentWord가 undefined');\n      alert('단어 정보가 올바르지 않습니다. (currentWord 없음)');\n      return;\n    }\n    if (!currentWord.meaning) {\n      console.error('currentWord.meaning이 undefined:', currentWord);\n      alert('단어 정보가 올바르지 않습니다. (meaning 없음)');\n      return;\n    }\n    setIsEvaluating(true);\n    try {\n      const score = await evaluateWithGemini(userAnswer, currentWord.meaning, currentWord.word);\n      const isCorrect = score === 100;\n      const result = {\n        wordId: currentWord.id || 'unknown',\n        word: currentWord.word || 'unknown',\n        userAnswer: userAnswer.trim(),\n        correctAnswer: currentWord.meaning || 'unknown',\n        score: score,\n        isCorrect: isCorrect\n      };\n      setCurrentResult(result);\n      setShowResult(true);\n    } catch (error) {\n      console.error('평가 중 오류 발생:', error);\n      alert('평가 중 오류가 발생했습니다.');\n    } finally {\n      setIsEvaluating(false);\n    }\n  };\n  const handleNextWord = () => {\n    // 자동 이동 타이머가 있다면 취소\n    if (autoNextTimer) {\n      clearTimeout(autoNextTimer);\n      setAutoNextTimer(null);\n    }\n    if (currentResult) {\n      // 현재 결과를 저장\n      const newResults = [...evaluationResults, currentResult];\n      setEvaluationResults(newResults);\n\n      // 전체 결과에도 추가/업데이트\n      const updatedAllResults = [...allResults];\n      const existingIndex = updatedAllResults.findIndex(r => r.wordId === currentResult.wordId);\n      if (existingIndex >= 0) {\n        updatedAllResults[existingIndex] = currentResult;\n      } else {\n        updatedAllResults.push(currentResult);\n      }\n      setAllResults(updatedAllResults);\n    }\n\n    // 다음 단어로 이동 또는 라운드 완료 체크\n    if (currentWordIndex + 1 < wordsToEvaluate.length) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setUserAnswer('');\n      setShowResult(false);\n      setCurrentResult(null);\n    } else {\n      // 라운드 완료 - 100점 미만 단어들만 필터링\n      const incompleteWords = wordsToEvaluate.filter((word, index) => {\n        const result = evaluationResults[index] || currentResult;\n        return !result || result.score < 100;\n      });\n      if (incompleteWords.length > 0) {\n        // 다음 라운드 시작\n        setCurrentRound(currentRound + 1);\n        setWordsToEvaluate(incompleteWords);\n        setCurrentWordIndex(0);\n        setEvaluationResults([]);\n        setUserAnswer('');\n        setShowResult(false);\n        setCurrentResult(null);\n      } else {\n        // 모든 단어 완료\n        const finalResults = currentResult ? [...allResults, currentResult] : allResults;\n        onComplete(finalResults);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      py: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        borderRadius: isMobile ? 2 : 1\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          p: isMobile ? 3 : 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              sx: {\n                fontWeight: 600\n              },\n              children: \"\\uB2E8\\uC5B4 \\uD3C9\\uAC00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"\\uB77C\\uC6B4\\uB4DC \", currentRound, \" - \", wordsToEvaluate.length, \"\\uAC1C \\uB2E8\\uC5B4\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: onClose,\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [currentWordIndex + 1, \" / \", vocabularyData.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"primary\",\n              children: [Math.round(progress), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n            variant: \"determinate\",\n            value: progress,\n            sx: {\n              height: 8,\n              borderRadius: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), !showResult ? /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              sx: {\n                fontWeight: 700,\n                mb: 2\n              },\n              children: currentWord.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), currentWord.example && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              sx: {\n                mb: 2\n              },\n              children: [\"\\uC608\\uBB38: \", currentWord.example]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                mb: 2\n              },\n              children: \"\\uC774 \\uB2E8\\uC5B4\\uC758 \\uB73B\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              rows: 3,\n              variant: \"outlined\",\n              placeholder: \"\\uB73B\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n              value: userAnswer,\n              onChange: e => setUserAnswer(e.target.value),\n              onKeyPress: e => {\n                if (e.key === 'Enter' && !e.shiftKey && !isEvaluating && userAnswer.trim()) {\n                  e.preventDefault();\n                  handleSubmitAnswer();\n                }\n              },\n              disabled: isEvaluating,\n              sx: {\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"contained\",\n              size: \"large\",\n              onClick: handleSubmitAnswer,\n              disabled: !userAnswer.trim() || isEvaluating,\n              startIcon: isEvaluating ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 67\n              }, this),\n              children: isEvaluating ? '평가 중...' : '평가하기'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              sx: {\n                mb: 2\n              },\n              children: currentWord.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Alert, {\n              severity: (currentResult === null || currentResult === void 0 ? void 0 : currentResult.score) === 100 ? 'success' : 'warning',\n              sx: {\n                mb: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: (currentResult === null || currentResult === void 0 ? void 0 : currentResult.score) === 100 ? '완벽합니다! 100점!' : `${currentResult === null || currentResult === void 0 ? void 0 : currentResult.score}점 - 다시 시도해보세요!`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                children: [\"\\uB2F9\\uC2E0\\uC758 \\uB2F5\\uBCC0: \", currentResult === null || currentResult === void 0 ? void 0 : currentResult.userAnswer]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                children: [\"\\uC815\\uB2F5: \", currentResult === null || currentResult === void 0 ? void 0 : currentResult.correctAnswer]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: `점수: ${(currentResult === null || currentResult === void 0 ? void 0 : currentResult.score) || 0}점`,\n              color: (currentResult === null || currentResult === void 0 ? void 0 : currentResult.score) === 100 ? 'success' : 'warning',\n              sx: {\n                fontSize: '1.1rem',\n                fontWeight: 600\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this), (currentResult === null || currentResult === void 0 ? void 0 : currentResult.score) === 100 && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 2,\n                textAlign: 'center'\n              },\n              children: \"3\\uCD08 \\uD6C4 \\uC790\\uB3D9\\uC73C\\uB85C \\uB2E4\\uC74C \\uB2E8\\uC5B4\\uB85C \\uC774\\uB3D9\\uD569\\uB2C8\\uB2E4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this), (currentResult === null || currentResult === void 0 ? void 0 : currentResult.score) === 100 ? /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            size: \"large\",\n            onClick: handleNextWord,\n            startIcon: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 24\n            }, this),\n            color: \"success\",\n            children: currentWordIndex + 1 < vocabularyData.length ? '다음 단어' : '평가 완료'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            size: \"large\",\n            onClick: handleRetry,\n            color: \"warning\",\n            sx: {\n              mb: 1\n            },\n            startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 24\n            }, this),\n            children: \"\\uB2E4\\uC2DC \\uC2DC\\uB3C4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n};\n_s(VocabularyEvaluation, \"UmIWxqH9+T6Oh4vjNo+Xkp9eMgw=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = VocabularyEvaluation;\nexport default VocabularyEvaluation;\nvar _c;\n$RefreshReg$(_c, \"VocabularyEvaluation\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Card","CardContent","Button","TextField","LinearProgress","IconButton","useTheme","useMediaQuery","Container","Alert","Chip","CheckCircle","CheckCircleIcon","Close","CloseIcon","PlayArrow","PlayArrowIcon","Send","SendIcon","Refresh","RefreshIcon","jsxDEV","_jsxDEV","VocabularyEvaluation","vocabularyData","onComplete","onClose","_s","theme","isMobile","breakpoints","down","currentWordIndex","setCurrentWordIndex","userAnswer","setUserAnswer","isEvaluating","setIsEvaluating","evaluationResults","setEvaluationResults","showResult","setShowResult","currentResult","setCurrentResult","autoNextTimer","setAutoNextTimer","currentRound","setCurrentRound","wordsToEvaluate","setWordsToEvaluate","allResults","setAllResults","score","clearTimeout","timer","setTimeout","handleNextWord","length","maxWidth","sx","py","children","borderRadius","p","textAlign","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","mt","currentWord","progress","console","log","word","meaning","error","evaluateWithGemini","correctAnswer","GEMINI_API_KEY","substring","prompt","response","fetch","method","headers","body","JSON","stringify","contents","parts","text","status","ok","errorText","Error","data","json","candidates","content","scoreText","trim","parseInt","isNaN","finalScore","Math","max","min","cleanUser","toLowerCase","cleanCorrect","includes","handleSubmitAnswer","id","alert","isCorrect","result","wordId","newResults","updatedAllResults","existingIndex","findIndex","r","push","incompleteWords","filter","index","finalResults","display","justifyContent","alignItems","mb","fontWeight","round","value","height","example","fullWidth","multiline","rows","placeholder","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","disabled","size","startIcon","severity","label","fontSize","handleRetry","_c","$RefreshReg$"],"sources":["C:/Users/user/pro_planner/src/components/VocabularyEvaluation.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Button,\n  TextField,\n  LinearProgress,\n  IconButton,\n  useTheme,\n  useMediaQuery,\n  Container,\n  Alert,\n  Chip,\n} from '@mui/material';\nimport {\n  CheckCircle as CheckCircleIcon,\n  Close as CloseIcon,\n  PlayArrow as PlayArrowIcon,\n  Send as SendIcon,\n  Refresh as RefreshIcon,\n} from '@mui/icons-material';\n\ninterface EvaluationWord {\n  id: string;\n  word: string;\n  meaning: string;\n  example?: string;\n}\n\ninterface EvaluationResult {\n  wordId: string;\n  word: string;\n  userAnswer: string;\n  correctAnswer: string;\n  score: number;\n  isCorrect: boolean;\n}\n\ninterface VocabularyEvaluationProps {\n  vocabularyData: EvaluationWord[];\n  onComplete: (results: EvaluationResult[]) => void;\n  onClose: () => void;\n}\n\nconst VocabularyEvaluation: React.FC<VocabularyEvaluationProps> = ({\n  vocabularyData,\n  onComplete,\n  onClose,\n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  \n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [isEvaluating, setIsEvaluating] = useState(false);\n  const [evaluationResults, setEvaluationResults] = useState<EvaluationResult[]>([]);\n  const [showResult, setShowResult] = useState(false);\n  const [currentResult, setCurrentResult] = useState<EvaluationResult | null>(null);\n  const [autoNextTimer, setAutoNextTimer] = useState<NodeJS.Timeout | null>(null);\n  \n  // 라운드 관리 상태\n  const [currentRound, setCurrentRound] = useState(1);\n  const [wordsToEvaluate, setWordsToEvaluate] = useState<EvaluationWord[]>(vocabularyData);\n  const [allResults, setAllResults] = useState<EvaluationResult[]>([]);\n\n  // 100점일 때만 자동으로 다음 단어 이동\n  useEffect(() => {\n    if (showResult && currentResult && currentResult.score === 100) {\n      // 기존 타이머가 있다면 정리\n      if (autoNextTimer) {\n        clearTimeout(autoNextTimer);\n      }\n      \n      // 3초 후 자동으로 다음 단어로 이동 (100점일 때만)\n      const timer = setTimeout(() => {\n        handleNextWord();\n      }, 3000);\n      \n      setAutoNextTimer(timer);\n    }\n    \n    // 클린업 함수\n    return () => {\n      if (autoNextTimer) {\n        clearTimeout(autoNextTimer);\n        setAutoNextTimer(null);\n      }\n    };\n  }, [showResult, currentResult]);\n\n  // 데이터 유효성 검사\n    if (!vocabularyData || vocabularyData.length === 0) {\n    return (\n      <Container maxWidth=\"md\" sx={{ py: 2 }}>\n        <Card sx={{ borderRadius: 2 }}>\n          <CardContent sx={{ p: 3, textAlign: 'center' }}>\n            <Typography variant=\"h6\" color=\"error\">\n              평가할 단어가 없습니다.\n            </Typography>\n            <Button onClick={onClose} sx={{ mt: 2 }}>\n              닫기\n            </Button>\n          </CardContent>\n        </Card>\n      </Container>\n    );\n  }\n\n  const currentWord = wordsToEvaluate[currentWordIndex];\n  const progress = ((currentWordIndex + 1) / wordsToEvaluate.length) * 100;\n\n  // 디버깅 로그 추가\n  console.log('=== VocabularyEvaluation 디버깅 ===');\n  console.log('vocabularyData:', vocabularyData);\n  console.log('currentWordIndex:', currentWordIndex);\n  console.log('currentWord:', currentWord);\n  console.log('currentWord.word:', currentWord?.word);\n  console.log('currentWord.meaning:', currentWord?.meaning);\n\n  // 현재 단어가 유효한지 확인\n  if (!currentWord) {\n    console.error('currentWord가 undefined입니다');\n    return (\n      <Container maxWidth=\"md\" sx={{ py: 2 }}>\n        <Card sx={{ borderRadius: 2 }}>\n          <CardContent sx={{ p: 3, textAlign: 'center' }}>\n            <Typography variant=\"h6\" color=\"error\">\n              단어 정보를 불러올 수 없습니다.\n            </Typography>\n            <Button onClick={onClose} sx={{ mt: 2 }}>\n              닫기\n            </Button>\n          </CardContent>\n        </Card>\n      </Container>\n    );\n  }\n\n  const evaluateWithGemini = async (userAnswer: string, correctAnswer: string, word: string) => {\n    try {\n      // API 키를 직접 설정 (환경변수 문제 해결)\n      const GEMINI_API_KEY = 'AIzaSyDQJ6SXBexKbCGeU-DXWCVmtfCJ56gAATs';\n      \n      console.log('=== Gemini API 디버깅 ===');\n      console.log('Gemini API 키 설정됨:', !!GEMINI_API_KEY);\n      console.log('API 키 앞 10자리:', GEMINI_API_KEY.substring(0, 10) + '...');\n\n      const prompt = `다음 영어 단어의 뜻을 채점해주세요:\n영어 단어: ${word}\n정답: ${correctAnswer}\n사용자 답변: ${userAnswer}\n점수만 숫자로 답변해주세요. (100: 정답, 50-90: 부분정답, 0: 오답)`;\n\n      console.log('Gemini API 호출 시작...');\n      console.log('프롬프트:', prompt);\n\n      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${GEMINI_API_KEY}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          contents: [{ parts: [{ text: prompt }] }]\n        })\n      });\n\n      console.log('API 응답 상태:', response.status);\n      console.log('API 응답 OK:', response.ok);\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API 응답 오류 내용:', errorText);\n        throw new Error(`API 응답 오류: ${response.status} - ${errorText}`);\n      }\n\n      const data = await response.json();\n      console.log('API 응답 데이터:', data);\n      \n      if (!data.candidates || !data.candidates[0] || !data.candidates[0].content) {\n        console.error('API 응답 형식 오류:', data);\n        throw new Error('API 응답 형식 오류');\n      }\n\n      const scoreText = data.candidates[0].content.parts[0].text.trim();\n      console.log('추출된 점수 텍스트:', scoreText);\n      \n      const score = parseInt(scoreText);\n      console.log('파싱된 점수:', score);\n      \n      if (isNaN(score)) {\n        throw new Error(`점수 파싱 오류: \"${scoreText}\"`);\n      }\n      \n      const finalScore = Math.max(0, Math.min(100, score));\n      console.log('최종 점수:', finalScore);\n      \n      return finalScore;\n    } catch (error) {\n      console.error('Gemini API 호출 실패:', error);\n      \n      // API 실패 시 기본 채점 로직 (간단한 문자열 비교)\n      const cleanUser = userAnswer.toLowerCase().trim();\n      const cleanCorrect = correctAnswer.toLowerCase().trim();\n      \n      if (cleanUser === cleanCorrect) {\n        console.log('API 실패 시 기본 채점: 완전 일치 - 100점');\n        return 100;\n      } else if (cleanUser.includes(cleanCorrect) || cleanCorrect.includes(cleanUser)) {\n        console.log('API 실패 시 기본 채점: 부분 일치 - 70점');\n        return 70;\n      } else {\n        console.log('API 실패 시 기본 채점: 불일치 - 30점 (API 실패로 인한 기본 점수)');\n        return 30; // API 실패 시 최소 점수 보장\n      }\n    }\n  };\n\n  const handleSubmitAnswer = async () => {\n    console.log('=== handleSubmitAnswer 디버깅 ===');\n    console.log('userAnswer:', userAnswer);\n    console.log('userAnswer.trim():', userAnswer?.trim());\n    console.log('currentWord:', currentWord);\n    console.log('currentWord.meaning:', currentWord?.meaning);\n    console.log('currentWord.word:', currentWord?.word);\n    console.log('currentWord.id:', currentWord?.id);\n\n    if (!userAnswer || !userAnswer.trim()) {\n      console.error('사용자 답변이 비어있음');\n      alert('답변을 입력해주세요.');\n      return;\n    }\n    \n    if (!currentWord) {\n      console.error('currentWord가 undefined');\n      alert('단어 정보가 올바르지 않습니다. (currentWord 없음)');\n      return;\n    }\n    \n    if (!currentWord.meaning) {\n      console.error('currentWord.meaning이 undefined:', currentWord);\n      alert('단어 정보가 올바르지 않습니다. (meaning 없음)');\n      return;\n    }\n    \n    setIsEvaluating(true);\n\n    try {\n      const score = await evaluateWithGemini(userAnswer, currentWord.meaning, currentWord.word);\n      const isCorrect = score === 100;\n\n      const result: EvaluationResult = {\n        wordId: currentWord.id || 'unknown',\n        word: currentWord.word || 'unknown',\n        userAnswer: userAnswer.trim(),\n        correctAnswer: currentWord.meaning || 'unknown',\n        score: score,\n        isCorrect: isCorrect,\n      };\n\n      setCurrentResult(result);\n      setShowResult(true);\n    } catch (error) {\n      console.error('평가 중 오류 발생:', error);\n      alert('평가 중 오류가 발생했습니다.');\n    } finally {\n      setIsEvaluating(false);\n    }\n  };\n\n  const handleNextWord = () => {\n    // 자동 이동 타이머가 있다면 취소\n    if (autoNextTimer) {\n      clearTimeout(autoNextTimer);\n      setAutoNextTimer(null);\n    }\n    \n    if (currentResult) {\n      // 현재 결과를 저장\n      const newResults = [...evaluationResults, currentResult];\n      setEvaluationResults(newResults);\n      \n      // 전체 결과에도 추가/업데이트\n      const updatedAllResults = [...allResults];\n      const existingIndex = updatedAllResults.findIndex(r => r.wordId === currentResult.wordId);\n      if (existingIndex >= 0) {\n        updatedAllResults[existingIndex] = currentResult;\n      } else {\n        updatedAllResults.push(currentResult);\n      }\n      setAllResults(updatedAllResults);\n    }\n\n    // 다음 단어로 이동 또는 라운드 완료 체크\n    if (currentWordIndex + 1 < wordsToEvaluate.length) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setUserAnswer('');\n      setShowResult(false);\n      setCurrentResult(null);\n    } else {\n      // 라운드 완료 - 100점 미만 단어들만 필터링\n      const incompleteWords = wordsToEvaluate.filter((word, index) => {\n        const result = evaluationResults[index] || currentResult;\n        return !result || result.score < 100;\n      });\n      \n      if (incompleteWords.length > 0) {\n        // 다음 라운드 시작\n        setCurrentRound(currentRound + 1);\n        setWordsToEvaluate(incompleteWords);\n        setCurrentWordIndex(0);\n        setEvaluationResults([]);\n        setUserAnswer('');\n        setShowResult(false);\n        setCurrentResult(null);\n      } else {\n        // 모든 단어 완료\n        const finalResults = currentResult ? [...allResults, currentResult] : allResults;\n        onComplete(finalResults);\n      }\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ py: 2 }}>\n      <Card sx={{ borderRadius: isMobile ? 2 : 1 }}>\n        <CardContent sx={{ p: isMobile ? 3 : 2 }}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n            <Box>\n              <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\n                단어 평가\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                라운드 {currentRound} - {wordsToEvaluate.length}개 단어\n              </Typography>\n            </Box>\n            <IconButton onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          </Box>\n\n          <Box sx={{ mb: 3 }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n              <Typography variant=\"body2\">\n                {currentWordIndex + 1} / {vocabularyData.length}\n              </Typography>\n              <Typography variant=\"body2\" color=\"primary\">\n                {Math.round(progress)}%\n          </Typography>\n        </Box>\n            <LinearProgress variant=\"determinate\" value={progress} sx={{ height: 8, borderRadius: 4 }} />\n          </Box>\n\n          {!showResult ? (\n            <Box>\n              <Box sx={{ textAlign: 'center', mb: 4 }}>\n                <Typography variant=\"h3\" sx={{ fontWeight: 700, mb: 2 }}>\n            {currentWord.word}\n          </Typography>\n          {currentWord.example && (\n                  <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                    예문: {currentWord.example}\n            </Typography>\n          )}\n              </Box>\n\n        <Box sx={{ mb: 3 }}>\n                <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                  이 단어의 뜻을 입력하세요:\n          </Typography>\n          <TextField\n            fullWidth\n                  multiline\n                  rows={3}\n            variant=\"outlined\"\n                  placeholder=\"뜻을 입력하세요...\"\n                  value={userAnswer}\n                  onChange={(e) => setUserAnswer(e.target.value)}\n                  onKeyPress={(e) => {\n                    if (e.key === 'Enter' && !e.shiftKey && !isEvaluating && userAnswer.trim()) {\n                      e.preventDefault();\n                      handleSubmitAnswer();\n                    }\n                  }}\n                  disabled={isEvaluating}\n                  sx={{ mb: 2 }}\n                />\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  size=\"large\"\n                  onClick={handleSubmitAnswer}\n                  disabled={!userAnswer.trim() || isEvaluating}\n                  startIcon={isEvaluating ? <CheckCircleIcon /> : <SendIcon />}\n                >\n                  {isEvaluating ? '평가 중...' : '평가하기'}\n                </Button>\n              </Box>\n            </Box>\n          ) : (\n            <Box>\n              <Box sx={{ textAlign: 'center', mb: 3 }}>\n                <Typography variant=\"h4\" sx={{ mb: 2 }}>\n                  {currentWord.word}\n                </Typography>\n                \n                <Alert \n                  severity={currentResult?.score === 100 ? 'success' : 'warning'} \n                  sx={{ mb: 2 }}\n                >\n                  <Typography variant=\"h6\">\n                    {currentResult?.score === 100 \n                      ? '완벽합니다! 100점!' \n                      : `${currentResult?.score}점 - 다시 시도해보세요!`\n                    }\n                  </Typography>\n                </Alert>\n\n                <Box sx={{ mb: 2 }}>\n                  <Typography variant=\"body1\" color=\"text.secondary\">\n                    당신의 답변: {currentResult?.userAnswer}\n                  </Typography>\n                  <Typography variant=\"body1\" color=\"text.secondary\">\n                    정답: {currentResult?.correctAnswer}\n                  </Typography>\n                </Box>\n\n                <Chip\n                  label={`점수: ${currentResult?.score || 0}점`}\n                  color={currentResult?.score === 100 ? 'success' : 'warning'}\n                  sx={{ fontSize: '1.1rem', fontWeight: 600 }}\n                />\n                \n                {currentResult?.score === 100 && (\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2, textAlign: 'center' }}>\n                    3초 후 자동으로 다음 단어로 이동합니다\n                  </Typography>\n                )}\n        </Box>\n\n        {currentResult?.score === 100 ? (\n          <Button\n            fullWidth\n            variant=\"contained\"\n            size=\"large\"\n            onClick={handleNextWord}\n            startIcon={<PlayArrowIcon />}\n            color=\"success\"\n          >\n            {currentWordIndex + 1 < vocabularyData.length ? '다음 단어' : '평가 완료'}\n          </Button>\n        ) : (\n          <Button\n            fullWidth\n            variant=\"contained\"\n            size=\"large\"\n            onClick={handleRetry}\n            color=\"warning\"\n            sx={{ mb: 1 }}\n            startIcon={<RefreshIcon />}\n          >\n            다시 시도\n          </Button>\n        )}\n        </Box>\n          )}\n      </CardContent>\n    </Card>\n    </Container>\n  );\n};\n\nexport default VocabularyEvaluation; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Button,Card,CardContent,CircularProgress,Dialog,DialogActions,DialogContent,DialogTitle,TextField,Typography,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,IconButton,Chip,Avatar,Grid,Tabs,Tab,Checkbox,FormControlLabel,FormControl,InputLabel,Select,MenuItem}from'@mui/material';import{Add as AddIcon,Edit as EditIcon,Delete as DeleteIcon,Grade as GradeIcon,Assignment as AssignmentIcon,ContentCopy as ContentCopyIcon,OpenInNew as OpenInNewIcon}from'@mui/icons-material';import{saveStudents,loadStudents}from'../utils/storage';import{taskService}from'../services/database';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const StudentManagement=()=>{var _gradingStudent$grade,_gradingStudent$grade2,_gradingStudent$grade3,_gradingStudent$grade4,_gradingStudent$grade5,_gradingStudent$grade6,_gradingStudent$grade7,_gradingStudent$grade8,_gradingStudent$grade9,_gradingStudent$grade0,_gradingStudent$grade1,_gradingStudent$grade10,_gradingStudent$grade11,_gradingStudent$grade12,_gradingStudent$grade13,_gradingStudent$grade14,_tasks$find,_tasks$find$vocabular;const[students,setStudents]=useState(()=>{// 로컬 스토리지에서 저장된 데이터 불러오기\nconst savedStudents=loadStudents();if(savedStudents.length>0){// taskAssignments가 배열이 아닌 경우 안전하게 처리\nreturn savedStudents.map(student=>({...student,taskAssignments:Array.isArray(student.taskAssignments)?student.taskAssignments:[]}));}// 저장된 데이터가 없으면 기본 데이터 사용\nreturn[{id:'1',name:'김철수',address:'서울시 강남구 역삼동 123-45',phone:'010-1234-5678',grade:'중2',joinDate:'2023-09-01',status:'active',assignedTasks:['영어 문법 과제','영어 회화 연습'],taskAssignments:[],grades:{'2024':{mockExam3:'85점',mockExam6:'92점',midterm1:'88점',final1:'90점'}}},{id:'2',name:'이영희',address:'서울시 서초구 서초동 456-78',phone:'010-2345-6789',grade:'고1',joinDate:'2023-10-15',status:'active',assignedTasks:['영어 문법 과제'],taskAssignments:[],grades:{'2024':{mockExam3:'78점',mockExam6:'85점',midterm1:'82점',final1:'87점'}}},{id:'3',name:'박민수',address:'서울시 마포구 합정동 789-12',phone:'010-3456-7890',grade:'고3',joinDate:'2023-08-20',status:'active',assignedTasks:['영어 문법 과제'],taskAssignments:[],grades:{'2024':{mockExam3:'95점',mockExam6:'98점',midterm1:'96점',final1:'97점'}}}];});const[tasks,setTasks]=useState([]);const[tasksLoading,setTasksLoading]=useState(true);// students가 변경될 때마다 로컬 스토리지에 저장\nuseEffect(()=>{saveStudents(students);},[students]);// Supabase에서 과제 데이터 불러오기\nuseEffect(()=>{loadTasksFromSupabase();},[]);const loadTasksFromSupabase=async()=>{try{setTasksLoading(true);const tasksData=await taskService.getAll();console.log('로드된 과제 수:',tasksData.length);// 각 과제의 단어 데이터도 함께 불러오기\nconst tasksWithVocabulary=await Promise.all(tasksData.map(async task=>{if(task.area==='vocabulary'){const vocabularyItems=await taskService.getVocabularyItems(task.id);console.log(`과제 \"${task.title}\" (ID: ${task.id})의 단어 수:`,vocabularyItems.length);// 단원 목록 확인\nconst units=new Set(vocabularyItems.map(item=>item.unit));const unitList=Array.from(units).sort((a,b)=>{const aNum=parseInt(a);const bNum=parseInt(b);if(!isNaN(aNum)&&!isNaN(bNum)){return aNum-bNum;}return a.localeCompare(b,'ko-KR',{numeric:true});});console.log(`과제 \"${task.title}\"의 단원 목록 (${unitList.length}개):`,unitList);return{...task,vocabularyData:vocabularyItems.map(item=>({unit:item.unit,english:item.english,meaning:item.meaning}))};}return task;}));console.log('단어 데이터가 포함된 과제들:',tasksWithVocabulary);setTasks(tasksWithVocabulary);}catch(error){console.error('과제 데이터 불러오기 실패:',error);}finally{setTasksLoading(false);}};const[openDialog,setOpenDialog]=useState(false);const[openGradeDialog,setOpenGradeDialog]=useState(false);const[openAssignmentDialog,setOpenAssignmentDialog]=useState(false);const[openAssignmentDetailDialog,setOpenAssignmentDetailDialog]=useState(false);const[openAssignmentEditDialog,setOpenAssignmentEditDialog]=useState(false);const[editingStudent,setEditingStudent]=useState(null);const[gradingStudent,setGradingStudent]=useState(null);const[assigningStudent,setAssigningStudent]=useState(null);const[viewingStudent,setViewingStudent]=useState(null);const[editingAssignment,setEditingAssignment]=useState(null);const[editingAssignmentIndex,setEditingAssignmentIndex]=useState(-1);const[selectedYear,setSelectedYear]=useState(new Date().getFullYear().toString());const[selectedArea,setSelectedArea]=useState('all');const[weeklySchedule,setWeeklySchedule]=useState({});const[selectedStartUnit,setSelectedStartUnit]=useState('');const[availableUnits,setAvailableUnits]=useState([]);const[openStudentDetailDialog,setOpenStudentDetailDialog]=useState(false);const[detailStudent,setDetailStudent]=useState(null);const[isEditingDetail,setIsEditingDetail]=useState(false);const[editingDetailStudent,setEditingDetailStudent]=useState(null);const[formData,setFormData]=useState({name:'',address:'',phone:'',grade:'초6'});const handleOpenDialog=student=>{if(student){setEditingStudent(student);setFormData({name:student.name,address:student.address,phone:student.phone,grade:student.grade});}else{setEditingStudent(null);setFormData({name:'',address:'',phone:'',grade:'초6'});}setOpenDialog(true);};const handleCloseDialog=()=>{setOpenDialog(false);setEditingStudent(null);setFormData({name:'',address:'',phone:'',grade:'초6'});};const handleSubmit=()=>{if(editingStudent){// 편집 모드\nsetStudents(students.map(student=>student.id===editingStudent.id?{...student,...formData}:student));}else{// 새 학생 추가\nconst newStudent={id:Date.now().toString(),...formData,joinDate:new Date().toISOString().split('T')[0],status:'active',assignedTasks:[],taskAssignments:[],grades:{}};setStudents([...students,newStudent]);}handleCloseDialog();};const handleDeleteStudent=studentId=>{setStudents(students.filter(student=>student.id!==studentId));};const handleOpenGradeDialog=student=>{setGradingStudent(student);setOpenGradeDialog(true);};const handleCloseGradeDialog=()=>{setOpenGradeDialog(false);setGradingStudent(null);};const handleSaveGrade=(studentId,gradeType,score)=>{setStudents(students.map(student=>student.id===studentId?{...student,grades:{...student.grades,[selectedYear]:{...student.grades[selectedYear],[gradeType]:score}}}:student));};const handleOpenAssignmentDialog=student=>{setAssigningStudent(student);setSelectedArea('vocabulary');setWeeklySchedule({});setSelectedVocabularyTask(null);setVocabularyAnalysis(null);setOpenAssignmentDialog(true);};const handleCloseAssignmentDialog=()=>{setOpenAssignmentDialog(false);setAssigningStudent(null);setSelectedArea('vocabulary');setWeeklySchedule({});setSelectedVocabularyTask(null);setVocabularyAnalysis(null);};const handleAssignTask=(taskId,taskTitle,area,weeklySchedule)=>{if(!assigningStudent)return;// 해당 과제의 전체 데이터 가져오기\nconst task=tasks.find(t=>t.id===taskId);console.log('Assigning task:',{taskId,taskTitle,area});console.log('Found task:',task);console.log('Task vocabularyData:',task===null||task===void 0?void 0:task.vocabularyData);// 단어장의 경우 선택된 단원부터 시작하는 로직\nlet startUnit='';let totalUnits=0;if(area==='vocabulary'&&selectedVocabularyTask&&vocabularyAnalysis){startUnit=selectedStartUnit;totalUnits=vocabularyAnalysis.totalUnits;// 선택된 단원의 인덱스 찾기\nconst startUnitIndex=vocabularyAnalysis.unitNames.indexOf(selectedStartUnit);if(startUnitIndex!==-1){// 선택된 단원부터 남은 단원 수 계산\ntotalUnits=vocabularyAnalysis.totalUnits-startUnitIndex;}console.log('Vocabulary assignment details:',{startUnit,startUnitIndex,totalUnits,unitNames:vocabularyAnalysis.unitNames});}const newAssignment={taskId,taskTitle,area,weeklySchedule,startDate:calculateStartDate(weeklySchedule),status:'active',progress:{completed:0,total:area==='vocabulary'?totalUnits:0}};// 단어장의 경우 vocabularyData와 시작 단원 정보 추가\nif(area==='vocabulary'&&task&&task.vocabularyData){var _newAssignment$vocabu;newAssignment.vocabularyData=task.vocabularyData;if(startUnit){newAssignment.startUnit=startUnit;}console.log('Final assignment object:',newAssignment);console.log('Assignment has vocabularyData:',!!newAssignment.vocabularyData);console.log('VocabularyData length:',(_newAssignment$vocabu=newAssignment.vocabularyData)===null||_newAssignment$vocabu===void 0?void 0:_newAssignment$vocabu.length);}setStudents(students.map(student=>student.id===assigningStudent.id?{...student,taskAssignments:Array.isArray(student.taskAssignments)?[...student.taskAssignments,newAssignment]:[newAssignment]}:student));handleCloseAssignmentDialog();};const handleScheduleChange=(day,field,value)=>{if(field==='isActive'){setWeeklySchedule(prev=>{var _prev$day;return{...prev,[day]:{...prev[day],isActive:value,dailyAmount:((_prev$day=prev[day])===null||_prev$day===void 0?void 0:_prev$day.dailyAmount)||''}};});}else if(field==='dailyAmount'){setWeeklySchedule(prev=>{var _prev$day2;return{...prev,[day]:{...prev[day],isActive:((_prev$day2=prev[day])===null||_prev$day2===void 0?void 0:_prev$day2.isActive)||false,dailyAmount:value}};});}};// 선택된 요일 수 계산 함수\nconst getActiveDaysCount=()=>{return Object.values(weeklySchedule).filter(day=>day&&typeof day==='object'&&day.isActive).length;};// 오늘부터 시작하는 날짜 계산 함수\nconst calculateStartDate=weeklySchedule=>{var _weeklySchedule$today;const today=new Date();const dayNames=['일','월','화','수','목','금','토'];const todayDayName=dayNames[today.getDay()];// 오늘이 학습 요일에 포함되어 있는지 확인\nif((_weeklySchedule$today=weeklySchedule[todayDayName])!==null&&_weeklySchedule$today!==void 0&&_weeklySchedule$today.isActive){return today.toISOString().split('T')[0];}// 오늘이 학습 요일에 없으면 다음 학습 요일 찾기\nlet nextDay=new Date(today);let daysChecked=0;while(daysChecked<7){var _weeklySchedule$nextD;nextDay.setDate(nextDay.getDate()+1);const nextDayName=dayNames[nextDay.getDay()];if((_weeklySchedule$nextD=weeklySchedule[nextDayName])!==null&&_weeklySchedule$nextD!==void 0&&_weeklySchedule$nextD.isActive){return nextDay.toISOString().split('T')[0];}daysChecked++;}// 기본값으로 오늘 날짜 반환\nreturn today.toISOString().split('T')[0];};// 단어장 단원 분석 함수\nconst analyzeVocabularyUnits=task=>{var _task$vocabularyData;console.log('=== analyzeVocabularyUnits 시작 ===');console.log('과제:',task.title);console.log('영역:',task.area);console.log('vocabularyData 존재 여부:',!!task.vocabularyData);console.log('vocabularyData 길이:',(_task$vocabularyData=task.vocabularyData)===null||_task$vocabularyData===void 0?void 0:_task$vocabularyData.length);if(task.area!=='vocabulary'||!task.vocabularyData){console.log('단어장이 아니거나 데이터가 없음');return null;}// 단원별로 그룹화\nconst units=task.vocabularyData.reduce((acc,item)=>{if(!acc[item.unit]){acc[item.unit]=[];}acc[item.unit].push(item);return acc;},{});console.log('그룹화된 단원 수:',Object.keys(units).length);console.log('그룹화된 단원 목록 (정렬 전):',Object.keys(units));// 단원 이름을 정렬 (숫자 형태의 단원 이름도 올바르게 정렬)\nconst unitNames=Object.keys(units).sort((a,b)=>{// 숫자로 변환 가능한 경우 숫자로 비교\nconst aNum=parseInt(a);const bNum=parseInt(b);if(!isNaN(aNum)&&!isNaN(bNum)){return aNum-bNum;}// 그 외의 경우 문자열로 비교\nreturn a.localeCompare(b,'ko-KR',{numeric:true});});const totalUnits=unitNames.length;const totalWords=task.vocabularyData.length;console.log(`단어장 분석 완료: 총 ${totalUnits}개 단원, ${totalWords}개 단어`);console.log('단원 목록 (정렬 후):',unitNames);console.log('첫 번째 단원:',unitNames[0]);console.log('마지막 단원:',unitNames[unitNames.length-1]);console.log('=== analyzeVocabularyUnits 종료 ===');return{totalUnits,totalWords,unitNames,units};};// 선택된 단어장 정보\nconst[selectedVocabularyTask,setSelectedVocabularyTask]=useState(null);const[vocabularyAnalysis,setVocabularyAnalysis]=useState(null);// 단어장 선택 함수\nconst handleSelectVocabularyTask=task=>{setSelectedVocabularyTask(task);const analysis=analyzeVocabularyUnits(task);setVocabularyAnalysis(analysis);if(analysis){setAvailableUnits(analysis.unitNames);setSelectedStartUnit(analysis.unitNames[0]||'');// 첫 번째 단원을 기본값으로 설정\n}};// 단어장 선택 해제 함수\nconst handleDeselectVocabularyTask=()=>{setSelectedVocabularyTask(null);setVocabularyAnalysis(null);};const handleOpenAssignmentDetailDialog=student=>{setViewingStudent(student);setOpenAssignmentDetailDialog(true);};const handleCloseAssignmentDetailDialog=()=>{setOpenAssignmentDetailDialog(false);setViewingStudent(null);};const handleDeleteAssignment=(studentId,assignmentIndex)=>{setStudents(students.map(student=>student.id===studentId?{...student,taskAssignments:student.taskAssignments.filter((_,index)=>index!==assignmentIndex)}:student));};const handleOpenAssignmentEditDialog=(assignment,index)=>{setEditingAssignment(assignment);setEditingAssignmentIndex(index);setOpenAssignmentEditDialog(true);};const handleCloseAssignmentEditDialog=()=>{setOpenAssignmentEditDialog(false);setEditingAssignment(null);setEditingAssignmentIndex(-1);};const handleUpdateAssignment=updatedAssignment=>{if(!viewingStudent||editingAssignmentIndex===-1)return;const updatedStudents=students.map(student=>student.id===viewingStudent.id?{...student,taskAssignments:student.taskAssignments.map((assignment,index)=>index===editingAssignmentIndex?updatedAssignment:assignment)}:student);setStudents(updatedStudents);// viewingStudent도 업데이트하여 다이얼로그에 즉시 반영\nconst updatedViewingStudent=updatedStudents.find(student=>student.id===viewingStudent.id);if(updatedViewingStudent){setViewingStudent(updatedViewingStudent);}handleCloseAssignmentEditDialog();};const handleCopyStudentLink=studentId=>{const studentLink=`${window.location.origin}/student/${studentId}`;navigator.clipboard.writeText(studentLink).then(()=>{alert('학생 페이지 링크가 클립보드에 복사되었습니다!');}).catch(()=>{// 클립보드 접근이 실패한 경우 링크를 직접 표시\nprompt('학생 페이지 링크:',studentLink);});};const handleOpenStudentLink=studentId=>{const studentLink=`${window.location.origin}/student/${studentId}`;window.open(studentLink,'_blank');};const getGradeColor=grade=>{switch(grade){case'초6':return'warning';case'중1':case'중2':case'중3':return'primary';case'고1':case'고2':case'고3':return'success';default:return'default';}};const getGradeText=grade=>{return grade;};const getStatusColor=status=>{return status==='active'?'success':'error';};const getStatusText=status=>{return status==='active'?'활성':'비활성';};const handleOpenStudentDetailDialog=student=>{setDetailStudent(student);setEditingDetailStudent({...student});setIsEditingDetail(false);setOpenStudentDetailDialog(true);};const handleCloseStudentDetailDialog=()=>{setOpenStudentDetailDialog(false);setDetailStudent(null);setEditingDetailStudent(null);setIsEditingDetail(false);};const handleSaveDetailStudent=()=>{if(editingDetailStudent){setStudents(students.map(student=>student.id===editingDetailStudent.id?editingDetailStudent:student));setDetailStudent(editingDetailStudent);setIsEditingDetail(false);}};const handleCancelEditDetail=()=>{setEditingDetailStudent(detailStudent?{...detailStudent}:null);setIsEditingDetail(false);};const handleDetailFieldChange=(field,value)=>{if(editingDetailStudent){setEditingDetailStudent({...editingDetailStudent,[field]:value});}};return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",children:\"\\uD559\\uC0DD \\uAD00\\uB9AC\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:()=>handleOpenDialog(),children:\"\\uC0C8 \\uD559\\uC0DD \\uCD94\\uAC00\"})]}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"\\uD559\\uC0DD\"}),/*#__PURE__*/_jsx(TableCell,{children:\"\\uC8FC\\uC18C\"}),/*#__PURE__*/_jsx(TableCell,{children:\"\\uC5F0\\uB77D\\uCC98\"}),/*#__PURE__*/_jsx(TableCell,{children:\"\\uD559\\uB144\"}),/*#__PURE__*/_jsx(TableCell,{children:\"\\uAC00\\uC785\\uC77C\"}),/*#__PURE__*/_jsx(TableCell,{children:\"\\uC0C1\\uD0DC\"}),/*#__PURE__*/_jsx(TableCell,{children:\"\\uBC30\\uC815\\uB41C \\uACFC\\uC81C\"}),/*#__PURE__*/_jsx(TableCell,{children:\"\\uACFC\\uC81C \\uBC30\\uC815\"}),/*#__PURE__*/_jsx(TableCell,{children:\"\\uC131\\uC801\"}),/*#__PURE__*/_jsx(TableCell,{children:\"\\uB9C1\\uD06C\"}),/*#__PURE__*/_jsx(TableCell,{children:\"\\uC791\\uC5C5\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:students.map(student=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',cursor:'pointer','&:hover':{color:'primary.main'}},onClick:()=>handleOpenStudentDetailDialog(student),children:[/*#__PURE__*/_jsx(Avatar,{sx:{mr:2},children:student.name.charAt(0)}),/*#__PURE__*/_jsx(Typography,{sx:{fontWeight:500},children:student.name})]})}),/*#__PURE__*/_jsx(TableCell,{children:student.address}),/*#__PURE__*/_jsx(TableCell,{children:student.phone}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:getGradeText(student.grade),color:getGradeColor(student.grade),size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:student.joinDate}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:getStatusText(student.status),color:getStatusColor(student.status),size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:student.assignedTasks.length>0?/*#__PURE__*/_jsxs(Box,{children:[student.assignedTasks.slice(0,2).join(', '),student.assignedTasks.length>2&&` 외 ${student.assignedTasks.length-2}개`]}):'배정된 과제 없음'}),/*#__PURE__*/_jsx(TableCell,{children:student.taskAssignments&&student.taskAssignments.length>0?/*#__PURE__*/_jsx(Chip,{label:`${student.taskAssignments.length}개 과제`,color:\"success\",size:\"small\",onClick:()=>handleOpenAssignmentDetailDialog(student),sx:{cursor:'pointer'}}):/*#__PURE__*/_jsx(Chip,{label:\"\\uBC30\\uC815 \\uC5C6\\uC74C\",color:\"default\",size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:student.grades&&Object.keys(student.grades).length>0?/*#__PURE__*/_jsx(Chip,{label:`${Object.keys(student.grades).length}년도 성적`,color:\"info\",size:\"small\"}):/*#__PURE__*/_jsx(Chip,{label:\"\\uC131\\uC801 \\uC5C6\\uC74C\",color:\"default\",size:\"small\"})}),/*#__PURE__*/_jsxs(TableCell,{children:[/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleOpenStudentLink(student.id),color:\"primary\",title:\"\\uD559\\uC0DD \\uD398\\uC774\\uC9C0 \\uC0C8\\uCC3D\\uC73C\\uB85C \\uC5F4\\uAE30\",children:/*#__PURE__*/_jsx(OpenInNewIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleCopyStudentLink(student.id),color:\"primary\",title:\"\\uD559\\uC0DD \\uD398\\uC774\\uC9C0 \\uB9C1\\uD06C \\uBCF5\\uC0AC\",children:/*#__PURE__*/_jsx(ContentCopyIcon,{})})]}),/*#__PURE__*/_jsxs(TableCell,{children:[/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleOpenDialog(student),children:/*#__PURE__*/_jsx(EditIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleOpenGradeDialog(student),color:\"info\",children:/*#__PURE__*/_jsx(GradeIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleOpenAssignmentDialog(student),color:\"success\",children:/*#__PURE__*/_jsx(AssignmentIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleDeleteStudent(student.id),children:/*#__PURE__*/_jsx(DeleteIcon,{})})]})]},student.id))})]})})})}),/*#__PURE__*/_jsxs(Dialog,{open:openDialog,onClose:handleCloseDialog,maxWidth:\"sm\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:editingStudent?'학생 정보 편집':'새 학생 추가'}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{pt:2},children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"\\uC774\\uB984\",value:formData.name,onChange:e=>setFormData({...formData,name:e.target.value}),sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"\\uC8FC\\uC18C\",value:formData.address,onChange:e=>setFormData({...formData,address:e.target.value}),sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"\\uC5F0\\uB77D\\uCC98\",value:formData.phone,onChange:e=>setFormData({...formData,phone:e.target.value}),sx:{mb:2}}),/*#__PURE__*/_jsxs(TextField,{fullWidth:true,select:true,label:\"\\uD559\\uB144\",value:formData.grade,onChange:e=>setFormData({...formData,grade:e.target.value}),SelectProps:{native:true},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\\uCD086\",children:\"\\uCD08\\uB4F1\\uD559\\uAD50 6\\uD559\\uB144\"}),/*#__PURE__*/_jsx(\"option\",{value:\"\\uC9111\",children:\"\\uC911\\uD559\\uAD50 1\\uD559\\uB144\"}),/*#__PURE__*/_jsx(\"option\",{value:\"\\uC9112\",children:\"\\uC911\\uD559\\uAD50 2\\uD559\\uB144\"}),/*#__PURE__*/_jsx(\"option\",{value:\"\\uC9113\",children:\"\\uC911\\uD559\\uAD50 3\\uD559\\uB144\"}),/*#__PURE__*/_jsx(\"option\",{value:\"\\uACE01\",children:\"\\uACE0\\uB4F1\\uD559\\uAD50 1\\uD559\\uB144\"}),/*#__PURE__*/_jsx(\"option\",{value:\"\\uACE02\",children:\"\\uACE0\\uB4F1\\uD559\\uAD50 2\\uD559\\uB144\"}),/*#__PURE__*/_jsx(\"option\",{value:\"\\uACE03\",children:\"\\uACE0\\uB4F1\\uD559\\uAD50 3\\uD559\\uB144\"})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseDialog,children:\"\\uCDE8\\uC18C\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmit,variant:\"contained\",children:editingStudent?'수정':'추가'})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:openGradeDialog,onClose:handleCloseGradeDialog,maxWidth:\"lg\",fullWidth:true,children:[/*#__PURE__*/_jsxs(DialogTitle,{children:[gradingStudent===null||gradingStudent===void 0?void 0:gradingStudent.name,\" - \\uC131\\uC801 \\uAD00\\uB9AC\"]}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{pt:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:\"\\uC5F0\\uB3C4 \\uC120\\uD0DD\"}),/*#__PURE__*/_jsx(TextField,{select:true,label:\"\\uC5F0\\uB3C4\",value:selectedYear,onChange:e=>setSelectedYear(e.target.value),sx:{minWidth:120},children:Array.from({length:5},(_,i)=>new Date().getFullYear()-i).map(year=>/*#__PURE__*/_jsxs(\"option\",{value:year.toString(),children:[year,\"\\uB144\"]},year))})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{mb:2},children:[selectedYear,\"\\uB144 \\uBAA8\\uC758\\uACE0\\uC0AC \\uC131\\uC801\"]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{mb:3},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"3\\uC6D4 \\uBAA8\\uC758\\uACE0\\uC0AC\",value:(gradingStudent===null||gradingStudent===void 0?void 0:(_gradingStudent$grade=gradingStudent.grades)===null||_gradingStudent$grade===void 0?void 0:(_gradingStudent$grade2=_gradingStudent$grade[selectedYear])===null||_gradingStudent$grade2===void 0?void 0:_gradingStudent$grade2.mockExam3)||'',onChange:e=>{if(gradingStudent){handleSaveGrade(gradingStudent.id,'mockExam3',e.target.value);}},placeholder:\"\\uC608: 85\\uC810, A\\uB4F1\\uAE09\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"6\\uC6D4 \\uBAA8\\uC758\\uACE0\\uC0AC\",value:(gradingStudent===null||gradingStudent===void 0?void 0:(_gradingStudent$grade3=gradingStudent.grades)===null||_gradingStudent$grade3===void 0?void 0:(_gradingStudent$grade4=_gradingStudent$grade3[selectedYear])===null||_gradingStudent$grade4===void 0?void 0:_gradingStudent$grade4.mockExam6)||'',onChange:e=>{if(gradingStudent){handleSaveGrade(gradingStudent.id,'mockExam6',e.target.value);}},placeholder:\"\\uC608: 92\\uC810, A\\uB4F1\\uAE09\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"9\\uC6D4 \\uBAA8\\uC758\\uACE0\\uC0AC\",value:(gradingStudent===null||gradingStudent===void 0?void 0:(_gradingStudent$grade5=gradingStudent.grades)===null||_gradingStudent$grade5===void 0?void 0:(_gradingStudent$grade6=_gradingStudent$grade5[selectedYear])===null||_gradingStudent$grade6===void 0?void 0:_gradingStudent$grade6.mockExam9)||'',onChange:e=>{if(gradingStudent){handleSaveGrade(gradingStudent.id,'mockExam9',e.target.value);}},placeholder:\"\\uC608: 88\\uC810, A\\uB4F1\\uAE09\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"11\\uC6D4 \\uBAA8\\uC758\\uACE0\\uC0AC\",value:(gradingStudent===null||gradingStudent===void 0?void 0:(_gradingStudent$grade7=gradingStudent.grades)===null||_gradingStudent$grade7===void 0?void 0:(_gradingStudent$grade8=_gradingStudent$grade7[selectedYear])===null||_gradingStudent$grade8===void 0?void 0:_gradingStudent$grade8.mockExam11)||'',onChange:e=>{if(gradingStudent){handleSaveGrade(gradingStudent.id,'mockExam11',e.target.value);}},placeholder:\"\\uC608: 95\\uC810, A\\uB4F1\\uAE09\"})})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{mb:2},children:[selectedYear,\"\\uB144 \\uD559\\uAE30\\uBCC4 \\uC131\\uC801\"]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"1\\uD559\\uAE30 \\uC911\\uAC04\\uACE0\\uC0AC\",value:(gradingStudent===null||gradingStudent===void 0?void 0:(_gradingStudent$grade9=gradingStudent.grades)===null||_gradingStudent$grade9===void 0?void 0:(_gradingStudent$grade0=_gradingStudent$grade9[selectedYear])===null||_gradingStudent$grade0===void 0?void 0:_gradingStudent$grade0.midterm1)||'',onChange:e=>{if(gradingStudent){handleSaveGrade(gradingStudent.id,'midterm1',e.target.value);}},placeholder:\"\\uC608: 88\\uC810, A\\uB4F1\\uAE09\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"1\\uD559\\uAE30 \\uAE30\\uB9D0\\uACE0\\uC0AC\",value:(gradingStudent===null||gradingStudent===void 0?void 0:(_gradingStudent$grade1=gradingStudent.grades)===null||_gradingStudent$grade1===void 0?void 0:(_gradingStudent$grade10=_gradingStudent$grade1[selectedYear])===null||_gradingStudent$grade10===void 0?void 0:_gradingStudent$grade10.final1)||'',onChange:e=>{if(gradingStudent){handleSaveGrade(gradingStudent.id,'final1',e.target.value);}},placeholder:\"\\uC608: 90\\uC810, A\\uB4F1\\uAE09\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"2\\uD559\\uAE30 \\uC911\\uAC04\\uACE0\\uC0AC\",value:(gradingStudent===null||gradingStudent===void 0?void 0:(_gradingStudent$grade11=gradingStudent.grades)===null||_gradingStudent$grade11===void 0?void 0:(_gradingStudent$grade12=_gradingStudent$grade11[selectedYear])===null||_gradingStudent$grade12===void 0?void 0:_gradingStudent$grade12.midterm2)||'',onChange:e=>{if(gradingStudent){handleSaveGrade(gradingStudent.id,'midterm2',e.target.value);}},placeholder:\"\\uC608: 87\\uC810, A\\uB4F1\\uAE09\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"2\\uD559\\uAE30 \\uAE30\\uB9D0\\uACE0\\uC0AC\",value:(gradingStudent===null||gradingStudent===void 0?void 0:(_gradingStudent$grade13=gradingStudent.grades)===null||_gradingStudent$grade13===void 0?void 0:(_gradingStudent$grade14=_gradingStudent$grade13[selectedYear])===null||_gradingStudent$grade14===void 0?void 0:_gradingStudent$grade14.final2)||'',onChange:e=>{if(gradingStudent){handleSaveGrade(gradingStudent.id,'final2',e.target.value);}},placeholder:\"\\uC608: 93\\uC810, A\\uB4F1\\uAE09\"})})]})]})}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:handleCloseGradeDialog,children:\"\\uB2EB\\uAE30\"})})]}),/*#__PURE__*/_jsxs(Dialog,{open:openAssignmentDialog,onClose:handleCloseAssignmentDialog,maxWidth:\"lg\",fullWidth:true,children:[/*#__PURE__*/_jsxs(DialogTitle,{children:[assigningStudent===null||assigningStudent===void 0?void 0:assigningStudent.name,\" - \\uACFC\\uC81C \\uBC30\\uC815\"]}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{pt:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:\"\\uBC30\\uC815 \\uAC00\\uB2A5\\uD55C \\uACFC\\uC81C \\uBAA9\\uB85D\"}),/*#__PURE__*/_jsx(Box,{sx:{borderBottom:1,borderColor:'divider',mb:3},children:/*#__PURE__*/_jsxs(Tabs,{value:selectedArea,onChange:(e,newValue)=>setSelectedArea(newValue),children:[/*#__PURE__*/_jsx(Tab,{label:\"\\uC804\\uCCB4\",value:\"all\"}),/*#__PURE__*/_jsx(Tab,{label:\"\\uB2E8\\uC5B4\",value:\"vocabulary\"}),/*#__PURE__*/_jsx(Tab,{label:\"\\uAD6C\\uBB38\",value:\"phrase\"}),/*#__PURE__*/_jsx(Tab,{label:\"\\uC5B4\\uBC95\",value:\"grammar\"}),/*#__PURE__*/_jsx(Tab,{label:\"\\uB17C\\uB9AC\",value:\"logic\"})]})}),selectedArea==='vocabulary'&&/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{mb:2,display:'flex',justifyContent:'space-between',alignItems:'center'},children:[\"\\uB2E8\\uC5B4\\uC7A5 \\uC120\\uD0DD\",/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outlined\",onClick:loadTasksFromSupabase,disabled:tasksLoading,children:tasksLoading?'로딩 중...':'새로고침'})]}),tasksLoading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',py:4},children:/*#__PURE__*/_jsx(CircularProgress,{})}):/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,sx:{mb:3},children:tasks.filter(task=>task.area==='vocabulary'&&task.vocabularyData).map(task=>{const analysis=analyzeVocabularyUnits(task);return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Card,{sx:{cursor:'pointer',border:(selectedVocabularyTask===null||selectedVocabularyTask===void 0?void 0:selectedVocabularyTask.id)===task.id?2:1,borderColor:(selectedVocabularyTask===null||selectedVocabularyTask===void 0?void 0:selectedVocabularyTask.id)===task.id?'primary.main':'divider'},onClick:()=>handleSelectVocabularyTask(task),children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:1},children:task.title}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mb:1},children:task.description}),analysis&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"primary\",children:[\"\\uCD1D \",analysis.totalUnits,\"\\uB2E8\\uC6D0, \",analysis.totalWords,\"\\uAC1C \\uB2E8\\uC5B4\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",children:[\"\\uB2E8\\uC6D0: \",analysis.unitNames.slice(0,3).join(', '),analysis.unitNames.length>3&&'...']}),/*#__PURE__*/_jsx(Chip,{label:task.status==='active'?'활성':task.status==='pending'?'대기':'완료',color:task.status==='active'?'success':task.status==='pending'?'warning':'default',size:\"small\",sx:{mt:1}})]})]})})},task.id);})}),selectedVocabularyTask&&vocabularyAnalysis&&/*#__PURE__*/_jsxs(Box,{sx:{mb:3,p:2,bgcolor:'grey.50',borderRadius:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{mb:2},children:[selectedVocabularyTask.title,\" - \\uB2E8\\uC6D0 \\uBD84\\uC11D\"]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{mb:1},children:\"\\uC804\\uCCB4 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"\\u2022 \\uCD1D \\uB2E8\\uC6D0 \\uC218: \",vocabularyAnalysis.totalUnits,\"\\uB2E8\\uC6D0\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"\\u2022 \\uCD1D \\uB2E8\\uC5B4 \\uC218: \",vocabularyAnalysis.totalWords,\"\\uAC1C\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"\\u2022 \\uD3C9\\uADE0 \\uB2E8\\uC6D0\\uB2F9: \",Math.round(vocabularyAnalysis.totalWords/vocabularyAnalysis.totalUnits),\"\\uAC1C \\uB2E8\\uC5B4\"]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{mb:1},children:\"\\uC2DC\\uC791 \\uB2E8\\uC6D0 \\uC120\\uD0DD\"}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{mb:2},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"\\uC2DC\\uC791 \\uB2E8\\uC6D0\"}),/*#__PURE__*/_jsx(Select,{value:selectedStartUnit,onChange:e=>setSelectedStartUnit(e.target.value),label:\"\\uC2DC\\uC791 \\uB2E8\\uC6D0\",children:vocabularyAnalysis.unitNames.map(unitName=>/*#__PURE__*/_jsxs(MenuItem,{value:unitName,children:[unitName,\" (\",vocabularyAnalysis.units[unitName].length,\"\\uAC1C \\uB2E8\\uC5B4)\"]},unitName))})]}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{mb:1},children:\"\\uB2E8\\uC6D0\\uBCC4 \\uB2E8\\uC5B4 \\uC218\"}),/*#__PURE__*/_jsx(Box,{sx:{maxHeight:200,overflow:'auto'},children:vocabularyAnalysis.unitNames.map(unitName=>/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"\\u2022 \",unitName,\": \",vocabularyAnalysis.units[unitName].length,\"\\uAC1C \\uB2E8\\uC5B4\"]},unitName))})]})]}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:handleDeselectVocabularyTask,sx:{mt:2},children:\"\\uB2E8\\uC5B4\\uC7A5 \\uC120\\uD0DD \\uD574\\uC81C\"})]})]}),selectedArea!=='vocabulary'&&/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:tasks.filter(task=>selectedArea==='all'||task.area===selectedArea&&task.status==='active').map(task=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:1},children:task.title}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mb:2},children:task.description}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{mb:1},children:\"\\uC694\\uC77C\\uBCC4 \\uD559\\uC2B5 \\uC2A4\\uCF00\\uC904\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,sx:{mb:2},children:['월','화','수','목','금','토','일'].map(day=>{var _weeklySchedule$day,_weeklySchedule$day2,_weeklySchedule$day3;return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:2},children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:((_weeklySchedule$day=weeklySchedule[day])===null||_weeklySchedule$day===void 0?void 0:_weeklySchedule$day.isActive)||false,onChange:e=>handleScheduleChange(day,'isActive',e.target.checked)}),label:day,sx:{mb:1}}),((_weeklySchedule$day2=weeklySchedule[day])===null||_weeklySchedule$day2===void 0?void 0:_weeklySchedule$day2.isActive)&&/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",label:`${day} 학습량`,value:((_weeklySchedule$day3=weeklySchedule[day])===null||_weeklySchedule$day3===void 0?void 0:_weeklySchedule$day3.dailyAmount)||'',onChange:e=>handleScheduleChange(day,'dailyAmount',e.target.value),placeholder:task.area==='phrase'?\"예: 3문제\":\"예: 5문제\",sx:{mt:1}})]})})},day);})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",fullWidth:true,onClick:()=>handleAssignTask(task.id,task.title,task.area,weeklySchedule),children:\"\\uACFC\\uC81C \\uBC30\\uC815\"})]})})},task.id))}),selectedArea==='vocabulary'&&selectedVocabularyTask&&/*#__PURE__*/_jsxs(Box,{sx:{mt:3},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{mb:2},children:[selectedVocabularyTask.title,\" - \\uBC30\\uC815 \\uC124\\uC815\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{mb:1},children:\"\\uC694\\uC77C\\uBCC4 \\uD559\\uC2B5 \\uC2A4\\uCF00\\uC904\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,sx:{mb:2},children:['월','화','수','목','금','토','일'].map(day=>{var _weeklySchedule$day4,_weeklySchedule$day5,_weeklySchedule$day6;return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:2},children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:((_weeklySchedule$day4=weeklySchedule[day])===null||_weeklySchedule$day4===void 0?void 0:_weeklySchedule$day4.isActive)||false,onChange:e=>handleScheduleChange(day,'isActive',e.target.checked)}),label:day,sx:{mb:1}}),((_weeklySchedule$day5=weeklySchedule[day])===null||_weeklySchedule$day5===void 0?void 0:_weeklySchedule$day5.isActive)&&/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",label:`${day} 단원 수`,value:((_weeklySchedule$day6=weeklySchedule[day])===null||_weeklySchedule$day6===void 0?void 0:_weeklySchedule$day6.dailyAmount)||'',onChange:e=>handleScheduleChange(day,'dailyAmount',e.target.value),placeholder:\"\\uC608: 2\\uB2E8\\uC6D0\",sx:{mt:1}})]})})},day);})}),selectedStartUnit&&/*#__PURE__*/_jsxs(Box,{sx:{mb:2,p:2,bgcolor:'success.50',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"success.main\",children:\"\\uC2DC\\uC791 \\uB2E8\\uC6D0 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"\\u2022 \\uC2DC\\uC791 \\uB2E8\\uC6D0: \",selectedStartUnit]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"\\u2022 \\uC2DC\\uC791 \\uB2E8\\uC6D0\\uBD80\\uD130 \\uB0A8\\uC740 \\uB2E8\\uC6D0: \",vocabularyAnalysis?vocabularyAnalysis.unitNames.indexOf(selectedStartUnit)!==-1?vocabularyAnalysis.totalUnits-vocabularyAnalysis.unitNames.indexOf(selectedStartUnit):vocabularyAnalysis.totalUnits:0,\"\\uB2E8\\uC6D0\"]})]}),vocabularyAnalysis&&selectedStartUnit&&/*#__PURE__*/_jsxs(Box,{sx:{mb:2,p:2,bgcolor:'info.50',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"info.main\",children:\"\\uC608\\uC0C1 \\uC644\\uB8CC \\uAE30\\uAC04\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"\\u2022 \\uC2DC\\uC791 \\uB2E8\\uC6D0\\uBD80\\uD130 \\uB0A8\\uC740 \\uB2E8\\uC6D0: \",vocabularyAnalysis.totalUnits-vocabularyAnalysis.unitNames.indexOf(selectedStartUnit),\"\\uB2E8\\uC6D0\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"\\u2022 \\uC120\\uD0DD\\uB41C \\uC694\\uC77C\\uBCC4 \\uB2E8\\uC6D0 \\uC218:\"}),Object.entries(weeklySchedule).map(_ref=>{let[day,schedule]=_ref;const scheduleData=schedule;return scheduleData.isActive&&scheduleData.dailyAmount?/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{ml:2},children:[\"\\u2022 \",day,\": \",scheduleData.dailyAmount,\"\\uB2E8\\uC6D0\"]},day):null;}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{mt:1},children:[\"\\u2022 \\uC120\\uD0DD\\uB41C \\uC694\\uC77C \\uC218: \",getActiveDaysCount(),\"\\uC77C\"]})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",fullWidth:true,onClick:()=>handleAssignTask(selectedVocabularyTask.id,selectedVocabularyTask.title,selectedVocabularyTask.area,weeklySchedule),children:\"\\uB2E8\\uC5B4\\uC7A5 \\uBC30\\uC815\"})]})]})}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:handleCloseAssignmentDialog,children:\"\\uB2EB\\uAE30\"})})]}),/*#__PURE__*/_jsxs(Dialog,{open:openAssignmentDetailDialog,onClose:handleCloseAssignmentDetailDialog,maxWidth:\"lg\",fullWidth:true,children:[/*#__PURE__*/_jsxs(DialogTitle,{children:[viewingStudent===null||viewingStudent===void 0?void 0:viewingStudent.name,\" - \\uBC30\\uC815\\uB41C \\uACFC\\uC81C \\uAD00\\uB9AC\"]}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{pt:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{mb:2},children:\"\\uC601\\uC5ED\\uBCC4 \\uD544\\uD130\"}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',gap:1,flexWrap:'wrap'},children:['all','vocabulary','phrase','grammar','logic'].map(area=>/*#__PURE__*/_jsx(Chip,{label:area==='all'?'전체':area==='vocabulary'?'단어':area==='phrase'?'구문':area==='grammar'?'어법':'논리',color:selectedArea===area?'primary':'default',onClick:()=>setSelectedArea(area),sx:{cursor:'pointer'}},area))})]}),viewingStudent&&viewingStudent.taskAssignments&&viewingStudent.taskAssignments.length>0?/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:viewingStudent.taskAssignments.filter(assignment=>selectedArea==='all'||assignment.area===selectedArea).map((assignment,index)=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:assignment.taskTitle}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"primary\",sx:{mb:1},children:\"\\uAE30\\uBCF8 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"\\u2022 \\uC601\\uC5ED: \",assignment.area==='vocabulary'?'단어':assignment.area==='phrase'?'구문':assignment.area==='grammar'?'어법':'논리']}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"\\u2022 \\uC0C1\\uD0DC: \",assignment.status==='active'?'진행중':assignment.status==='completed'?'완료':'일시정지']}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"\\u2022 \\uC2DC\\uC791\\uC77C: \",assignment.startDate]}),assignment.endDate&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"\\u2022 \\uC885\\uB8CC\\uC77C: \",assignment.endDate]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"\\u2022 \\uC9C4\\uD589\\uB960: \",assignment.progress.completed,\"/\",assignment.progress.total]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"primary\",sx:{mb:1},children:\"\\uC694\\uC77C\\uBCC4 \\uC2A4\\uCF00\\uC904\"}),Object.entries(assignment.weeklySchedule).map(_ref2=>{let[day,schedule]=_ref2;return schedule.isActive&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"\\u2022 \",day,\": \",schedule.dailyAmount]},day);})]})]}),assignment.area==='vocabulary'&&assignment.startUnit&&/*#__PURE__*/_jsxs(Box,{sx:{mt:2,p:2,bgcolor:'success.50',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"success.main\",children:\"\\uB2E8\\uC5B4\\uC7A5 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"\\u2022 \\uC2DC\\uC791 \\uB2E8\\uC6D0: \",assignment.startUnit]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2,display:'flex',justifyContent:'flex-end',gap:1},children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"primary\",size:\"small\",onClick:()=>handleOpenAssignmentEditDialog(assignment,index),children:\"\\uC218\\uC815\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"error\",size:\"small\",onClick:()=>handleDeleteAssignment(viewingStudent.id,index),children:\"\\uC0AD\\uC81C\"})]})]})})},index))}):/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"text.secondary\",sx:{textAlign:'center',py:4},children:\"\\uBC30\\uC815\\uB41C \\uACFC\\uC81C\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})]})}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:handleCloseAssignmentDetailDialog,children:\"\\uB2EB\\uAE30\"})})]}),/*#__PURE__*/_jsxs(Dialog,{open:openAssignmentEditDialog,onClose:handleCloseAssignmentEditDialog,maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"\\uACFC\\uC81C \\uC218\\uC815\"}),/*#__PURE__*/_jsx(DialogContent,{children:editingAssignment&&/*#__PURE__*/_jsxs(Box,{sx:{pt:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:editingAssignment.taskTitle}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{mb:2},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"\\uC0C1\\uD0DC\"}),/*#__PURE__*/_jsxs(Select,{value:editingAssignment.status,onChange:e=>setEditingAssignment({...editingAssignment,status:e.target.value}),label:\"\\uC0C1\\uD0DC\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"active\",children:\"\\uC9C4\\uD589\\uC911\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"completed\",children:\"\\uC644\\uB8CC\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"paused\",children:\"\\uC77C\\uC2DC\\uC815\\uC9C0\"})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2,p:2,bgcolor:'grey.50',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{mb:1},children:\"\\uC9C4\\uD589\\uB960\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[editingAssignment.progress.completed,\" / \",editingAssignment.progress.total,\" \\uC644\\uB8CC\"]}),/*#__PURE__*/_jsx(Box,{sx:{mt:1,width:'100%',bgcolor:'grey.200',borderRadius:1,height:8},children:/*#__PURE__*/_jsx(Box,{sx:{width:`${editingAssignment.progress.completed/editingAssignment.progress.total*100}%`,bgcolor:'primary.main',height:'100%',borderRadius:1,transition:'width 0.3s'}})}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",sx:{mb:2,display:'block'},children:[\"\\uC9C4\\uD589\\uB960: \",Math.round(editingAssignment.progress.completed/editingAssignment.progress.total*100),\"%\"]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",label:\"\\uC644\\uB8CC\\uB41C \\uACFC\\uC81C\",type:\"number\",value:editingAssignment.progress.completed,onChange:e=>setEditingAssignment({...editingAssignment,progress:{...editingAssignment.progress,completed:Math.max(0,Math.min(parseInt(e.target.value)||0,editingAssignment.progress.total))}}),inputProps:{min:0,max:editingAssignment.progress.total}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",label:\"\\uC804\\uCCB4 \\uACFC\\uC81C\",type:\"number\",value:editingAssignment.progress.total,onChange:e=>setEditingAssignment({...editingAssignment,progress:{...editingAssignment.progress,total:Math.max(1,parseInt(e.target.value)||1),completed:Math.min(editingAssignment.progress.completed,Math.max(1,parseInt(e.target.value)||1))}}),inputProps:{min:1}})})]})]}),editingAssignment.area==='vocabulary'&&/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{mb:2},children:\"\\uC2DC\\uC791 \\uB2E8\\uC6D0 \\uC218\\uC815\"}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"\\uC2DC\\uC791 \\uB2E8\\uC6D0\"}),/*#__PURE__*/_jsx(Select,{value:editingAssignment.startUnit||'',onChange:e=>setEditingAssignment({...editingAssignment,startUnit:e.target.value}),label:\"\\uC2DC\\uC791 \\uB2E8\\uC6D0\",children:(_tasks$find=tasks.find(task=>task.id===editingAssignment.taskId))===null||_tasks$find===void 0?void 0:(_tasks$find$vocabular=_tasks$find.vocabularyData)===null||_tasks$find$vocabular===void 0?void 0:_tasks$find$vocabular.map(item=>item.unit).filter((unit,index,arr)=>arr.indexOf(unit)===index).sort((a,b)=>{// 숫자로 변환 가능한 경우 숫자로 비교\nconst aNum=parseInt(a);const bNum=parseInt(b);if(!isNaN(aNum)&&!isNaN(bNum)){return aNum-bNum;}// 그 외의 경우 문자열로 비교\nreturn a.localeCompare(b,'ko-KR',{numeric:true});}).map(unit=>/*#__PURE__*/_jsx(MenuItem,{value:unit,children:unit},unit))})]})]}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{mb:2},children:\"\\uC694\\uC77C\\uBCC4 \\uC2A4\\uCF00\\uC904 \\uC218\\uC815\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,sx:{mb:2},children:['월','화','수','목','금','토','일'].map(day=>{var _editingAssignment$we,_editingAssignment$we3,_editingAssignment$we4;return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:2},children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:((_editingAssignment$we=editingAssignment.weeklySchedule[day])===null||_editingAssignment$we===void 0?void 0:_editingAssignment$we.isActive)||false,onChange:e=>{var _editingAssignment$we2;return setEditingAssignment({...editingAssignment,weeklySchedule:{...editingAssignment.weeklySchedule,[day]:{...editingAssignment.weeklySchedule[day],isActive:e.target.checked,dailyAmount:((_editingAssignment$we2=editingAssignment.weeklySchedule[day])===null||_editingAssignment$we2===void 0?void 0:_editingAssignment$we2.dailyAmount)||''}}});}}),label:day,sx:{mb:1}}),((_editingAssignment$we3=editingAssignment.weeklySchedule[day])===null||_editingAssignment$we3===void 0?void 0:_editingAssignment$we3.isActive)&&/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",label:`${day} 학습량`,value:((_editingAssignment$we4=editingAssignment.weeklySchedule[day])===null||_editingAssignment$we4===void 0?void 0:_editingAssignment$we4.dailyAmount)||'',onChange:e=>setEditingAssignment({...editingAssignment,weeklySchedule:{...editingAssignment.weeklySchedule,[day]:{...editingAssignment.weeklySchedule[day],isActive:true,dailyAmount:e.target.value}}}),placeholder:editingAssignment.area==='vocabulary'?\"예: 2단원\":editingAssignment.area==='phrase'?\"예: 3문제\":\"예: 5문제\",sx:{mt:1}})]})})},day);})})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseAssignmentEditDialog,children:\"\\uCDE8\\uC18C\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:()=>editingAssignment&&handleUpdateAssignment(editingAssignment),children:\"\\uC800\\uC7A5\"})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:openStudentDetailDialog,onClose:handleCloseStudentDetailDialog,maxWidth:\"lg\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",children:[detailStudent===null||detailStudent===void 0?void 0:detailStudent.name,\" - \\uC0C1\\uC138 \\uC815\\uBCF4\"]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:1},children:[/*#__PURE__*/_jsx(Chip,{label:detailStudent?getStatusText(detailStudent.status):'',color:detailStudent?getStatusColor(detailStudent.status):'default',size:\"small\"}),!isEditingDetail?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",size:\"small\",onClick:()=>setIsEditingDetail(true),startIcon:/*#__PURE__*/_jsx(EditIcon,{}),children:\"\\uD3B8\\uC9D1\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"small\",onClick:handleSaveDetailStudent,children:\"\\uC800\\uC7A5\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",size:\"small\",onClick:handleCancelEditDetail,children:\"\\uCDE8\\uC18C\"})]})]})]})}),/*#__PURE__*/_jsx(DialogContent,{children:editingDetailStudent&&/*#__PURE__*/_jsxs(Box,{sx:{pt:2},children:[/*#__PURE__*/_jsx(Card,{sx:{mb:3},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:\"\\uAE30\\uBCF8 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"\\uC774\\uB984\"}),isEditingDetail?/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",value:editingDetailStudent.name,onChange:e=>handleDetailFieldChange('name',e.target.value),sx:{mb:2}}):/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{mb:2},children:editingDetailStudent.name}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"\\uC8FC\\uC18C\"}),isEditingDetail?/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",value:editingDetailStudent.address,onChange:e=>handleDetailFieldChange('address',e.target.value),sx:{mb:2}}):/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{mb:2},children:editingDetailStudent.address}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"\\uC5F0\\uB77D\\uCC98\"}),isEditingDetail?/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",value:editingDetailStudent.phone,onChange:e=>handleDetailFieldChange('phone',e.target.value),sx:{mb:2}}):/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{mb:2},children:editingDetailStudent.phone})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"\\uD559\\uB144\"}),isEditingDetail?/*#__PURE__*/_jsx(FormControl,{fullWidth:true,size:\"small\",sx:{mb:2},children:/*#__PURE__*/_jsxs(Select,{value:editingDetailStudent.grade,onChange:e=>handleDetailFieldChange('grade',e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\\uCD086\",children:\"\\uCD08\\uB4F1\\uD559\\uAD50 6\\uD559\\uB144\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"\\uC9111\",children:\"\\uC911\\uD559\\uAD50 1\\uD559\\uB144\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"\\uC9112\",children:\"\\uC911\\uD559\\uAD50 2\\uD559\\uB144\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"\\uC9113\",children:\"\\uC911\\uD559\\uAD50 3\\uD559\\uB144\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"\\uACE01\",children:\"\\uACE0\\uB4F1\\uD559\\uAD50 1\\uD559\\uB144\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"\\uACE02\",children:\"\\uACE0\\uB4F1\\uD559\\uAD50 2\\uD559\\uB144\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"\\uACE03\",children:\"\\uACE0\\uB4F1\\uD559\\uAD50 3\\uD559\\uB144\"})]})}):/*#__PURE__*/_jsx(Box,{sx:{mb:2},children:/*#__PURE__*/_jsx(Chip,{label:getGradeText(editingDetailStudent.grade),color:getGradeColor(editingDetailStudent.grade),size:\"small\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"\\uAC00\\uC785\\uC77C\"}),isEditingDetail?/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",type:\"date\",value:editingDetailStudent.joinDate,onChange:e=>handleDetailFieldChange('joinDate',e.target.value),sx:{mb:2}}):/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{mb:2},children:editingDetailStudent.joinDate}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"\\uC0C1\\uD0DC\"}),isEditingDetail?/*#__PURE__*/_jsx(FormControl,{fullWidth:true,size:\"small\",sx:{mb:2},children:/*#__PURE__*/_jsxs(Select,{value:editingDetailStudent.status,onChange:e=>handleDetailFieldChange('status',e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"active\",children:\"\\uD65C\\uC131\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"inactive\",children:\"\\uBE44\\uD65C\\uC131\"})]})}):/*#__PURE__*/_jsx(Box,{sx:{mb:2},children:/*#__PURE__*/_jsx(Chip,{label:getStatusText(editingDetailStudent.status),color:getStatusColor(editingDetailStudent.status),size:\"small\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"\\uD559\\uC0DD \\uD398\\uC774\\uC9C0 \\uB9C1\\uD06C\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{fontFamily:'monospace',bgcolor:'grey.100',p:1,borderRadius:1,flex:1},children:[window.location.origin,\"/student/\",editingDetailStudent.id]}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleOpenStudentLink(editingDetailStudent.id),color:\"primary\",title:\"\\uD559\\uC0DD \\uD398\\uC774\\uC9C0 \\uC0C8\\uCC3D\\uC73C\\uB85C \\uC5F4\\uAE30\",children:/*#__PURE__*/_jsx(OpenInNewIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleCopyStudentLink(editingDetailStudent.id),color:\"primary\",title:\"\\uD559\\uC0DD \\uD398\\uC774\\uC9C0 \\uB9C1\\uD06C \\uBCF5\\uC0AC\",children:/*#__PURE__*/_jsx(ContentCopyIcon,{})})]})]})]})]})}),/*#__PURE__*/_jsx(Card,{sx:{mb:3},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:\"\\uACFC\\uC81C \\uC9C4\\uD589 \\uC0C1\\uD669\"}),editingDetailStudent.taskAssignments&&editingDetailStudent.taskAssignments.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Box,{sx:{mb:3,p:2,bgcolor:'primary.50',borderRadius:1},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"\\uC804\\uCCB4 \\uACFC\\uC81C \\uC218\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[editingDetailStudent.taskAssignments.length,\"\\uAC1C\"]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"\\uC9C4\\uD589\\uC911\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",color:\"success.main\",children:[editingDetailStudent.taskAssignments.filter(a=>a.status==='active').length,\"\\uAC1C\"]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"\\uC644\\uB8CC\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",color:\"info.main\",children:[editingDetailStudent.taskAssignments.filter(a=>a.status==='completed').length,\"\\uAC1C\"]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"\\uC77C\\uC2DC\\uC815\\uC9C0\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",color:\"warning.main\",children:[editingDetailStudent.taskAssignments.filter(a=>a.status==='paused').length,\"\\uAC1C\"]})]})]})}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:editingDetailStudent.taskAssignments.map((assignment,index)=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'flex-start',mb:2},children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:assignment.taskTitle}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1,mt:1},children:[/*#__PURE__*/_jsx(Chip,{label:assignment.area==='vocabulary'?'단어':assignment.area==='phrase'?'구문':assignment.area==='grammar'?'어법':'논리',color:\"primary\",size:\"small\"}),/*#__PURE__*/_jsx(Chip,{label:assignment.status==='active'?'진행중':assignment.status==='completed'?'완료':'일시정지',color:assignment.status==='active'?'success':assignment.status==='completed'?'info':'warning',size:\"small\"})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'right'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"\\uC2DC\\uC791\\uC77C: \",assignment.startDate]}),assignment.endDate&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"\\uC885\\uB8CC\\uC77C: \",assignment.endDate]})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"\\uC9C4\\uD589\\uB960\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"primary\",children:[assignment.progress.completed,\" / \",assignment.progress.total,\"(\",Math.round(assignment.progress.completed/assignment.progress.total*100),\"%)\"]})]}),/*#__PURE__*/_jsx(Box,{sx:{width:'100%',bgcolor:'grey.200',borderRadius:1,height:8},children:/*#__PURE__*/_jsx(Box,{sx:{width:`${assignment.progress.completed/assignment.progress.total*100}%`,bgcolor:'primary.main',height:'100%',borderRadius:1,transition:'width 0.3s'}})})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{mb:1},children:\"\\uC694\\uC77C\\uBCC4 \\uC2A4\\uCF00\\uC904\"}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',gap:1,flexWrap:'wrap'},children:Object.entries(assignment.weeklySchedule).map(_ref3=>{let[day,schedule]=_ref3;return schedule.isActive&&/*#__PURE__*/_jsx(Chip,{label:`${day}: ${schedule.dailyAmount}`,size:\"small\",variant:\"outlined\"},day);})})]}),assignment.area==='vocabulary'&&assignment.startUnit&&/*#__PURE__*/_jsx(Box,{sx:{p:2,bgcolor:'success.50',borderRadius:1},children:/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",color:\"success.main\",children:[\"\\uC2DC\\uC791 \\uB2E8\\uC6D0: \",assignment.startUnit]})})]})})},index))})]}):/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"text.secondary\",sx:{textAlign:'center',py:4},children:\"\\uBC30\\uC815\\uB41C \\uACFC\\uC81C\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})]})}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:\"\\uC131\\uC801 \\uC815\\uBCF4\"}),editingDetailStudent.grades&&Object.keys(editingDetailStudent.grades).length>0?/*#__PURE__*/_jsx(Box,{children:Object.entries(editingDetailStudent.grades).map(_ref4=>{let[year,grades]=_ref4;return/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",sx:{mb:2,fontWeight:600},children:[year,\"\\uB144\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{mb:1},children:\"\\uBAA8\\uC758\\uACE0\\uC0AC\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{mb:2},children:[grades.mockExam3&&/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"3\\uC6D4\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:grades.mockExam3})]})})}),grades.mockExam6&&/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"6\\uC6D4\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:grades.mockExam6})]})})}),grades.mockExam9&&/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"9\\uC6D4\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:grades.mockExam9})]})})}),grades.mockExam11&&/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"11\\uC6D4\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:grades.mockExam11})]})})})]}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{mb:1},children:\"\\uD559\\uAE30\\uBCC4 \\uC131\\uC801\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[grades.midterm1&&/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"1\\uD559\\uAE30 \\uC911\\uAC04\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:grades.midterm1})]})})}),grades.final1&&/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"1\\uD559\\uAE30 \\uAE30\\uB9D0\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:grades.final1})]})})}),grades.midterm2&&/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"2\\uD559\\uAE30 \\uC911\\uAC04\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:grades.midterm2})]})})}),grades.final2&&/*#__PURE__*/_jsx(Grid,{item:true,xs:6,md:3,children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"2\\uD559\\uAE30 \\uAE30\\uB9D0\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:grades.final2})]})})})]})]},year);})}):/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"text.secondary\",sx:{textAlign:'center',py:4},children:\"\\uB4F1\\uB85D\\uB41C \\uC131\\uC801\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})]})})]})}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:handleCloseStudentDetailDialog,children:\"\\uB2EB\\uAE30\"})})]})]});};export default StudentManagement;","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Card","CardContent","CircularProgress","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Chip","Avatar","Grid","Tabs","Tab","Checkbox","FormControlLabel","FormControl","InputLabel","Select","MenuItem","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","Grade","GradeIcon","Assignment","AssignmentIcon","ContentCopy","ContentCopyIcon","OpenInNew","OpenInNewIcon","saveStudents","loadStudents","taskService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","StudentManagement","_gradingStudent$grade","_gradingStudent$grade2","_gradingStudent$grade3","_gradingStudent$grade4","_gradingStudent$grade5","_gradingStudent$grade6","_gradingStudent$grade7","_gradingStudent$grade8","_gradingStudent$grade9","_gradingStudent$grade0","_gradingStudent$grade1","_gradingStudent$grade10","_gradingStudent$grade11","_gradingStudent$grade12","_gradingStudent$grade13","_gradingStudent$grade14","_tasks$find","_tasks$find$vocabular","students","setStudents","savedStudents","length","map","student","taskAssignments","Array","isArray","id","name","address","phone","grade","joinDate","status","assignedTasks","grades","mockExam3","mockExam6","midterm1","final1","tasks","setTasks","tasksLoading","setTasksLoading","loadTasksFromSupabase","tasksData","getAll","console","log","tasksWithVocabulary","Promise","all","task","area","vocabularyItems","getVocabularyItems","title","units","Set","item","unit","unitList","from","sort","a","b","aNum","parseInt","bNum","isNaN","localeCompare","numeric","vocabularyData","english","meaning","error","openDialog","setOpenDialog","openGradeDialog","setOpenGradeDialog","openAssignmentDialog","setOpenAssignmentDialog","openAssignmentDetailDialog","setOpenAssignmentDetailDialog","openAssignmentEditDialog","setOpenAssignmentEditDialog","editingStudent","setEditingStudent","gradingStudent","setGradingStudent","assigningStudent","setAssigningStudent","viewingStudent","setViewingStudent","editingAssignment","setEditingAssignment","editingAssignmentIndex","setEditingAssignmentIndex","selectedYear","setSelectedYear","Date","getFullYear","toString","selectedArea","setSelectedArea","weeklySchedule","setWeeklySchedule","selectedStartUnit","setSelectedStartUnit","availableUnits","setAvailableUnits","openStudentDetailDialog","setOpenStudentDetailDialog","detailStudent","setDetailStudent","isEditingDetail","setIsEditingDetail","editingDetailStudent","setEditingDetailStudent","formData","setFormData","handleOpenDialog","handleCloseDialog","handleSubmit","newStudent","now","toISOString","split","handleDeleteStudent","studentId","filter","handleOpenGradeDialog","handleCloseGradeDialog","handleSaveGrade","gradeType","score","handleOpenAssignmentDialog","setSelectedVocabularyTask","setVocabularyAnalysis","handleCloseAssignmentDialog","handleAssignTask","taskId","taskTitle","find","t","startUnit","totalUnits","selectedVocabularyTask","vocabularyAnalysis","startUnitIndex","unitNames","indexOf","newAssignment","startDate","calculateStartDate","progress","completed","total","_newAssignment$vocabu","handleScheduleChange","day","field","value","prev","_prev$day","isActive","dailyAmount","_prev$day2","getActiveDaysCount","Object","values","_weeklySchedule$today","today","dayNames","todayDayName","getDay","nextDay","daysChecked","_weeklySchedule$nextD","setDate","getDate","nextDayName","analyzeVocabularyUnits","_task$vocabularyData","reduce","acc","push","keys","totalWords","handleSelectVocabularyTask","analysis","handleDeselectVocabularyTask","handleOpenAssignmentDetailDialog","handleCloseAssignmentDetailDialog","handleDeleteAssignment","assignmentIndex","_","index","handleOpenAssignmentEditDialog","assignment","handleCloseAssignmentEditDialog","handleUpdateAssignment","updatedAssignment","updatedStudents","updatedViewingStudent","handleCopyStudentLink","studentLink","window","location","origin","navigator","clipboard","writeText","then","alert","catch","prompt","handleOpenStudentLink","open","getGradeColor","getGradeText","getStatusColor","getStatusText","handleOpenStudentDetailDialog","handleCloseStudentDetailDialog","handleSaveDetailStudent","handleCancelEditDetail","handleDetailFieldChange","children","sx","display","justifyContent","alignItems","mb","variant","component","startIcon","onClick","cursor","color","mr","charAt","fontWeight","label","size","slice","join","onClose","maxWidth","fullWidth","pt","onChange","e","target","select","SelectProps","native","minWidth","i","year","container","spacing","xs","md","placeholder","mockExam9","mockExam11","midterm2","final2","borderBottom","borderColor","newValue","disabled","py","border","description","mt","p","bgcolor","borderRadius","Math","round","unitName","maxHeight","overflow","_weeklySchedule$day","_weeklySchedule$day2","_weeklySchedule$day3","sm","control","checked","_weeklySchedule$day4","_weeklySchedule$day5","_weeklySchedule$day6","entries","_ref","schedule","scheduleData","ml","gap","flexWrap","endDate","_ref2","textAlign","width","height","transition","type","max","min","inputProps","arr","_editingAssignment$we","_editingAssignment$we3","_editingAssignment$we4","_editingAssignment$we2","fontFamily","flex","_ref3","_ref4"],"sources":["C:/Users/user/pro_planner/src/pages/StudentManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  IconButton,\r\n  Chip,\r\n  Avatar,\r\n  Grid,\r\n  Tabs,\r\n  Tab,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Grade as GradeIcon,\r\n  Assignment as AssignmentIcon,\r\n  Link as LinkIcon,\r\n  ContentCopy as ContentCopyIcon,\r\n  OpenInNew as OpenInNewIcon,\r\n} from '@mui/icons-material';\r\nimport { saveStudents, loadStudents } from '../utils/storage';\r\nimport { taskService } from '../services/database';\r\n\r\ninterface Task {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  area: 'vocabulary' | 'phrase' | 'grammar' | 'logic';\r\n  status: 'active' | 'completed' | 'pending';\r\n  assignedStudents: string[];\r\n  googleSheetLink?: string;\r\n  vocabularyData?: Array<{ unit: string; english: string; meaning: string }>;\r\n}\r\n\r\ninterface TaskAssignment {\r\n  taskId: string;\r\n  taskTitle: string;\r\n  area: 'vocabulary' | 'phrase' | 'grammar' | 'logic';\r\n  weeklySchedule: {\r\n    [day: string]: {\r\n      isActive: boolean;\r\n      dailyAmount: string;\r\n    };\r\n  };\r\n  startDate: string;\r\n  endDate?: string;\r\n  status: 'active' | 'completed' | 'paused';\r\n  progress: {\r\n    completed: number;\r\n    total: number;\r\n  };\r\n  startUnit?: string; // 시작 단원 (단어장 과제용)\r\n  vocabularyData?: Array<{ unit: string; english: string; meaning: string }>; // 단어장 과제용 데이터\r\n}\r\n\r\ninterface Student {\r\n  id: string;\r\n  name: string;\r\n  address: string;\r\n  phone: string;\r\n  grade: '초6' | '중1' | '중2' | '중3' | '고1' | '고2' | '고3';\r\n  joinDate: string;\r\n  status: 'active' | 'inactive';\r\n  assignedTasks: string[];\r\n  taskAssignments: TaskAssignment[];\r\n  grades: {\r\n    [year: string]: {\r\n      mockExam3?: string;\r\n      mockExam6?: string;\r\n      mockExam9?: string;\r\n      mockExam11?: string;\r\n      midterm1?: string;\r\n      final1?: string;\r\n      midterm2?: string;\r\n      final2?: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst StudentManagement: React.FC = () => {\r\n  const [students, setStudents] = useState<Student[]>(() => {\r\n    // 로컬 스토리지에서 저장된 데이터 불러오기\r\n    const savedStudents = loadStudents();\r\n    if (savedStudents.length > 0) {\r\n      // taskAssignments가 배열이 아닌 경우 안전하게 처리\r\n      return savedStudents.map(student => ({\r\n        ...student,\r\n        taskAssignments: Array.isArray(student.taskAssignments) ? student.taskAssignments : [],\r\n      }));\r\n    }\r\n    \r\n    // 저장된 데이터가 없으면 기본 데이터 사용\r\n    return [\r\n      {\r\n        id: '1',\r\n        name: '김철수',\r\n        address: '서울시 강남구 역삼동 123-45',\r\n        phone: '010-1234-5678',\r\n        grade: '중2',\r\n        joinDate: '2023-09-01',\r\n        status: 'active',\r\n        assignedTasks: ['영어 문법 과제', '영어 회화 연습'],\r\n        taskAssignments: [],\r\n        grades: {\r\n          '2024': {\r\n            mockExam3: '85점',\r\n            mockExam6: '92점',\r\n            midterm1: '88점',\r\n            final1: '90점',\r\n          },\r\n        },\r\n      },\r\n      {\r\n        id: '2',\r\n        name: '이영희',\r\n        address: '서울시 서초구 서초동 456-78',\r\n        phone: '010-2345-6789',\r\n        grade: '고1',\r\n        joinDate: '2023-10-15',\r\n        status: 'active',\r\n        assignedTasks: ['영어 문법 과제'],\r\n        taskAssignments: [],\r\n        grades: {\r\n          '2024': {\r\n            mockExam3: '78점',\r\n            mockExam6: '85점',\r\n            midterm1: '82점',\r\n            final1: '87점',\r\n          },\r\n        },\r\n      },\r\n      {\r\n        id: '3',\r\n        name: '박민수',\r\n        address: '서울시 마포구 합정동 789-12',\r\n        phone: '010-3456-7890',\r\n        grade: '고3',\r\n        joinDate: '2023-08-20',\r\n        status: 'active',\r\n        assignedTasks: ['영어 문법 과제'],\r\n        taskAssignments: [],\r\n        grades: {\r\n          '2024': {\r\n            mockExam3: '95점',\r\n            mockExam6: '98점',\r\n            midterm1: '96점',\r\n            final1: '97점',\r\n          },\r\n        },\r\n      },\r\n    ];\r\n  });\r\n\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [tasksLoading, setTasksLoading] = useState(true);\r\n\r\n  // students가 변경될 때마다 로컬 스토리지에 저장\r\n  useEffect(() => {\r\n    saveStudents(students);\r\n  }, [students]);\r\n\r\n  // Supabase에서 과제 데이터 불러오기\r\n  useEffect(() => {\r\n    loadTasksFromSupabase();\r\n  }, []);\r\n\r\n  const loadTasksFromSupabase = async () => {\r\n    try {\r\n      setTasksLoading(true);\r\n      const tasksData = await taskService.getAll();\r\n      console.log('로드된 과제 수:', tasksData.length);\r\n      \r\n      // 각 과제의 단어 데이터도 함께 불러오기\r\n      const tasksWithVocabulary = await Promise.all(\r\n        tasksData.map(async (task) => {\r\n          if (task.area === 'vocabulary') {\r\n            const vocabularyItems = await taskService.getVocabularyItems(task.id);\r\n            console.log(`과제 \"${task.title}\" (ID: ${task.id})의 단어 수:`, vocabularyItems.length);\r\n            \r\n            // 단원 목록 확인\r\n            const units = new Set(vocabularyItems.map(item => item.unit));\r\n            const unitList = Array.from(units).sort((a, b) => {\r\n              const aNum = parseInt(a);\r\n              const bNum = parseInt(b);\r\n              if (!isNaN(aNum) && !isNaN(bNum)) {\r\n                return aNum - bNum;\r\n              }\r\n              return a.localeCompare(b, 'ko-KR', { numeric: true });\r\n            });\r\n            console.log(`과제 \"${task.title}\"의 단원 목록 (${unitList.length}개):`, unitList);\r\n            \r\n            return {\r\n              ...task,\r\n              vocabularyData: vocabularyItems.map(item => ({\r\n                unit: item.unit,\r\n                english: item.english,\r\n                meaning: item.meaning\r\n              }))\r\n            };\r\n          }\r\n          return task;\r\n        })\r\n      );\r\n      \r\n      console.log('단어 데이터가 포함된 과제들:', tasksWithVocabulary);\r\n      setTasks(tasksWithVocabulary);\r\n    } catch (error) {\r\n      console.error('과제 데이터 불러오기 실패:', error);\r\n    } finally {\r\n      setTasksLoading(false);\r\n    }\r\n  };\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [openGradeDialog, setOpenGradeDialog] = useState(false);\r\n  const [openAssignmentDialog, setOpenAssignmentDialog] = useState(false);\r\n  const [openAssignmentDetailDialog, setOpenAssignmentDetailDialog] = useState(false);\r\n  const [openAssignmentEditDialog, setOpenAssignmentEditDialog] = useState(false);\r\n  const [editingStudent, setEditingStudent] = useState<Student | null>(null);\r\n  const [gradingStudent, setGradingStudent] = useState<Student | null>(null);\r\n  const [assigningStudent, setAssigningStudent] = useState<Student | null>(null);\r\n  const [viewingStudent, setViewingStudent] = useState<Student | null>(null);\r\n  const [editingAssignment, setEditingAssignment] = useState<TaskAssignment | null>(null);\r\n  const [editingAssignmentIndex, setEditingAssignmentIndex] = useState<number>(-1);\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear().toString());\r\n  const [selectedArea, setSelectedArea] = useState<'all' | 'vocabulary' | 'phrase' | 'grammar' | 'logic'>('all');\r\n  const [weeklySchedule, setWeeklySchedule] = useState<{\r\n    [day: string]: { isActive: boolean; dailyAmount: string };\r\n  }>({});\r\n  const [selectedStartUnit, setSelectedStartUnit] = useState<string>('');\r\n  const [availableUnits, setAvailableUnits] = useState<string[]>([]);\r\n  const [openStudentDetailDialog, setOpenStudentDetailDialog] = useState(false);\r\n  const [detailStudent, setDetailStudent] = useState<Student | null>(null);\r\n  const [isEditingDetail, setIsEditingDetail] = useState(false);\r\n  const [editingDetailStudent, setEditingDetailStudent] = useState<Student | null>(null);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    address: '',\r\n    phone: '',\r\n    grade: '초6' as '초6' | '중1' | '중2' | '중3' | '고1' | '고2' | '고3',\r\n  });\r\n\r\n  const handleOpenDialog = (student?: Student) => {\r\n    if (student) {\r\n      setEditingStudent(student);\r\n      setFormData({\r\n        name: student.name,\r\n        address: student.address,\r\n        phone: student.phone,\r\n        grade: student.grade,\r\n      });\r\n    } else {\r\n      setEditingStudent(null);\r\n      setFormData({\r\n        name: '',\r\n        address: '',\r\n        phone: '',\r\n        grade: '초6',\r\n      });\r\n    }\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n    setEditingStudent(null);\r\n    setFormData({\r\n      name: '',\r\n      address: '',\r\n      phone: '',\r\n      grade: '초6',\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (editingStudent) {\r\n      // 편집 모드\r\n      setStudents(students.map(student =>\r\n        student.id === editingStudent.id\r\n          ? { ...student, ...formData }\r\n          : student\r\n      ));\r\n    } else {\r\n      // 새 학생 추가\r\n      const newStudent: Student = {\r\n        id: Date.now().toString(),\r\n        ...formData,\r\n        joinDate: new Date().toISOString().split('T')[0],\r\n        status: 'active',\r\n        assignedTasks: [],\r\n        taskAssignments: [],\r\n        grades: {},\r\n      };\r\n      setStudents([...students, newStudent]);\r\n    }\r\n    handleCloseDialog();\r\n  };\r\n\r\n  const handleDeleteStudent = (studentId: string) => {\r\n    setStudents(students.filter(student => student.id !== studentId));\r\n  };\r\n\r\n  const handleOpenGradeDialog = (student: Student) => {\r\n    setGradingStudent(student);\r\n    setOpenGradeDialog(true);\r\n  };\r\n\r\n  const handleCloseGradeDialog = () => {\r\n    setOpenGradeDialog(false);\r\n    setGradingStudent(null);\r\n  };\r\n\r\n  const handleSaveGrade = (studentId: string, gradeType: string, score: string) => {\r\n    setStudents(students.map(student =>\r\n      student.id === studentId\r\n        ? {\r\n            ...student,\r\n            grades: {\r\n              ...student.grades,\r\n              [selectedYear]: {\r\n                ...student.grades[selectedYear],\r\n                [gradeType]: score,\r\n              },\r\n            },\r\n          }\r\n        : student\r\n    ));\r\n  };\r\n\r\n  const handleOpenAssignmentDialog = (student: Student) => {\r\n    setAssigningStudent(student);\r\n    setSelectedArea('vocabulary');\r\n    setWeeklySchedule({});\r\n    setSelectedVocabularyTask(null);\r\n    setVocabularyAnalysis(null);\r\n    setOpenAssignmentDialog(true);\r\n  };\r\n\r\n  const handleCloseAssignmentDialog = () => {\r\n    setOpenAssignmentDialog(false);\r\n    setAssigningStudent(null);\r\n    setSelectedArea('vocabulary');\r\n    setWeeklySchedule({});\r\n    setSelectedVocabularyTask(null);\r\n    setVocabularyAnalysis(null);\r\n  };\r\n\r\n  const handleAssignTask = (taskId: string, taskTitle: string, area: 'vocabulary' | 'phrase' | 'grammar' | 'logic', weeklySchedule: any) => {\r\n    if (!assigningStudent) return;\r\n\r\n    // 해당 과제의 전체 데이터 가져오기\r\n    const task = tasks.find((t: Task) => t.id === taskId);\r\n    \r\n    console.log('Assigning task:', { taskId, taskTitle, area });\r\n    console.log('Found task:', task);\r\n    console.log('Task vocabularyData:', task?.vocabularyData);\r\n\r\n    // 단어장의 경우 선택된 단원부터 시작하는 로직\r\n    let startUnit = '';\r\n    let totalUnits = 0;\r\n    \r\n    if (area === 'vocabulary' && selectedVocabularyTask && vocabularyAnalysis) {\r\n      startUnit = selectedStartUnit;\r\n      totalUnits = vocabularyAnalysis.totalUnits;\r\n      \r\n      // 선택된 단원의 인덱스 찾기\r\n      const startUnitIndex = vocabularyAnalysis.unitNames.indexOf(selectedStartUnit);\r\n      if (startUnitIndex !== -1) {\r\n        // 선택된 단원부터 남은 단원 수 계산\r\n        totalUnits = vocabularyAnalysis.totalUnits - startUnitIndex;\r\n      }\r\n      \r\n      console.log('Vocabulary assignment details:', {\r\n        startUnit,\r\n        startUnitIndex,\r\n        totalUnits,\r\n        unitNames: vocabularyAnalysis.unitNames\r\n      });\r\n    }\r\n\r\n    const newAssignment: TaskAssignment = {\r\n      taskId,\r\n      taskTitle,\r\n      area,\r\n      weeklySchedule,\r\n      startDate: calculateStartDate(weeklySchedule),\r\n      status: 'active',\r\n      progress: {\r\n        completed: 0,\r\n        total: area === 'vocabulary' ? totalUnits : 0,\r\n      },\r\n    };\r\n\r\n    // 단어장의 경우 vocabularyData와 시작 단원 정보 추가\r\n    if (area === 'vocabulary' && task && task.vocabularyData) {\r\n      newAssignment.vocabularyData = task.vocabularyData;\r\n      if (startUnit) {\r\n        newAssignment.startUnit = startUnit;\r\n      }\r\n      \r\n      console.log('Final assignment object:', newAssignment);\r\n      console.log('Assignment has vocabularyData:', !!newAssignment.vocabularyData);\r\n      console.log('VocabularyData length:', newAssignment.vocabularyData?.length);\r\n    }\r\n\r\n    setStudents(students.map(student =>\r\n      student.id === assigningStudent.id\r\n        ? {\r\n            ...student,\r\n            taskAssignments: Array.isArray(student.taskAssignments) \r\n              ? [...student.taskAssignments, newAssignment]\r\n              : [newAssignment],\r\n          }\r\n        : student\r\n    ));\r\n\r\n    handleCloseAssignmentDialog();\r\n  };\r\n\r\n  const handleScheduleChange = (day: string, field: string, value: any) => {\r\n    if (field === 'isActive') {\r\n      setWeeklySchedule(prev => ({\r\n        ...prev,\r\n        [day]: {\r\n          ...prev[day],\r\n          isActive: value,\r\n          dailyAmount: prev[day]?.dailyAmount || '',\r\n        },\r\n      }));\r\n    } else if (field === 'dailyAmount') {\r\n      setWeeklySchedule(prev => ({\r\n        ...prev,\r\n        [day]: {\r\n          ...prev[day],\r\n          isActive: prev[day]?.isActive || false,\r\n          dailyAmount: value,\r\n        },\r\n      }));\r\n    }\r\n  };\r\n\r\n  // 선택된 요일 수 계산 함수\r\n  const getActiveDaysCount = () => {\r\n    return Object.values(weeklySchedule).filter((day: any) => \r\n      day && typeof day === 'object' && day.isActive\r\n    ).length;\r\n  };\r\n\r\n  // 오늘부터 시작하는 날짜 계산 함수\r\n  const calculateStartDate = (weeklySchedule: { [day: string]: { isActive: boolean } }) => {\r\n    const today = new Date();\r\n    const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\r\n    const todayDayName = dayNames[today.getDay()];\r\n    \r\n    // 오늘이 학습 요일에 포함되어 있는지 확인\r\n    if (weeklySchedule[todayDayName]?.isActive) {\r\n      return today.toISOString().split('T')[0];\r\n    }\r\n    \r\n    // 오늘이 학습 요일에 없으면 다음 학습 요일 찾기\r\n    let nextDay = new Date(today);\r\n    let daysChecked = 0;\r\n    \r\n    while (daysChecked < 7) {\r\n      nextDay.setDate(nextDay.getDate() + 1);\r\n      const nextDayName = dayNames[nextDay.getDay()];\r\n      \r\n      if (weeklySchedule[nextDayName]?.isActive) {\r\n        return nextDay.toISOString().split('T')[0];\r\n      }\r\n      \r\n      daysChecked++;\r\n    }\r\n    \r\n    // 기본값으로 오늘 날짜 반환\r\n    return today.toISOString().split('T')[0];\r\n  };\r\n\r\n  // 단어장 단원 분석 함수\r\n  const analyzeVocabularyUnits = (task: Task) => {\r\n    console.log('=== analyzeVocabularyUnits 시작 ===');\r\n    console.log('과제:', task.title);\r\n    console.log('영역:', task.area);\r\n    console.log('vocabularyData 존재 여부:', !!task.vocabularyData);\r\n    console.log('vocabularyData 길이:', task.vocabularyData?.length);\r\n    \r\n    if (task.area !== 'vocabulary' || !task.vocabularyData) {\r\n      console.log('단어장이 아니거나 데이터가 없음');\r\n      return null;\r\n    }\r\n\r\n    // 단원별로 그룹화\r\n    const units = task.vocabularyData.reduce((acc, item) => {\r\n      if (!acc[item.unit]) {\r\n        acc[item.unit] = [];\r\n      }\r\n      acc[item.unit].push(item);\r\n      return acc;\r\n    }, {} as { [unit: string]: Array<{ unit: string; english: string; meaning: string }> });\r\n\r\n    console.log('그룹화된 단원 수:', Object.keys(units).length);\r\n    console.log('그룹화된 단원 목록 (정렬 전):', Object.keys(units));\r\n\r\n    // 단원 이름을 정렬 (숫자 형태의 단원 이름도 올바르게 정렬)\r\n    const unitNames = Object.keys(units).sort((a, b) => {\r\n      // 숫자로 변환 가능한 경우 숫자로 비교\r\n      const aNum = parseInt(a);\r\n      const bNum = parseInt(b);\r\n      \r\n      if (!isNaN(aNum) && !isNaN(bNum)) {\r\n        return aNum - bNum;\r\n      }\r\n      \r\n      // 그 외의 경우 문자열로 비교\r\n      return a.localeCompare(b, 'ko-KR', { numeric: true });\r\n    });\r\n    \r\n    const totalUnits = unitNames.length;\r\n    const totalWords = task.vocabularyData.length;\r\n\r\n    console.log(`단어장 분석 완료: 총 ${totalUnits}개 단원, ${totalWords}개 단어`);\r\n    console.log('단원 목록 (정렬 후):', unitNames);\r\n    console.log('첫 번째 단원:', unitNames[0]);\r\n    console.log('마지막 단원:', unitNames[unitNames.length - 1]);\r\n    console.log('=== analyzeVocabularyUnits 종료 ===');\r\n\r\n    return {\r\n      totalUnits,\r\n      totalWords,\r\n      unitNames,\r\n      units,\r\n    };\r\n  };\r\n\r\n  // 선택된 단어장 정보\r\n  const [selectedVocabularyTask, setSelectedVocabularyTask] = useState<Task | null>(null);\r\n  const [vocabularyAnalysis, setVocabularyAnalysis] = useState<any>(null);\r\n\r\n  // 단어장 선택 함수\r\n  const handleSelectVocabularyTask = (task: Task) => {\r\n    setSelectedVocabularyTask(task);\r\n    const analysis = analyzeVocabularyUnits(task);\r\n    setVocabularyAnalysis(analysis);\r\n    if (analysis) {\r\n      setAvailableUnits(analysis.unitNames);\r\n      setSelectedStartUnit(analysis.unitNames[0] || ''); // 첫 번째 단원을 기본값으로 설정\r\n    }\r\n  };\r\n\r\n  // 단어장 선택 해제 함수\r\n  const handleDeselectVocabularyTask = () => {\r\n    setSelectedVocabularyTask(null);\r\n    setVocabularyAnalysis(null);\r\n  };\r\n\r\n  const handleOpenAssignmentDetailDialog = (student: Student) => {\r\n    setViewingStudent(student);\r\n    setOpenAssignmentDetailDialog(true);\r\n  };\r\n\r\n  const handleCloseAssignmentDetailDialog = () => {\r\n    setOpenAssignmentDetailDialog(false);\r\n    setViewingStudent(null);\r\n  };\r\n\r\n  const handleDeleteAssignment = (studentId: string, assignmentIndex: number) => {\r\n    setStudents(students.map(student =>\r\n      student.id === studentId\r\n        ? {\r\n            ...student,\r\n            taskAssignments: student.taskAssignments.filter((_, index) => index !== assignmentIndex),\r\n          }\r\n        : student\r\n    ));\r\n  };\r\n\r\n  const handleOpenAssignmentEditDialog = (assignment: TaskAssignment, index: number) => {\r\n    setEditingAssignment(assignment);\r\n    setEditingAssignmentIndex(index);\r\n    setOpenAssignmentEditDialog(true);\r\n  };\r\n\r\n  const handleCloseAssignmentEditDialog = () => {\r\n    setOpenAssignmentEditDialog(false);\r\n    setEditingAssignment(null);\r\n    setEditingAssignmentIndex(-1);\r\n  };\r\n\r\n  const handleUpdateAssignment = (updatedAssignment: TaskAssignment) => {\r\n    if (!viewingStudent || editingAssignmentIndex === -1) return;\r\n\r\n    const updatedStudents = students.map(student =>\r\n      student.id === viewingStudent.id\r\n        ? {\r\n            ...student,\r\n            taskAssignments: student.taskAssignments.map((assignment, index) =>\r\n              index === editingAssignmentIndex ? updatedAssignment : assignment\r\n            ),\r\n          }\r\n        : student\r\n    );\r\n\r\n    setStudents(updatedStudents);\r\n    \r\n    // viewingStudent도 업데이트하여 다이얼로그에 즉시 반영\r\n    const updatedViewingStudent = updatedStudents.find(student => student.id === viewingStudent.id);\r\n    if (updatedViewingStudent) {\r\n      setViewingStudent(updatedViewingStudent);\r\n    }\r\n\r\n    handleCloseAssignmentEditDialog();\r\n  };\r\n\r\n  const handleCopyStudentLink = (studentId: string) => {\r\n    const studentLink = `${window.location.origin}/student/${studentId}`;\r\n    navigator.clipboard.writeText(studentLink).then(() => {\r\n      alert('학생 페이지 링크가 클립보드에 복사되었습니다!');\r\n    }).catch(() => {\r\n      // 클립보드 접근이 실패한 경우 링크를 직접 표시\r\n      prompt('학생 페이지 링크:', studentLink);\r\n    });\r\n  };\r\n\r\n  const handleOpenStudentLink = (studentId: string) => {\r\n    const studentLink = `${window.location.origin}/student/${studentId}`;\r\n    window.open(studentLink, '_blank');\r\n  };\r\n\r\n  const getGradeColor = (grade: string) => {\r\n    switch (grade) {\r\n      case '초6':\r\n        return 'warning';\r\n      case '중1':\r\n      case '중2':\r\n      case '중3':\r\n        return 'primary';\r\n      case '고1':\r\n      case '고2':\r\n      case '고3':\r\n        return 'success';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  const getGradeText = (grade: string) => {\r\n    return grade;\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    return status === 'active' ? 'success' : 'error';\r\n  };\r\n\r\n  const getStatusText = (status: string) => {\r\n    return status === 'active' ? '활성' : '비활성';\r\n  };\r\n\r\n  const handleOpenStudentDetailDialog = (student: Student) => {\r\n    setDetailStudent(student);\r\n    setEditingDetailStudent({ ...student });\r\n    setIsEditingDetail(false);\r\n    setOpenStudentDetailDialog(true);\r\n  };\r\n\r\n  const handleCloseStudentDetailDialog = () => {\r\n    setOpenStudentDetailDialog(false);\r\n    setDetailStudent(null);\r\n    setEditingDetailStudent(null);\r\n    setIsEditingDetail(false);\r\n  };\r\n\r\n  const handleSaveDetailStudent = () => {\r\n    if (editingDetailStudent) {\r\n      setStudents(students.map(student =>\r\n        student.id === editingDetailStudent.id\r\n          ? editingDetailStudent\r\n          : student\r\n      ));\r\n      setDetailStudent(editingDetailStudent);\r\n      setIsEditingDetail(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelEditDetail = () => {\r\n    setEditingDetailStudent(detailStudent ? { ...detailStudent } : null);\r\n    setIsEditingDetail(false);\r\n  };\r\n\r\n  const handleDetailFieldChange = (field: keyof Student, value: any) => {\r\n    if (editingDetailStudent) {\r\n      setEditingDetailStudent({\r\n        ...editingDetailStudent,\r\n        [field]: value\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h4\" component=\"h1\">\r\n          학생 관리\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          onClick={() => handleOpenDialog()}\r\n        >\r\n          새 학생 추가\r\n        </Button>\r\n      </Box>\r\n\r\n      <Card>\r\n        <CardContent>\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>학생</TableCell>\r\n                  <TableCell>주소</TableCell>\r\n                  <TableCell>연락처</TableCell>\r\n                  <TableCell>학년</TableCell>\r\n                  <TableCell>가입일</TableCell>\r\n                  <TableCell>상태</TableCell>\r\n                  <TableCell>배정된 과제</TableCell>\r\n                  <TableCell>과제 배정</TableCell>\r\n                  <TableCell>성적</TableCell>\r\n                  <TableCell>링크</TableCell>\r\n                  <TableCell>작업</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {students.map((student) => (\r\n                  <TableRow key={student.id}>\r\n                    <TableCell>\r\n                      <Box \r\n                        sx={{ \r\n                          display: 'flex', \r\n                          alignItems: 'center',\r\n                          cursor: 'pointer',\r\n                          '&:hover': {\r\n                            color: 'primary.main',\r\n                          }\r\n                        }}\r\n                        onClick={() => handleOpenStudentDetailDialog(student)}\r\n                      >\r\n                        <Avatar sx={{ mr: 2 }}>\r\n                          {student.name.charAt(0)}\r\n                        </Avatar>\r\n                        <Typography sx={{ fontWeight: 500 }}>\r\n                          {student.name}\r\n                        </Typography>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>{student.address}</TableCell>\r\n                    <TableCell>{student.phone}</TableCell>\r\n                    <TableCell>\r\n                      <Chip\r\n                        label={getGradeText(student.grade)}\r\n                        color={getGradeColor(student.grade) as any}\r\n                        size=\"small\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>{student.joinDate}</TableCell>\r\n                    <TableCell>\r\n                      <Chip\r\n                        label={getStatusText(student.status)}\r\n                        color={getStatusColor(student.status) as any}\r\n                        size=\"small\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {student.assignedTasks.length > 0 ? (\r\n                        <Box>\r\n                          {student.assignedTasks.slice(0, 2).join(', ')}\r\n                          {student.assignedTasks.length > 2 && ` 외 ${student.assignedTasks.length - 2}개`}\r\n                        </Box>\r\n                      ) : (\r\n                        '배정된 과제 없음'\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {student.taskAssignments && student.taskAssignments.length > 0 ? (\r\n                        <Chip\r\n                          label={`${student.taskAssignments.length}개 과제`}\r\n                          color=\"success\"\r\n                          size=\"small\"\r\n                          onClick={() => handleOpenAssignmentDetailDialog(student)}\r\n                          sx={{ cursor: 'pointer' }}\r\n                        />\r\n                      ) : (\r\n                        <Chip\r\n                          label=\"배정 없음\"\r\n                          color=\"default\"\r\n                          size=\"small\"\r\n                        />\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {student.grades && Object.keys(student.grades).length > 0 ? (\r\n                        <Chip\r\n                          label={`${Object.keys(student.grades).length}년도 성적`}\r\n                          color=\"info\"\r\n                          size=\"small\"\r\n                        />\r\n                      ) : (\r\n                        <Chip\r\n                          label=\"성적 없음\"\r\n                          color=\"default\"\r\n                          size=\"small\"\r\n                        />\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => handleOpenStudentLink(student.id)}\r\n                        color=\"primary\"\r\n                        title=\"학생 페이지 새창으로 열기\"\r\n                      >\r\n                        <OpenInNewIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => handleCopyStudentLink(student.id)}\r\n                        color=\"primary\"\r\n                        title=\"학생 페이지 링크 복사\"\r\n                      >\r\n                        <ContentCopyIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => handleOpenDialog(student)}\r\n                      >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => handleOpenGradeDialog(student)}\r\n                        color=\"info\"\r\n                      >\r\n                        <GradeIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => handleOpenAssignmentDialog(student)}\r\n                        color=\"success\"\r\n                      >\r\n                        <AssignmentIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => handleDeleteStudent(student.id)}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          {editingStudent ? '학생 정보 편집' : '새 학생 추가'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ pt: 2 }}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"이름\"\r\n              value={formData.name}\r\n              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"주소\"\r\n              value={formData.address}\r\n              onChange={(e) => setFormData({ ...formData, address: e.target.value })}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"연락처\"\r\n              value={formData.phone}\r\n              onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              select\r\n              label=\"학년\"\r\n              value={formData.grade}\r\n              onChange={(e) => setFormData({ ...formData, grade: e.target.value as any })}\r\n              SelectProps={{\r\n                native: true,\r\n              }}\r\n            >\r\n              <option value=\"초6\">초등학교 6학년</option>\r\n              <option value=\"중1\">중학교 1학년</option>\r\n              <option value=\"중2\">중학교 2학년</option>\r\n              <option value=\"중3\">중학교 3학년</option>\r\n              <option value=\"고1\">고등학교 1학년</option>\r\n              <option value=\"고2\">고등학교 2학년</option>\r\n              <option value=\"고3\">고등학교 3학년</option>\r\n            </TextField>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog}>취소</Button>\r\n          <Button onClick={handleSubmit} variant=\"contained\">\r\n            {editingStudent ? '수정' : '추가'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* 성적 관리 다이얼로그 */}\r\n      <Dialog open={openGradeDialog} onClose={handleCloseGradeDialog} maxWidth=\"lg\" fullWidth>\r\n        <DialogTitle>\r\n          {gradingStudent?.name} - 성적 관리\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ pt: 2 }}>\r\n            {/* 연도 선택 */}\r\n            <Box sx={{ mb: 3 }}>\r\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                연도 선택\r\n              </Typography>\r\n              <TextField\r\n                select\r\n                label=\"연도\"\r\n                value={selectedYear}\r\n                onChange={(e) => setSelectedYear(e.target.value)}\r\n                sx={{ minWidth: 120 }}\r\n              >\r\n                {Array.from({ length: 5 }, (_, i) => new Date().getFullYear() - i).map(year => (\r\n                  <option key={year} value={year.toString()}>\r\n                    {year}년\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Box>\r\n\r\n            <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n              {selectedYear}년 모의고사 성적\r\n            </Typography>\r\n            <Grid container spacing={2} sx={{ mb: 3 }}>\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"3월 모의고사\"\r\n                  value={gradingStudent?.grades?.[selectedYear]?.mockExam3 || ''}\r\n                  onChange={(e) => {\r\n                    if (gradingStudent) {\r\n                      handleSaveGrade(gradingStudent.id, 'mockExam3', e.target.value);\r\n                    }\r\n                  }}\r\n                  placeholder=\"예: 85점, A등급\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"6월 모의고사\"\r\n                  value={gradingStudent?.grades?.[selectedYear]?.mockExam6 || ''}\r\n                  onChange={(e) => {\r\n                    if (gradingStudent) {\r\n                      handleSaveGrade(gradingStudent.id, 'mockExam6', e.target.value);\r\n                    }\r\n                  }}\r\n                  placeholder=\"예: 92점, A등급\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"9월 모의고사\"\r\n                  value={gradingStudent?.grades?.[selectedYear]?.mockExam9 || ''}\r\n                  onChange={(e) => {\r\n                    if (gradingStudent) {\r\n                      handleSaveGrade(gradingStudent.id, 'mockExam9', e.target.value);\r\n                    }\r\n                  }}\r\n                  placeholder=\"예: 88점, A등급\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"11월 모의고사\"\r\n                  value={gradingStudent?.grades?.[selectedYear]?.mockExam11 || ''}\r\n                  onChange={(e) => {\r\n                    if (gradingStudent) {\r\n                      handleSaveGrade(gradingStudent.id, 'mockExam11', e.target.value);\r\n                    }\r\n                  }}\r\n                  placeholder=\"예: 95점, A등급\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n              {selectedYear}년 학기별 성적\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"1학기 중간고사\"\r\n                  value={gradingStudent?.grades?.[selectedYear]?.midterm1 || ''}\r\n                  onChange={(e) => {\r\n                    if (gradingStudent) {\r\n                      handleSaveGrade(gradingStudent.id, 'midterm1', e.target.value);\r\n                    }\r\n                  }}\r\n                  placeholder=\"예: 88점, A등급\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"1학기 기말고사\"\r\n                  value={gradingStudent?.grades?.[selectedYear]?.final1 || ''}\r\n                  onChange={(e) => {\r\n                    if (gradingStudent) {\r\n                      handleSaveGrade(gradingStudent.id, 'final1', e.target.value);\r\n                    }\r\n                  }}\r\n                  placeholder=\"예: 90점, A등급\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"2학기 중간고사\"\r\n                  value={gradingStudent?.grades?.[selectedYear]?.midterm2 || ''}\r\n                  onChange={(e) => {\r\n                    if (gradingStudent) {\r\n                      handleSaveGrade(gradingStudent.id, 'midterm2', e.target.value);\r\n                    }\r\n                  }}\r\n                  placeholder=\"예: 87점, A등급\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"2학기 기말고사\"\r\n                  value={gradingStudent?.grades?.[selectedYear]?.final2 || ''}\r\n                  onChange={(e) => {\r\n                    if (gradingStudent) {\r\n                      handleSaveGrade(gradingStudent.id, 'final2', e.target.value);\r\n                    }\r\n                  }}\r\n                  placeholder=\"예: 93점, A등급\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseGradeDialog}>닫기</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* 과제 배정 다이얼로그 */}\r\n      <Dialog open={openAssignmentDialog} onClose={handleCloseAssignmentDialog} maxWidth=\"lg\" fullWidth>\r\n        <DialogTitle>\r\n          {assigningStudent?.name} - 과제 배정\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ pt: 2 }}>\r\n            <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n              배정 가능한 과제 목록\r\n            </Typography>\r\n            \r\n            {/* 영역별 탭 */}\r\n            <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\r\n              <Tabs value={selectedArea} onChange={(e, newValue) => setSelectedArea(newValue)}>\r\n                <Tab label=\"전체\" value=\"all\" />\r\n                <Tab label=\"단어\" value=\"vocabulary\" />\r\n                <Tab label=\"구문\" value=\"phrase\" />\r\n                <Tab label=\"어법\" value=\"grammar\" />\r\n                <Tab label=\"논리\" value=\"logic\" />\r\n              </Tabs>\r\n            </Box>\r\n\r\n            {/* 단어 영역일 때 단어장 선택 및 분석 */}\r\n            {selectedArea === 'vocabulary' && (\r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"h6\" sx={{ mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                  단어장 선택\r\n                  <Button \r\n                    size=\"small\" \r\n                    variant=\"outlined\" \r\n                    onClick={loadTasksFromSupabase}\r\n                    disabled={tasksLoading}\r\n                  >\r\n                    {tasksLoading ? '로딩 중...' : '새로고침'}\r\n                  </Button>\r\n                </Typography>\r\n                \r\n                {/* 단어장 목록 */}\r\n                {tasksLoading ? (\r\n                  <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\r\n                    <CircularProgress />\r\n                  </Box>\r\n                ) : (\r\n                <Grid container spacing={2} sx={{ mb: 3 }}>\r\n                  {tasks\r\n                    .filter((task: Task) => task.area === 'vocabulary' && task.vocabularyData)\r\n                    .map((task: Task) => {\r\n                      const analysis = analyzeVocabularyUnits(task);\r\n                      return (\r\n                        <Grid item xs={12} md={4} key={task.id}>\r\n                          <Card \r\n                            sx={{ \r\n                              cursor: 'pointer',\r\n                              border: selectedVocabularyTask?.id === task.id ? 2 : 1,\r\n                              borderColor: selectedVocabularyTask?.id === task.id ? 'primary.main' : 'divider'\r\n                            }}\r\n                            onClick={() => handleSelectVocabularyTask(task)}\r\n                          >\r\n                            <CardContent>\r\n                              <Typography variant=\"h6\" sx={{ mb: 1 }}>\r\n                                {task.title}\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n                                {task.description}\r\n                              </Typography>\r\n                              {analysis && (\r\n                                <Box>\r\n                                  <Typography variant=\"body2\" color=\"primary\">\r\n                                    총 {analysis.totalUnits}단원, {analysis.totalWords}개 단어\r\n                                  </Typography>\r\n                                  <Typography variant=\"caption\" color=\"text.secondary\">\r\n                                    단원: {analysis.unitNames.slice(0, 3).join(', ')}\r\n                                    {analysis.unitNames.length > 3 && '...'}\r\n                                  </Typography>\r\n                                  <Chip\r\n                                    label={task.status === 'active' ? '활성' : task.status === 'pending' ? '대기' : '완료'}\r\n                                    color={task.status === 'active' ? 'success' : task.status === 'pending' ? 'warning' : 'default'}\r\n                                    size=\"small\"\r\n                                    sx={{ mt: 1 }}\r\n                                  />\r\n                                </Box>\r\n                              )}\r\n                            </CardContent>\r\n                          </Card>\r\n                        </Grid>\r\n                      );\r\n                    })}\r\n                </Grid>\r\n                )}\r\n\r\n                {/* 선택된 단어장 분석 정보 */}\r\n                {selectedVocabularyTask && vocabularyAnalysis && (\r\n                  <Box sx={{ mb: 3, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\r\n                    <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                      {selectedVocabularyTask.title} - 단원 분석\r\n                    </Typography>\r\n                    \r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>\r\n                          전체 정보\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                          • 총 단원 수: {vocabularyAnalysis.totalUnits}단원\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                          • 총 단어 수: {vocabularyAnalysis.totalWords}개\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                          • 평균 단원당: {Math.round(vocabularyAnalysis.totalWords / vocabularyAnalysis.totalUnits)}개 단어\r\n                        </Typography>\r\n                      </Grid>\r\n                      \r\n                      <Grid item xs={12} md={6}>\r\n                        <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>\r\n                          시작 단원 선택\r\n                        </Typography>\r\n                        <FormControl fullWidth sx={{ mb: 2 }}>\r\n                          <InputLabel>시작 단원</InputLabel>\r\n                          <Select\r\n                            value={selectedStartUnit}\r\n                            onChange={(e) => setSelectedStartUnit(e.target.value)}\r\n                            label=\"시작 단원\"\r\n                          >\r\n                            {vocabularyAnalysis.unitNames.map((unitName: string) => (\r\n                              <MenuItem key={unitName} value={unitName}>\r\n                                {unitName} ({vocabularyAnalysis.units[unitName].length}개 단어)\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                        \r\n                        <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>\r\n                          단원별 단어 수\r\n                        </Typography>\r\n                        <Box sx={{ maxHeight: 200, overflow: 'auto' }}>\r\n                          {vocabularyAnalysis.unitNames.map((unitName: string) => (\r\n                            <Typography key={unitName} variant=\"body2\">\r\n                              • {unitName}: {vocabularyAnalysis.units[unitName].length}개 단어\r\n                            </Typography>\r\n                          ))}\r\n                        </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      onClick={handleDeselectVocabularyTask}\r\n                      sx={{ mt: 2 }}\r\n                    >\r\n                      단어장 선택 해제\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            )}\r\n\r\n            {/* 과제 목록 - 단어 영역이 아닐 때만 표시 */}\r\n            {selectedArea !== 'vocabulary' && (\r\n              <Grid container spacing={2}>\r\n                {tasks\r\n                  .filter((task: Task) => selectedArea === 'all' || (task.area === selectedArea && task.status === 'active'))\r\n                  .map((task: Task) => (\r\n                    <Grid item xs={12} md={6} key={task.id}>\r\n                      <Card>\r\n                        <CardContent>\r\n                          <Typography variant=\"h6\" sx={{ mb: 1 }}>\r\n                            {task.title}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n                            {task.description}\r\n                          </Typography>\r\n\r\n                          {/* 요일별 학습 스케줄 설정 */}\r\n                          <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n                            요일별 학습 스케줄\r\n                          </Typography>\r\n                          <Grid container spacing={2} sx={{ mb: 2 }}>\r\n                            {['월', '화', '수', '목', '금', '토', '일'].map((day) => (\r\n                              <Grid item xs={12} sm={6} md={3} key={day}>\r\n                                <Card variant=\"outlined\">\r\n                                  <CardContent sx={{ p: 2 }}>\r\n                                    <FormControlLabel\r\n                                      control={\r\n                                        <Checkbox\r\n                                          checked={weeklySchedule[day]?.isActive || false}\r\n                                          onChange={(e) => handleScheduleChange(day, 'isActive', e.target.checked)}\r\n                                        />\r\n                                      }\r\n                                      label={day}\r\n                                      sx={{ mb: 1 }}\r\n                                    />\r\n                                    {weeklySchedule[day]?.isActive && (\r\n                                      <TextField\r\n                                        fullWidth\r\n                                        size=\"small\"\r\n                                        label={`${day} 학습량`}\r\n                                        value={weeklySchedule[day]?.dailyAmount || ''}\r\n                                        onChange={(e) => handleScheduleChange(day, 'dailyAmount', e.target.value)}\r\n                                        placeholder={\r\n                                          task.area === 'phrase' \r\n                                            ? \"예: 3문제\" \r\n                                            : \"예: 5문제\"\r\n                                        }\r\n                                        sx={{ mt: 1 }}\r\n                                      />\r\n                                    )}\r\n                                  </CardContent>\r\n                                </Card>\r\n                              </Grid>\r\n                            ))}\r\n                          </Grid>\r\n\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                            onClick={() => handleAssignTask(task.id, task.title, task.area, weeklySchedule)}\r\n                          >\r\n                            과제 배정\r\n                          </Button>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                  ))}\r\n              </Grid>\r\n            )}\r\n\r\n            {/* 단어 영역일 때 선택된 단어장 배정 */}\r\n            {selectedArea === 'vocabulary' && selectedVocabularyTask && (\r\n              <Box sx={{ mt: 3 }}>\r\n                <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                  {selectedVocabularyTask.title} - 배정 설정\r\n                </Typography>\r\n                \r\n                {/* 주간 스케줄 설정 */}\r\n                <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n                  요일별 학습 스케줄\r\n                </Typography>\r\n                <Grid container spacing={2} sx={{ mb: 2 }}>\r\n                  {['월', '화', '수', '목', '금', '토', '일'].map((day) => (\r\n                    <Grid item xs={12} sm={6} md={3} key={day}>\r\n                      <Card variant=\"outlined\">\r\n                        <CardContent sx={{ p: 2 }}>\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                checked={weeklySchedule[day]?.isActive || false}\r\n                                onChange={(e) => handleScheduleChange(day, 'isActive', e.target.checked)}\r\n                              />\r\n                            }\r\n                            label={day}\r\n                            sx={{ mb: 1 }}\r\n                          />\r\n                          {weeklySchedule[day]?.isActive && (\r\n                            <TextField\r\n                              fullWidth\r\n                              size=\"small\"\r\n                              label={`${day} 단원 수`}\r\n                              value={weeklySchedule[day]?.dailyAmount || ''}\r\n                              onChange={(e) => handleScheduleChange(day, 'dailyAmount', e.target.value)}\r\n                              placeholder=\"예: 2단원\"\r\n                              sx={{ mt: 1 }}\r\n                            />\r\n                          )}\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n\r\n                {/* 선택된 단원 정보 */}\r\n                {selectedStartUnit && (\r\n                  <Box sx={{ mb: 2, p: 2, bgcolor: 'success.50', borderRadius: 1 }}>\r\n                    <Typography variant=\"subtitle2\" color=\"success.main\">\r\n                      시작 단원 정보\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      • 시작 단원: {selectedStartUnit}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      • 시작 단원부터 남은 단원: {vocabularyAnalysis ? vocabularyAnalysis.unitNames.indexOf(selectedStartUnit) !== -1 ? vocabularyAnalysis.totalUnits - vocabularyAnalysis.unitNames.indexOf(selectedStartUnit) : vocabularyAnalysis.totalUnits : 0}단원\r\n                    </Typography>\r\n                  </Box>\r\n                )}\r\n\r\n                {/* 예상 완료 기간 계산 */}\r\n                {vocabularyAnalysis && selectedStartUnit && (\r\n                  <Box sx={{ mb: 2, p: 2, bgcolor: 'info.50', borderRadius: 1 }}>\r\n                    <Typography variant=\"subtitle2\" color=\"info.main\">\r\n                      예상 완료 기간\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      • 시작 단원부터 남은 단원: {vocabularyAnalysis.totalUnits - vocabularyAnalysis.unitNames.indexOf(selectedStartUnit)}단원\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      • 선택된 요일별 단원 수:\r\n                    </Typography>\r\n                    {Object.entries(weeklySchedule).map(([day, schedule]) => {\r\n                      const scheduleData = schedule as { isActive: boolean; dailyAmount: string };\r\n                      return scheduleData.isActive && scheduleData.dailyAmount ? (\r\n                        <Typography key={day} variant=\"body2\" sx={{ ml: 2 }}>\r\n                          • {day}: {scheduleData.dailyAmount}단원\r\n                        </Typography>\r\n                      ) : null;\r\n                    })}\r\n                    <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                      • 선택된 요일 수: {getActiveDaysCount()}일\r\n                    </Typography>\r\n                  </Box>\r\n                )}\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  onClick={() => handleAssignTask(selectedVocabularyTask.id, selectedVocabularyTask.title, selectedVocabularyTask.area, weeklySchedule)}\r\n                >\r\n                  단어장 배정\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseAssignmentDialog}>닫기</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* 과제 상세 보기 다이얼로그 */}\r\n      <Dialog open={openAssignmentDetailDialog} onClose={handleCloseAssignmentDetailDialog} maxWidth=\"lg\" fullWidth>\r\n        <DialogTitle>\r\n          {viewingStudent?.name} - 배정된 과제 관리\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ pt: 2 }}>\r\n            {/* 영역별 필터링 */}\r\n            <Box sx={{ mb: 3 }}>\r\n              <Typography variant=\"subtitle1\" sx={{ mb: 2 }}>\r\n                영역별 필터\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n                {['all', 'vocabulary', 'phrase', 'grammar', 'logic'].map((area) => (\r\n                  <Chip\r\n                    key={area}\r\n                    label={area === 'all' ? '전체' : \r\n                           area === 'vocabulary' ? '단어' :\r\n                           area === 'phrase' ? '구문' :\r\n                           area === 'grammar' ? '어법' : '논리'}\r\n                    color={selectedArea === area ? 'primary' : 'default'}\r\n                    onClick={() => setSelectedArea(area as 'all' | 'vocabulary' | 'phrase' | 'grammar' | 'logic')}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  />\r\n                ))}\r\n              </Box>\r\n            </Box>\r\n\r\n            {viewingStudent && viewingStudent.taskAssignments && viewingStudent.taskAssignments.length > 0 ? (\r\n              <Grid container spacing={2}>\r\n                {viewingStudent.taskAssignments\r\n                  .filter(assignment => selectedArea === 'all' || assignment.area === selectedArea)\r\n                  .map((assignment, index) => (\r\n                  <Grid item xs={12} key={index}>\r\n                    <Card variant=\"outlined\">\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                          {assignment.taskTitle}\r\n                        </Typography>\r\n                        \r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} md={6}>\r\n                            <Typography variant=\"subtitle2\" color=\"primary\" sx={{ mb: 1 }}>\r\n                              기본 정보\r\n                            </Typography>\r\n                            <Typography variant=\"body2\">\r\n                              • 영역: {assignment.area === 'vocabulary' ? '단어' : \r\n                                       assignment.area === 'phrase' ? '구문' : \r\n                                       assignment.area === 'grammar' ? '어법' : '논리'}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\">\r\n                              • 상태: {assignment.status === 'active' ? '진행중' : \r\n                                       assignment.status === 'completed' ? '완료' : '일시정지'}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\">\r\n                              • 시작일: {assignment.startDate}\r\n                            </Typography>\r\n                            {assignment.endDate && (\r\n                              <Typography variant=\"body2\">\r\n                                • 종료일: {assignment.endDate}\r\n                              </Typography>\r\n                            )}\r\n                            <Typography variant=\"body2\">\r\n                              • 진행률: {assignment.progress.completed}/{assignment.progress.total}\r\n                            </Typography>\r\n                          </Grid>\r\n                          \r\n                          <Grid item xs={12} md={6}>\r\n                            <Typography variant=\"subtitle2\" color=\"primary\" sx={{ mb: 1 }}>\r\n                              요일별 스케줄\r\n                            </Typography>\r\n                            {Object.entries(assignment.weeklySchedule).map(([day, schedule]) => \r\n                              schedule.isActive && (\r\n                                <Typography key={day} variant=\"body2\">\r\n                                  • {day}: {schedule.dailyAmount}\r\n                                </Typography>\r\n                              )\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        {/* 단어장의 경우 시작 단원 정보 표시 */}\r\n                        {assignment.area === 'vocabulary' && assignment.startUnit && (\r\n                          <Box sx={{ mt: 2, p: 2, bgcolor: 'success.50', borderRadius: 1 }}>\r\n                            <Typography variant=\"subtitle2\" color=\"success.main\">\r\n                              단어장 정보\r\n                            </Typography>\r\n                            <Typography variant=\"body2\">\r\n                              • 시작 단원: {assignment.startUnit}\r\n                            </Typography>\r\n                          </Box>\r\n                        )}\r\n\r\n                        {/* 관리 버튼 */}\r\n                        <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end', gap: 1 }}>\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            onClick={() => handleOpenAssignmentEditDialog(assignment, index)}\r\n                          >\r\n                            수정\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            color=\"error\"\r\n                            size=\"small\"\r\n                            onClick={() => handleDeleteAssignment(viewingStudent!.id, index)}\r\n                          >\r\n                            삭제\r\n                          </Button>\r\n                        </Box>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            ) : (\r\n              <Typography variant=\"body1\" color=\"text.secondary\" sx={{ textAlign: 'center', py: 4 }}>\r\n                배정된 과제가 없습니다.\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseAssignmentDetailDialog}>닫기</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* 과제 수정 다이얼로그 */}\r\n      <Dialog open={openAssignmentEditDialog} onClose={handleCloseAssignmentEditDialog} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>\r\n          과제 수정\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {editingAssignment && (\r\n            <Box sx={{ pt: 2 }}>\r\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                {editingAssignment.taskTitle}\r\n              </Typography>\r\n              \r\n              {/* 상태 변경 */}\r\n              <FormControl fullWidth sx={{ mb: 2 }}>\r\n                <InputLabel>상태</InputLabel>\r\n                <Select\r\n                  value={editingAssignment.status}\r\n                  onChange={(e) => setEditingAssignment({\r\n                    ...editingAssignment,\r\n                    status: e.target.value as 'active' | 'completed' | 'paused'\r\n                  })}\r\n                  label=\"상태\"\r\n                >\r\n                  <MenuItem value=\"active\">진행중</MenuItem>\r\n                  <MenuItem value=\"completed\">완료</MenuItem>\r\n                  <MenuItem value=\"paused\">일시정지</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n\r\n              {/* 진행률 표시 및 수정 */}\r\n              <Box sx={{ mb: 2, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\r\n                <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>\r\n                  진행률\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  {editingAssignment.progress.completed} / {editingAssignment.progress.total} 완료\r\n                </Typography>\r\n                <Box sx={{ mt: 1, width: '100%', bgcolor: 'grey.200', borderRadius: 1, height: 8 }}>\r\n                  <Box \r\n                    sx={{ \r\n                      width: `${(editingAssignment.progress.completed / editingAssignment.progress.total) * 100}%`,\r\n                      bgcolor: 'primary.main',\r\n                      height: '100%',\r\n                      borderRadius: 1,\r\n                      transition: 'width 0.3s'\r\n                    }} \r\n                  />\r\n                </Box>\r\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mb: 2, display: 'block' }}>\r\n                  진행률: {Math.round((editingAssignment.progress.completed / editingAssignment.progress.total) * 100)}%\r\n                </Typography>\r\n                \r\n                {/* 진행률 수동 조정 */}\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      label=\"완료된 과제\"\r\n                      type=\"number\"\r\n                      value={editingAssignment.progress.completed}\r\n                      onChange={(e) => setEditingAssignment({\r\n                        ...editingAssignment,\r\n                        progress: {\r\n                          ...editingAssignment.progress,\r\n                          completed: Math.max(0, Math.min(parseInt(e.target.value) || 0, editingAssignment.progress.total))\r\n                        }\r\n                      })}\r\n                      inputProps={{ min: 0, max: editingAssignment.progress.total }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      label=\"전체 과제\"\r\n                      type=\"number\"\r\n                      value={editingAssignment.progress.total}\r\n                      onChange={(e) => setEditingAssignment({\r\n                        ...editingAssignment,\r\n                        progress: {\r\n                          ...editingAssignment.progress,\r\n                          total: Math.max(1, parseInt(e.target.value) || 1),\r\n                          completed: Math.min(editingAssignment.progress.completed, Math.max(1, parseInt(e.target.value) || 1))\r\n                        }\r\n                      })}\r\n                      inputProps={{ min: 1 }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n\r\n              {/* 시작 단원 수정 (단어장 과제인 경우) */}\r\n              {editingAssignment.area === 'vocabulary' && (\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography variant=\"subtitle2\" sx={{ mb: 2 }}>\r\n                    시작 단원 수정\r\n                  </Typography>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>시작 단원</InputLabel>\r\n                    <Select\r\n                      value={editingAssignment.startUnit || ''}\r\n                      onChange={(e) => setEditingAssignment({\r\n                        ...editingAssignment,\r\n                        startUnit: e.target.value\r\n                      })}\r\n                      label=\"시작 단원\"\r\n                    >\r\n                      {tasks\r\n                        .find(task => task.id === editingAssignment.taskId)\r\n                        ?.vocabularyData\r\n                        ?.map((item: { unit: string; english: string; meaning: string }) => item.unit)\r\n                        .filter((unit: string, index: number, arr: string[]) => arr.indexOf(unit) === index)\r\n                        .sort((a: string, b: string) => {\r\n                          // 숫자로 변환 가능한 경우 숫자로 비교\r\n                          const aNum = parseInt(a);\r\n                          const bNum = parseInt(b);\r\n                          \r\n                          if (!isNaN(aNum) && !isNaN(bNum)) {\r\n                            return aNum - bNum;\r\n                          }\r\n                          \r\n                          // 그 외의 경우 문자열로 비교\r\n                          return a.localeCompare(b, 'ko-KR', { numeric: true });\r\n                        })\r\n                        .map((unit: string) => (\r\n                          <MenuItem key={unit} value={unit}>\r\n                            {unit}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Box>\r\n              )}\r\n\r\n              {/* 요일별 스케줄 수정 */}\r\n              <Typography variant=\"subtitle2\" sx={{ mb: 2 }}>\r\n                요일별 스케줄 수정\r\n              </Typography>\r\n              <Grid container spacing={2} sx={{ mb: 2 }}>\r\n                {['월', '화', '수', '목', '금', '토', '일'].map((day) => (\r\n                  <Grid item xs={12} sm={6} md={3} key={day}>\r\n                    <Card variant=\"outlined\">\r\n                      <CardContent sx={{ p: 2 }}>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={editingAssignment.weeklySchedule[day]?.isActive || false}\r\n                              onChange={(e) => setEditingAssignment({\r\n                                ...editingAssignment,\r\n                                weeklySchedule: {\r\n                                  ...editingAssignment.weeklySchedule,\r\n                                  [day]: {\r\n                                    ...editingAssignment.weeklySchedule[day],\r\n                                    isActive: e.target.checked,\r\n                                    dailyAmount: editingAssignment.weeklySchedule[day]?.dailyAmount || ''\r\n                                  }\r\n                                }\r\n                              })}\r\n                            />\r\n                          }\r\n                          label={day}\r\n                          sx={{ mb: 1 }}\r\n                        />\r\n                        {editingAssignment.weeklySchedule[day]?.isActive && (\r\n                          <TextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            label={`${day} 학습량`}\r\n                            value={editingAssignment.weeklySchedule[day]?.dailyAmount || ''}\r\n                            onChange={(e) => setEditingAssignment({\r\n                              ...editingAssignment,\r\n                              weeklySchedule: {\r\n                                ...editingAssignment.weeklySchedule,\r\n                                [day]: {\r\n                                  ...editingAssignment.weeklySchedule[day],\r\n                                  isActive: true,\r\n                                  dailyAmount: e.target.value\r\n                                }\r\n                              }\r\n                            })}\r\n                            placeholder={\r\n                              editingAssignment.area === 'vocabulary' ? \"예: 2단원\" :\r\n                              editingAssignment.area === 'phrase' ? \"예: 3문제\" :\r\n                              \"예: 5문제\"\r\n                            }\r\n                            sx={{ mt: 1 }}\r\n                          />\r\n                        )}\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseAssignmentEditDialog}>취소</Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={() => editingAssignment && handleUpdateAssignment(editingAssignment)}\r\n          >\r\n            저장\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* 학생 상세 정보 다이얼로그 */}\r\n      <Dialog open={openStudentDetailDialog} onClose={handleCloseStudentDetailDialog} maxWidth=\"lg\" fullWidth>\r\n        <DialogTitle>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n            <Typography variant=\"h5\">\r\n              {detailStudent?.name} - 상세 정보\r\n            </Typography>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              <Chip\r\n                label={detailStudent ? getStatusText(detailStudent.status) : ''}\r\n                color={detailStudent ? getStatusColor(detailStudent.status) as any : 'default'}\r\n                size=\"small\"\r\n              />\r\n              {!isEditingDetail ? (\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={() => setIsEditingDetail(true)}\r\n                  startIcon={<EditIcon />}\r\n                >\r\n                  편집\r\n                </Button>\r\n              ) : (\r\n                <>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    onClick={handleSaveDetailStudent}\r\n                  >\r\n                    저장\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={handleCancelEditDetail}\r\n                  >\r\n                    취소\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {editingDetailStudent && (\r\n            <Box sx={{ pt: 2 }}>\r\n              {/* 기본 정보 섹션 */}\r\n              <Card sx={{ mb: 3 }}>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                    기본 정보\r\n                  </Typography>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={6}>\r\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">이름</Typography>\r\n                      {isEditingDetail ? (\r\n                        <TextField\r\n                          fullWidth\r\n                          size=\"small\"\r\n                          value={editingDetailStudent.name}\r\n                          onChange={(e) => handleDetailFieldChange('name', e.target.value)}\r\n                          sx={{ mb: 2 }}\r\n                        />\r\n                      ) : (\r\n                        <Typography variant=\"body1\" sx={{ mb: 2 }}>{editingDetailStudent.name}</Typography>\r\n                      )}\r\n                      \r\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">주소</Typography>\r\n                      {isEditingDetail ? (\r\n                        <TextField\r\n                          fullWidth\r\n                          size=\"small\"\r\n                          value={editingDetailStudent.address}\r\n                          onChange={(e) => handleDetailFieldChange('address', e.target.value)}\r\n                          sx={{ mb: 2 }}\r\n                        />\r\n                      ) : (\r\n                        <Typography variant=\"body1\" sx={{ mb: 2 }}>{editingDetailStudent.address}</Typography>\r\n                      )}\r\n                      \r\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">연락처</Typography>\r\n                      {isEditingDetail ? (\r\n                        <TextField\r\n                          fullWidth\r\n                          size=\"small\"\r\n                          value={editingDetailStudent.phone}\r\n                          onChange={(e) => handleDetailFieldChange('phone', e.target.value)}\r\n                          sx={{ mb: 2 }}\r\n                        />\r\n                      ) : (\r\n                        <Typography variant=\"body1\" sx={{ mb: 2 }}>{editingDetailStudent.phone}</Typography>\r\n                      )}\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">학년</Typography>\r\n                      {isEditingDetail ? (\r\n                        <FormControl fullWidth size=\"small\" sx={{ mb: 2 }}>\r\n                          <Select\r\n                            value={editingDetailStudent.grade}\r\n                            onChange={(e) => handleDetailFieldChange('grade', e.target.value)}\r\n                          >\r\n                            <MenuItem value=\"초6\">초등학교 6학년</MenuItem>\r\n                            <MenuItem value=\"중1\">중학교 1학년</MenuItem>\r\n                            <MenuItem value=\"중2\">중학교 2학년</MenuItem>\r\n                            <MenuItem value=\"중3\">중학교 3학년</MenuItem>\r\n                            <MenuItem value=\"고1\">고등학교 1학년</MenuItem>\r\n                            <MenuItem value=\"고2\">고등학교 2학년</MenuItem>\r\n                            <MenuItem value=\"고3\">고등학교 3학년</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      ) : (\r\n                        <Box sx={{ mb: 2 }}>\r\n                          <Chip\r\n                            label={getGradeText(editingDetailStudent.grade)}\r\n                            color={getGradeColor(editingDetailStudent.grade) as any}\r\n                            size=\"small\"\r\n                          />\r\n                        </Box>\r\n                      )}\r\n                      \r\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">가입일</Typography>\r\n                      {isEditingDetail ? (\r\n                        <TextField\r\n                          fullWidth\r\n                          size=\"small\"\r\n                          type=\"date\"\r\n                          value={editingDetailStudent.joinDate}\r\n                          onChange={(e) => handleDetailFieldChange('joinDate', e.target.value)}\r\n                          sx={{ mb: 2 }}\r\n                        />\r\n                      ) : (\r\n                        <Typography variant=\"body1\" sx={{ mb: 2 }}>{editingDetailStudent.joinDate}</Typography>\r\n                      )}\r\n                      \r\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">상태</Typography>\r\n                      {isEditingDetail ? (\r\n                        <FormControl fullWidth size=\"small\" sx={{ mb: 2 }}>\r\n                          <Select\r\n                            value={editingDetailStudent.status}\r\n                            onChange={(e) => handleDetailFieldChange('status', e.target.value)}\r\n                          >\r\n                            <MenuItem value=\"active\">활성</MenuItem>\r\n                            <MenuItem value=\"inactive\">비활성</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      ) : (\r\n                        <Box sx={{ mb: 2 }}>\r\n                          <Chip\r\n                            label={getStatusText(editingDetailStudent.status)}\r\n                            color={getStatusColor(editingDetailStudent.status) as any}\r\n                            size=\"small\"\r\n                          />\r\n                        </Box>\r\n                      )}\r\n                      \r\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">학생 페이지 링크</Typography>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                        <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', bgcolor: 'grey.100', p: 1, borderRadius: 1, flex: 1 }}>\r\n                          {window.location.origin}/student/{editingDetailStudent.id}\r\n                        </Typography>\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          onClick={() => handleOpenStudentLink(editingDetailStudent.id)}\r\n                          color=\"primary\"\r\n                          title=\"학생 페이지 새창으로 열기\"\r\n                        >\r\n                          <OpenInNewIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          onClick={() => handleCopyStudentLink(editingDetailStudent.id)}\r\n                          color=\"primary\"\r\n                          title=\"학생 페이지 링크 복사\"\r\n                        >\r\n                          <ContentCopyIcon />\r\n                        </IconButton>\r\n                      </Box>\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* 과제 진행 상황 섹션 */}\r\n              <Card sx={{ mb: 3 }}>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                    과제 진행 상황\r\n                  </Typography>\r\n                  \r\n                  {editingDetailStudent.taskAssignments && editingDetailStudent.taskAssignments.length > 0 ? (\r\n                    <>\r\n                      {/* 전체 진행률 요약 */}\r\n                      <Box sx={{ mb: 3, p: 2, bgcolor: 'primary.50', borderRadius: 1 }}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6} md={3}>\r\n                            <Typography variant=\"subtitle2\" color=\"text.secondary\">전체 과제 수</Typography>\r\n                            <Typography variant=\"h6\">{editingDetailStudent.taskAssignments.length}개</Typography>\r\n                          </Grid>\r\n                          <Grid item xs={6} md={3}>\r\n                            <Typography variant=\"subtitle2\" color=\"text.secondary\">진행중</Typography>\r\n                            <Typography variant=\"h6\" color=\"success.main\">\r\n                              {editingDetailStudent.taskAssignments.filter(a => a.status === 'active').length}개\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={6} md={3}>\r\n                            <Typography variant=\"subtitle2\" color=\"text.secondary\">완료</Typography>\r\n                            <Typography variant=\"h6\" color=\"info.main\">\r\n                              {editingDetailStudent.taskAssignments.filter(a => a.status === 'completed').length}개\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={6} md={3}>\r\n                            <Typography variant=\"subtitle2\" color=\"text.secondary\">일시정지</Typography>\r\n                            <Typography variant=\"h6\" color=\"warning.main\">\r\n                              {editingDetailStudent.taskAssignments.filter(a => a.status === 'paused').length}개\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Box>\r\n\r\n                      {/* 개별 과제 목록 */}\r\n                      <Grid container spacing={2}>\r\n                        {editingDetailStudent.taskAssignments.map((assignment, index) => (\r\n                          <Grid item xs={12} key={index}>\r\n                            <Card variant=\"outlined\">\r\n                              <CardContent>\r\n                                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>\r\n                                  <Box>\r\n                                    <Typography variant=\"h6\">\r\n                                      {assignment.taskTitle}\r\n                                    </Typography>\r\n                                    <Box sx={{ display: 'flex', gap: 1, mt: 1 }}>\r\n                                      <Chip\r\n                                        label={assignment.area === 'vocabulary' ? '단어' : \r\n                                               assignment.area === 'phrase' ? '구문' : \r\n                                               assignment.area === 'grammar' ? '어법' : '논리'}\r\n                                        color=\"primary\"\r\n                                        size=\"small\"\r\n                                      />\r\n                                      <Chip\r\n                                        label={assignment.status === 'active' ? '진행중' : \r\n                                               assignment.status === 'completed' ? '완료' : '일시정지'}\r\n                                        color={assignment.status === 'active' ? 'success' : \r\n                                               assignment.status === 'completed' ? 'info' : 'warning'}\r\n                                        size=\"small\"\r\n                                      />\r\n                                    </Box>\r\n                                  </Box>\r\n                                  <Box sx={{ textAlign: 'right' }}>\r\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                      시작일: {assignment.startDate}\r\n                                    </Typography>\r\n                                    {assignment.endDate && (\r\n                                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                        종료일: {assignment.endDate}\r\n                                      </Typography>\r\n                                    )}\r\n                                  </Box>\r\n                                </Box>\r\n\r\n                                {/* 진행률 표시 */}\r\n                                <Box sx={{ mb: 2 }}>\r\n                                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                    <Typography variant=\"body2\">진행률</Typography>\r\n                                    <Typography variant=\"body2\" color=\"primary\">\r\n                                      {assignment.progress.completed} / {assignment.progress.total} \r\n                                      ({Math.round((assignment.progress.completed / assignment.progress.total) * 100)}%)\r\n                                    </Typography>\r\n                                  </Box>\r\n                                  <Box sx={{ width: '100%', bgcolor: 'grey.200', borderRadius: 1, height: 8 }}>\r\n                                    <Box \r\n                                      sx={{ \r\n                                        width: `${(assignment.progress.completed / assignment.progress.total) * 100}%`,\r\n                                        bgcolor: 'primary.main',\r\n                                        height: '100%',\r\n                                        borderRadius: 1,\r\n                                        transition: 'width 0.3s'\r\n                                      }} \r\n                                    />\r\n                                  </Box>\r\n                                </Box>\r\n\r\n                                {/* 요일별 스케줄 */}\r\n                                <Box sx={{ mb: 2 }}>\r\n                                  <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>요일별 스케줄</Typography>\r\n                                  <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n                                    {Object.entries(assignment.weeklySchedule).map(([day, schedule]) => \r\n                                      schedule.isActive && (\r\n                                        <Chip\r\n                                          key={day}\r\n                                          label={`${day}: ${schedule.dailyAmount}`}\r\n                                          size=\"small\"\r\n                                          variant=\"outlined\"\r\n                                        />\r\n                                      )\r\n                                    )}\r\n                                  </Box>\r\n                                </Box>\r\n\r\n                                {/* 단어장 정보 */}\r\n                                {assignment.area === 'vocabulary' && assignment.startUnit && (\r\n                                  <Box sx={{ p: 2, bgcolor: 'success.50', borderRadius: 1 }}>\r\n                                    <Typography variant=\"subtitle2\" color=\"success.main\">\r\n                                      시작 단원: {assignment.startUnit}\r\n                                    </Typography>\r\n                                  </Box>\r\n                                )}\r\n                              </CardContent>\r\n                            </Card>\r\n                          </Grid>\r\n                        ))}\r\n                      </Grid>\r\n                    </>\r\n                  ) : (\r\n                    <Typography variant=\"body1\" color=\"text.secondary\" sx={{ textAlign: 'center', py: 4 }}>\r\n                      배정된 과제가 없습니다.\r\n                    </Typography>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* 성적 정보 섹션 */}\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                    성적 정보\r\n                  </Typography>\r\n                  \r\n                  {editingDetailStudent.grades && Object.keys(editingDetailStudent.grades).length > 0 ? (\r\n                    <Box>\r\n                      {Object.entries(editingDetailStudent.grades).map(([year, grades]) => (\r\n                        <Box key={year} sx={{ mb: 3 }}>\r\n                          <Typography variant=\"subtitle1\" sx={{ mb: 2, fontWeight: 600 }}>\r\n                            {year}년\r\n                          </Typography>\r\n                          \r\n                          {/* 모의고사 성적 */}\r\n                          <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>모의고사</Typography>\r\n                          <Grid container spacing={2} sx={{ mb: 2 }}>\r\n                            {grades.mockExam3 && (\r\n                              <Grid item xs={6} md={3}>\r\n                                <Card variant=\"outlined\">\r\n                                  <CardContent sx={{ p: 2 }}>\r\n                                    <Typography variant=\"caption\" color=\"text.secondary\">3월</Typography>\r\n                                    <Typography variant=\"body1\">{grades.mockExam3}</Typography>\r\n                                  </CardContent>\r\n                                </Card>\r\n                              </Grid>\r\n                            )}\r\n                            {grades.mockExam6 && (\r\n                              <Grid item xs={6} md={3}>\r\n                                <Card variant=\"outlined\">\r\n                                  <CardContent sx={{ p: 2 }}>\r\n                                    <Typography variant=\"caption\" color=\"text.secondary\">6월</Typography>\r\n                                    <Typography variant=\"body1\">{grades.mockExam6}</Typography>\r\n                                  </CardContent>\r\n                                </Card>\r\n                              </Grid>\r\n                            )}\r\n                            {grades.mockExam9 && (\r\n                              <Grid item xs={6} md={3}>\r\n                                <Card variant=\"outlined\">\r\n                                  <CardContent sx={{ p: 2 }}>\r\n                                    <Typography variant=\"caption\" color=\"text.secondary\">9월</Typography>\r\n                                    <Typography variant=\"body1\">{grades.mockExam9}</Typography>\r\n                                  </CardContent>\r\n                                </Card>\r\n                              </Grid>\r\n                            )}\r\n                            {grades.mockExam11 && (\r\n                              <Grid item xs={6} md={3}>\r\n                                <Card variant=\"outlined\">\r\n                                  <CardContent sx={{ p: 2 }}>\r\n                                    <Typography variant=\"caption\" color=\"text.secondary\">11월</Typography>\r\n                                    <Typography variant=\"body1\">{grades.mockExam11}</Typography>\r\n                                  </CardContent>\r\n                                </Card>\r\n                              </Grid>\r\n                            )}\r\n                          </Grid>\r\n                          \r\n                          {/* 학기별 성적 */}\r\n                          <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>학기별 성적</Typography>\r\n                          <Grid container spacing={2}>\r\n                            {grades.midterm1 && (\r\n                              <Grid item xs={6} md={3}>\r\n                                <Card variant=\"outlined\">\r\n                                  <CardContent sx={{ p: 2 }}>\r\n                                    <Typography variant=\"caption\" color=\"text.secondary\">1학기 중간</Typography>\r\n                                    <Typography variant=\"body1\">{grades.midterm1}</Typography>\r\n                                  </CardContent>\r\n                                </Card>\r\n                              </Grid>\r\n                            )}\r\n                            {grades.final1 && (\r\n                              <Grid item xs={6} md={3}>\r\n                                <Card variant=\"outlined\">\r\n                                  <CardContent sx={{ p: 2 }}>\r\n                                    <Typography variant=\"caption\" color=\"text.secondary\">1학기 기말</Typography>\r\n                                    <Typography variant=\"body1\">{grades.final1}</Typography>\r\n                                  </CardContent>\r\n                                </Card>\r\n                              </Grid>\r\n                            )}\r\n                            {grades.midterm2 && (\r\n                              <Grid item xs={6} md={3}>\r\n                                <Card variant=\"outlined\">\r\n                                  <CardContent sx={{ p: 2 }}>\r\n                                    <Typography variant=\"caption\" color=\"text.secondary\">2학기 중간</Typography>\r\n                                    <Typography variant=\"body1\">{grades.midterm2}</Typography>\r\n                                  </CardContent>\r\n                                </Card>\r\n                              </Grid>\r\n                            )}\r\n                            {grades.final2 && (\r\n                              <Grid item xs={6} md={3}>\r\n                                <Card variant=\"outlined\">\r\n                                  <CardContent sx={{ p: 2 }}>\r\n                                    <Typography variant=\"caption\" color=\"text.secondary\">2학기 기말</Typography>\r\n                                    <Typography variant=\"body1\">{grades.final2}</Typography>\r\n                                  </CardContent>\r\n                                </Card>\r\n                              </Grid>\r\n                            )}\r\n                          </Grid>\r\n                        </Box>\r\n                      ))}\r\n                    </Box>\r\n                  ) : (\r\n                    <Typography variant=\"body1\" color=\"text.secondary\" sx={{ textAlign: 'center', py: 4 }}>\r\n                      등록된 성적이 없습니다.\r\n                    </Typography>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseStudentDetailDialog}>닫기</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StudentManagement; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
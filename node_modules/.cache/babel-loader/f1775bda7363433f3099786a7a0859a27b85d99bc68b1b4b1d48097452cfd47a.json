{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\pro_planner\\\\src\\\\pages\\\\StudentPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Card, CardContent, Grid, Chip, LinearProgress, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, Dialog, DialogTitle, DialogContent, DialogActions, IconButton, Avatar, useTheme, useMediaQuery, Drawer, List, ListItem, ListItemText, ListItemIcon, Divider, AppBar, Toolbar, Container, Tabs, Tab, Slider, ToggleButton, ToggleButtonGroup, Tooltip } from '@mui/material';\nimport { Assignment as AssignmentIcon, CheckCircle as CheckCircleIcon, ArrowBack as ArrowBackIcon, Info as InfoIcon, CalendarToday as CalendarIcon, TrendingUp as TrendingUpIcon, Close as CloseIcon, Refresh as RefreshIcon, Today as TodayIcon, ViewModule as ViewModuleIcon, PlayArrow as PlayArrowIcon, Settings as SettingsIcon, Timer as TimerIcon, DateRange as DateRangeIcon, CalendarMonth as CalendarMonthIcon, NavigateBefore as NavigateBeforeIcon, NavigateNext as NavigateNextIcon } from '@mui/icons-material';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { loadStudents, saveStudents, loadTasks } from '../utils/storage';\nimport VocabularyLearning from '../components/VocabularyLearning';\nimport VocabularyEvaluation from '../components/VocabularyEvaluation';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        pt: 2\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_c = TabPanel;\nconst StudentPage = () => {\n  _s();\n  var _student$learningHist0, _student$evaluationHi5, _student$evaluationHi6;\n  const {\n    studentId\n  } = useParams();\n  const navigate = useNavigate();\n  const [student, setStudent] = useState(null);\n  const [selectedAssignment, setSelectedAssignment] = useState(null);\n  const [openDetailDialog, setOpenDetailDialog] = useState(false);\n  const [openMobileDetail, setOpenMobileDetail] = useState(false);\n  const [tabValue, setTabValue] = useState(0);\n  const [showVocabularyLearning, setShowVocabularyLearning] = useState(false);\n  const [showVocabularyEvaluation, setShowVocabularyEvaluation] = useState(false);\n  const [showEvaluationSelectDialog, setShowEvaluationSelectDialog] = useState(false);\n  const [evaluationLevel, setEvaluationLevel] = useState(1);\n  const [selectedArea, setSelectedArea] = useState('all');\n  const [timerDuration, setTimerDuration] = useState(() => {\n    // 로컬 스토리지에서 저장된 타이머 시간 불러오기\n    const saved = localStorage.getItem(`timer_duration_${studentId}`);\n    return saved ? parseFloat(saved) : 1.5;\n  });\n  const [viewMode, setViewMode] = useState('today');\n  const [weekOffset, setWeekOffset] = useState(0); // 0 = 이번 주, -1 = 지난 주, 1 = 다음 주\n  const [monthOffset, setMonthOffset] = useState(0); // 0 = 이번 달, -1 = 지난 달, 1 = 다음 달\n\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  useEffect(() => {\n    if (studentId) {\n      const students = loadStudents();\n      const foundStudent = students.find(s => s.id === studentId);\n      if (foundStudent) {\n        setStudent(foundStudent);\n      } else {\n        // 학생을 찾을 수 없는 경우 관리자 페이지로 리다이렉트\n        navigate('/students');\n      }\n    }\n  }, [studentId, navigate]);\n\n  // viewMode가 변경될 때 selectedArea를 리셋\n  useEffect(() => {\n    setSelectedArea('all');\n  }, [viewMode]);\n\n  // 학생 정보 변경 모니터링\n  useEffect(() => {\n    if (student) {\n      var _student$learningHist;\n      console.log('Student data updated:', {\n        name: student.name,\n        taskAssignments: student.taskAssignments.map(a => ({\n          taskId: a.taskId,\n          title: a.taskTitle\n        })),\n        learningHistoryCount: ((_student$learningHist = student.learningHistory) === null || _student$learningHist === void 0 ? void 0 : _student$learningHist.length) || 0\n      });\n    }\n  }, [student]);\n  const getAreaText = area => {\n    switch (area) {\n      case 'vocabulary':\n        return '단어';\n      case 'phrase':\n        return '구문';\n      case 'grammar':\n        return '어법';\n      case 'logic':\n        return '논리';\n      default:\n        return area;\n    }\n  };\n  const getStatusText = status => {\n    switch (status) {\n      case 'active':\n        return '진행중';\n      case 'completed':\n        return '완료';\n      case 'paused':\n        return '일시정지';\n      default:\n        return status;\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'active':\n        return 'success';\n      case 'completed':\n        return 'primary';\n      case 'paused':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  };\n  const getGradeText = grade => {\n    return grade;\n  };\n  const getGradeColor = grade => {\n    switch (grade) {\n      case '초6':\n        return 'warning';\n      case '중1':\n      case '중2':\n      case '중3':\n        return 'primary';\n      case '고1':\n      case '고2':\n      case '고3':\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n  const handleOpenDetailDialog = assignment => {\n    console.log('Opening detail dialog for assignment:', assignment.taskTitle, 'taskId:', assignment.taskId);\n    setSelectedAssignment(assignment);\n    if (isMobile) {\n      setOpenMobileDetail(true);\n    } else {\n      setOpenDetailDialog(true);\n    }\n  };\n  const handleCloseDetailDialog = () => {\n    setOpenDetailDialog(false);\n    setOpenMobileDetail(false);\n    setSelectedAssignment(null);\n  };\n  const handleStartVocabularyLearning = (assignment, targetDate) => {\n    console.log('Starting vocabulary learning for assignment:', assignment);\n    console.log('Assignment taskId:', assignment.taskId);\n    console.log('Assignment title:', assignment.taskTitle);\n    console.log('Target date:', targetDate);\n\n    // targetDate가 있으면 assignment에 추가\n    const assignmentWithDate = targetDate ? {\n      ...assignment,\n      targetDate: targetDate.toISOString()\n    } : assignment;\n    console.log('Assignment with date:', assignmentWithDate);\n    setSelectedAssignment(assignmentWithDate);\n    // 타이머 설정 다이얼로그를 건너뛰고 바로 학습 시작\n    setShowVocabularyLearning(true);\n  };\n  const handleStartEvaluation = (assignment, targetDate) => {\n    var _student$learningHist2, _student$evaluationHi, _latestEvaluation$res;\n    // 해당 과제의 학습 기록 확인\n    const taskLearningHistory = (student === null || student === void 0 ? void 0 : (_student$learningHist2 = student.learningHistory) === null || _student$learningHist2 === void 0 ? void 0 : _student$learningHist2.filter(history => history.taskId === assignment.taskId)) || [];\n    if (taskLearningHistory.length === 0) {\n      alert('먼저 학습을 완료해주세요. 평가는 학습 완료 후에 가능합니다.');\n      return;\n    }\n\n    // targetDate가 있으면 assignment에 추가\n    const assignmentWithDate = targetDate ? {\n      ...assignment,\n      targetDate: targetDate.toISOString()\n    } : assignment;\n    setSelectedAssignment(assignmentWithDate);\n\n    // 해당 과제의 모든 평가 기록 가져오기\n    const allEvaluations = (student === null || student === void 0 ? void 0 : (_student$evaluationHi = student.evaluationHistory) === null || _student$evaluationHi === void 0 ? void 0 : _student$evaluationHi.filter(e => e.taskId === assignment.taskId)) || [];\n\n    // 가장 최근 평가 찾기\n    const latestEvaluation = allEvaluations.length > 0 ? allEvaluations.reduce((latest, current) => current.evaluationLevel > latest.evaluationLevel ? current : latest) : null;\n    if (!latestEvaluation) {\n      // 평가 기록이 없으면 1차 평가 시작\n      setEvaluationLevel(1);\n      setShowVocabularyEvaluation(true);\n    } else if (((_latestEvaluation$res = latestEvaluation.results.incorrectWords) === null || _latestEvaluation$res === void 0 ? void 0 : _latestEvaluation$res.length) > 0) {\n      // 가장 최근 평가에 오답이 있으면 평가 선택 다이얼로그 표시\n      setShowEvaluationSelectDialog(true);\n    } else {\n      // 가장 최근 평가에서 모두 정답인 경우\n      alert(`${latestEvaluation.evaluationLevel}차 평가에서 모든 문제를 맞추셨습니다. 추가 평가가 필요하지 않습니다.`);\n    }\n  };\n  const handleCompleteVocabularyLearning = results => {\n    // 학습 완료 처리 로직\n    console.log('Vocabulary learning completed with results:', results);\n    console.log('Selected assignment:', selectedAssignment);\n    if (!student || !selectedAssignment) return;\n\n    // targetDate가 있으면 해당 날짜 사용, 없으면 현재 날짜 사용\n    const learningDate = selectedAssignment.targetDate ? new Date(selectedAssignment.targetDate) : new Date();\n    console.log('Learning date:', learningDate);\n    console.log('Selected assignment taskId:', selectedAssignment.taskId);\n    console.log('Selected assignment targetUnit:', selectedAssignment.targetUnit);\n\n    // 학습 결과 요약\n    const totalRounds = results.length;\n    const finalResult = results[results.length - 1];\n    const totalWords = results[0].totalWords;\n\n    // actualFinalCompletedWords가 있으면 사용, 없으면 기존 방식으로 계산\n    let finalCompletedWords;\n    if (finalResult.actualFinalCompletedWords !== undefined) {\n      finalCompletedWords = finalResult.actualFinalCompletedWords;\n    } else {\n      // 1회차에서 완료한 단어 수\n      const firstRoundCompleted = results.length > 1 ? totalWords - results[1].totalWords : results[0].completedWords;\n\n      // 마지막 회차에서 완료한 단어 수\n      const lastRoundCompleted = results.length > 1 ? finalResult.completedWords : 0;\n      finalCompletedWords = firstRoundCompleted + lastRoundCompleted;\n    }\n\n    // 학생 정보 업데이트\n    const updatedStudent = {\n      ...student\n    };\n\n    // 학습 기록 배열이 없으면 생성\n    if (!updatedStudent.learningHistory) {\n      updatedStudent.learningHistory = [];\n    }\n\n    // 해당 과제의 기존 학습 횟수 계산 (단원별로 구분)\n    const targetUnit = selectedAssignment.targetUnit;\n    const previousLearningCount = updatedStudent.learningHistory.filter(history => history.taskId === selectedAssignment.taskId && (!targetUnit || history.targetUnit === targetUnit)).length;\n    console.log('Previous learning count for taskId', selectedAssignment.taskId, 'and unit', targetUnit, ':', previousLearningCount);\n\n    // 학습 기록 저장 (학습 회차 추가)\n    const learningRecord = {\n      date: learningDate.toISOString(),\n      // targetDate 사용\n      taskId: selectedAssignment.taskId,\n      taskTitle: selectedAssignment.taskTitle,\n      targetUnit: targetUnit,\n      // 단원 정보 추가\n      learningSession: previousLearningCount + 1,\n      // 학습 회차 (1회차, 2회차...)\n      isFirstLearning: previousLearningCount === 0,\n      // 최초 학습 여부\n      rounds: results,\n      summary: {\n        totalRounds,\n        totalWords,\n        finalCompletedWords,\n        completionRate: Math.round(finalCompletedWords / totalWords * 100)\n      }\n    };\n    console.log('New learning record:', learningRecord);\n    console.log('Learning record date:', learningRecord.date);\n    console.log('Learning record date (local):', new Date(learningRecord.date).toLocaleString());\n\n    // 학습 기록 추가\n    updatedStudent.learningHistory.push(learningRecord);\n    console.log('Updated learning history:', updatedStudent.learningHistory);\n    console.log('Learning history for all tasks:', updatedStudent.learningHistory.map(h => ({\n      taskId: h.taskId,\n      date: h.date\n    })));\n\n    // 과제 진행률 업데이트\n    const assignmentIndex = updatedStudent.taskAssignments.findIndex(a => a.taskId === selectedAssignment.taskId);\n    if (assignmentIndex !== -1) {\n      // 완료된 단어 수만큼 진행률 증가\n      updatedStudent.taskAssignments[assignmentIndex].progress.completed += finalCompletedWords;\n\n      // 진행률이 전체를 초과하지 않도록 조정\n      const totalProgress = updatedStudent.taskAssignments[assignmentIndex].progress.total;\n      if (updatedStudent.taskAssignments[assignmentIndex].progress.completed > totalProgress) {\n        updatedStudent.taskAssignments[assignmentIndex].progress.completed = totalProgress;\n      }\n    }\n\n    // 학생 정보 저장\n    const students = loadStudents();\n    const studentIndex = students.findIndex(s => s.id === student.id);\n    if (studentIndex !== -1) {\n      students[studentIndex] = updatedStudent;\n      saveStudents(students);\n      setStudent(updatedStudent);\n    }\n\n    // 결과 알림\n    const sessionText = learningRecord.learningSession === 1 ? '최초 학습' : `${learningRecord.learningSession}회차 학습`;\n    alert(`${sessionText}이 완료되었습니다!\\n\\n총 ${totalRounds}회차 학습\\n전체 ${totalWords}개 단어 중 ${finalCompletedWords}개 완료 (${learningRecord.summary.completionRate}%)`);\n    setShowVocabularyLearning(false);\n    setSelectedAssignment(null);\n  };\n  const handleCloseVocabularyLearning = () => {\n    setShowVocabularyLearning(false);\n    setSelectedAssignment(null);\n  };\n  const handleCompleteVocabularyEvaluation = results => {\n    console.log('평가 완료:', results);\n    if (!student || !selectedAssignment) return;\n\n    // targetDate가 있으면 해당 날짜 사용, 없으면 현재 날짜 사용\n    const evaluationDate = selectedAssignment.targetDate ? new Date(selectedAssignment.targetDate) : new Date();\n\n    // 평가 결과를 학생 정보에 저장\n    const evaluationRecord = {\n      date: evaluationDate.toISOString(),\n      // targetDate 사용\n      taskId: selectedAssignment.taskId,\n      taskTitle: selectedAssignment.taskTitle,\n      evaluationLevel: results.evaluationLevel,\n      results: results\n    };\n\n    // 학생 정보 업데이트\n    const updatedStudent = {\n      ...student\n    };\n\n    // 평가 기록 배열이 없으면 생성\n    if (!updatedStudent.evaluationHistory) {\n      updatedStudent.evaluationHistory = [];\n    }\n\n    // 평가 기록 추가\n    updatedStudent.evaluationHistory.push(evaluationRecord);\n\n    // 학생 정보 저장\n    const students = loadStudents();\n    const studentIndex = students.findIndex(s => s.id === student.id);\n    if (studentIndex !== -1) {\n      students[studentIndex] = updatedStudent;\n      saveStudents(students);\n      setStudent(updatedStudent);\n    }\n\n    // 결과 알림\n    alert(`${results.evaluationLevel}차 평가가 완료되었습니다!\\n\\n정답: ${results.correctWords}개\\n오답: ${results.incorrectWords.length}개\\n정답률: ${Math.round(results.correctWords / results.totalWords * 100)}%`);\n    setShowVocabularyEvaluation(false);\n    setSelectedAssignment(null);\n  };\n  const handleCloseVocabularyEvaluation = () => {\n    setShowVocabularyEvaluation(false);\n    setSelectedAssignment(null);\n  };\n  const handleRestartLearning = () => {\n    var _student$taskAssignme, _targetTask$vocabular;\n    // 기존 과제 배정 정보에서 startUnit 확인\n    const existingAssignment = student === null || student === void 0 ? void 0 : (_student$taskAssignme = student.taskAssignments) === null || _student$taskAssignme === void 0 ? void 0 : _student$taskAssignme.find(a => a.taskId === (selectedAssignment === null || selectedAssignment === void 0 ? void 0 : selectedAssignment.taskId));\n    const startUnit = (existingAssignment === null || existingAssignment === void 0 ? void 0 : existingAssignment.startUnit) || '';\n    console.log('Restarting learning with:', {\n      selectedAssignment,\n      existingAssignment,\n      startUnit\n    });\n\n    // 현재 과제 정보 가져오기\n    const tasks = loadTasks();\n    const targetTask = tasks.find(t => t.id === (selectedAssignment === null || selectedAssignment === void 0 ? void 0 : selectedAssignment.taskId) || t.title === (selectedAssignment === null || selectedAssignment === void 0 ? void 0 : selectedAssignment.taskTitle));\n    if (!targetTask) {\n      console.error('Target task not found');\n      alert('과제를 찾을 수 없습니다.');\n      return;\n    }\n    console.log('Found target task:', targetTask);\n    console.log('Task vocabularyData:', targetTask.vocabularyData);\n\n    // 찾은 과제로 배정 생성\n    const assignment = {\n      taskId: targetTask.id,\n      taskTitle: targetTask.title,\n      area: targetTask.area,\n      weeklySchedule: {\n        '월': {\n          isActive: true,\n          dailyAmount: '5'\n        },\n        '화': {\n          isActive: true,\n          dailyAmount: '5'\n        },\n        '수': {\n          isActive: true,\n          dailyAmount: '5'\n        },\n        '목': {\n          isActive: true,\n          dailyAmount: '5'\n        },\n        '금': {\n          isActive: true,\n          dailyAmount: '5'\n        },\n        '토': {\n          isActive: false,\n          dailyAmount: '0'\n        },\n        '일': {\n          isActive: false,\n          dailyAmount: '0'\n        }\n      },\n      startDate: new Date().toISOString().split('T')[0],\n      status: 'active',\n      progress: {\n        completed: 0,\n        total: ((_targetTask$vocabular = targetTask.vocabularyData) === null || _targetTask$vocabular === void 0 ? void 0 : _targetTask$vocabular.length) || 0\n      },\n      vocabularyData: targetTask.vocabularyData,\n      startUnit: startUnit // 기존 startUnit 유지\n    };\n    console.log('Created new assignment:', assignment);\n    console.log('Assignment has vocabularyData:', !!assignment.vocabularyData);\n    if (student) {\n      const updatedStudent = {\n        ...student,\n        taskAssignments: [assignment]\n      };\n\n      // 로컬 스토리지에 저장\n      const students = loadStudents();\n      const updatedStudents = students.map(s => s.id === student.id ? updatedStudent : s);\n      saveStudents(updatedStudents);\n\n      // 상태 업데이트\n      setStudent(updatedStudent);\n      console.log('Student updated with new assignment');\n    }\n  };\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  const getTodayAssignments = () => {\n    if (!student) return [];\n    console.log('Getting today assignments for student:', student.name);\n    console.log('All task assignments:', student.taskAssignments);\n\n    // 오늘 요일 확인\n    const today = new Date();\n    const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n    const todayDayName = dayNames[today.getDay()];\n    console.log('Today is:', todayDayName);\n\n    // 오늘 요일에 활성화된 과제만 필터링\n    const todayTasks = student.taskAssignments.filter(assignment => {\n      var _assignment$weeklySch;\n      // 활성 상태인지 확인\n      if (assignment.status !== 'active') return false;\n\n      // 오늘 요일의 스케줄이 활성화되어 있는지 확인\n      const todaySchedule = (_assignment$weeklySch = assignment.weeklySchedule) === null || _assignment$weeklySch === void 0 ? void 0 : _assignment$weeklySch[todayDayName];\n      if (!(todaySchedule !== null && todaySchedule !== void 0 && todaySchedule.isActive)) return false;\n\n      // 시작일이 오늘보다 늦으면 제외\n      const assignmentStartDate = new Date(assignment.startDate);\n      assignmentStartDate.setHours(0, 0, 0, 0);\n      today.setHours(0, 0, 0, 0);\n      if (assignmentStartDate > today) return false;\n\n      // 종료일이 있고 오늘보다 이전이면 제외\n      if (assignment.endDate) {\n        const assignmentEndDate = new Date(assignment.endDate);\n        assignmentEndDate.setHours(0, 0, 0, 0);\n        if (assignmentEndDate < today) return false;\n      }\n\n      // 전체 학습이 완료된 과제는 제외\n      if (isAssignmentCompleted(assignment, today)) return false;\n      console.log('Task included in today:', assignment.taskTitle, 'taskId:', assignment.taskId);\n      return true;\n    });\n    console.log('Today tasks count:', todayTasks.length);\n    console.log('Today tasks:', todayTasks.map(t => ({\n      title: t.taskTitle,\n      taskId: t.taskId\n    })));\n\n    // 오늘의 과제 뷰에서는 항상 더미 데이터를 반환하여 UI가 표시되도록 함\n    if (todayTasks.length === 0) {\n      return [{\n        taskId: 'dummy',\n        taskTitle: 'dummy',\n        area: 'vocabulary',\n        weeklySchedule: {},\n        startDate: '',\n        status: 'active',\n        progress: {\n          completed: 0,\n          total: 0\n        }\n      }];\n    }\n    return todayTasks;\n  };\n  const getWeekAssignments = () => {\n    if (!student) return [];\n\n    // 이번 주에 학습 예정인 모든 과제\n    const today = new Date();\n    const dayOfWeek = today.getDay();\n    const weekStart = new Date(today);\n    weekStart.setDate(today.getDate() - dayOfWeek);\n    const weekEnd = new Date(weekStart);\n    weekEnd.setDate(weekStart.getDate() + 6);\n    return student.taskAssignments.filter(assignment => {\n      if (assignment.status !== 'active') return false;\n\n      // 주간 스케줄에서 이번 주에 활성화된 요일이 있는지 확인\n      const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n      return Object.entries(assignment.weeklySchedule || {}).some(([day, schedule]) => schedule.isActive);\n    });\n  };\n  const getMonthAssignments = () => {\n    if (!student) return [];\n\n    // 이번 달에 활성화된 모든 과제\n    return student.taskAssignments.filter(assignment => assignment.status === 'active');\n  };\n  const getActiveAssignments = () => {\n    if (!student) return [];\n    const activeAssignments = student.taskAssignments.filter(assignment => assignment.status === 'active');\n\n    // taskId 중복 체크\n    const taskIds = activeAssignments.map(a => a.taskId);\n    const uniqueTaskIds = new Set(taskIds);\n    if (taskIds.length !== uniqueTaskIds.size) {\n      console.error('Duplicate taskIds found!', taskIds);\n    }\n    console.log('Active assignments taskIds:', taskIds);\n    return activeAssignments;\n  };\n  const getAssignmentsByViewMode = () => {\n    switch (viewMode) {\n      case 'week':\n        return getWeekAssignments();\n      case 'month':\n        return getMonthAssignments();\n      default:\n        return getTodayAssignments();\n    }\n  };\n  const getViewModeTitle = () => {\n    switch (viewMode) {\n      case 'week':\n        return '이번 주 과제';\n      case 'month':\n        return '이번 달 과제';\n      default:\n        return '오늘의 과제';\n    }\n  };\n\n  // 주간 날짜 범위 계산\n  const getWeekDateRange = (offset = 0) => {\n    const today = new Date();\n    const currentDay = today.getDay();\n    const diff = currentDay === 0 ? -6 : 1 - currentDay; // 월요일 기준\n\n    const monday = new Date(today);\n    monday.setDate(today.getDate() + diff + offset * 7);\n    const sunday = new Date(monday);\n    sunday.setDate(monday.getDate() + 6);\n    return {\n      monday,\n      sunday\n    };\n  };\n\n  // 주간 타이틀 생성\n  const getWeekTitle = () => {\n    if (viewMode !== 'week') return getViewModeTitle();\n    const {\n      monday,\n      sunday\n    } = getWeekDateRange(weekOffset);\n    const formatDate = date => `${date.getMonth() + 1}/${date.getDate()}`;\n    if (weekOffset === 0) {\n      return `이번 주 과제 (${formatDate(monday)} - ${formatDate(sunday)})`;\n    } else if (weekOffset < 0) {\n      return `${Math.abs(weekOffset)}주 전 과제 (${formatDate(monday)} - ${formatDate(sunday)})`;\n    } else {\n      return `${weekOffset}주 후 과제 (${formatDate(monday)} - ${formatDate(sunday)})`;\n    }\n  };\n\n  // 월간 날짜 계산\n  const getMonthDateRange = (offset = 0) => {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = today.getMonth() + offset;\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    return {\n      firstDay,\n      lastDay,\n      year: firstDay.getFullYear(),\n      month: firstDay.getMonth()\n    };\n  };\n\n  // 월간 캘린더 데이터 생성\n  const getMonthCalendarData = () => {\n    const {\n      firstDay,\n      lastDay,\n      year,\n      month\n    } = getMonthDateRange(monthOffset);\n    const startDayOfWeek = (firstDay.getDay() + 6) % 7; // 0 = 월요일, 6 = 일요일\n    const daysInMonth = lastDay.getDate();\n    const calendar = [];\n    let week = [];\n\n    // 첫 주의 빈 날짜 채우기\n    for (let i = 0; i < startDayOfWeek; i++) {\n      week.push(null);\n    }\n\n    // 날짜 채우기\n    for (let day = 1; day <= daysInMonth; day++) {\n      week.push(new Date(year, month, day));\n      if (week.length === 7) {\n        calendar.push(week);\n        week = [];\n      }\n    }\n\n    // 마지막 주의 빈 날짜 채우기\n    if (week.length > 0) {\n      while (week.length < 7) {\n        week.push(null);\n      }\n      calendar.push(week);\n    }\n    return calendar;\n  };\n\n  // 월간 타이틀 생성\n  const getMonthTitle = () => {\n    if (viewMode !== 'month') return getViewModeTitle();\n    const {\n      year,\n      month\n    } = getMonthDateRange(monthOffset);\n    const monthNames = ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'];\n    if (monthOffset === 0) {\n      return `${year}년 ${monthNames[month]} 과제`;\n    } else if (monthOffset < 0) {\n      return `${year}년 ${monthNames[month]} 과제`;\n    } else {\n      return `${year}년 ${monthNames[month]} 과제`;\n    }\n  };\n\n  // 전체 타이틀 생성 (주간/월간 통합)\n  const getViewTitle = () => {\n    switch (viewMode) {\n      case 'week':\n        return getWeekTitle();\n      case 'month':\n        return getMonthTitle();\n      default:\n        return getViewModeTitle();\n    }\n  };\n  const getChipLabel = mode => {\n    switch (mode) {\n      case 'week':\n        return '주간 학습';\n      case 'month':\n        return '월간 학습';\n      default:\n        return '오늘 학습';\n    }\n  };\n  const getWeeklyGroupedAssignments = () => {\n    if (viewMode !== 'week') return null;\n    const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n    const weeklyGroups = {};\n\n    // 각 요일별로 빈 배열 초기화\n    dayNames.forEach(day => {\n      weeklyGroups[day] = [];\n    });\n\n    // 각 과제를 해당하는 요일에 추가\n    viewAssignments.forEach(assignment => {\n      dayNames.forEach(day => {\n        var _assignment$weeklySch2, _assignment$weeklySch3;\n        if ((_assignment$weeklySch2 = assignment.weeklySchedule) !== null && _assignment$weeklySch2 !== void 0 && (_assignment$weeklySch3 = _assignment$weeklySch2[day]) !== null && _assignment$weeklySch3 !== void 0 && _assignment$weeklySch3.isActive) {\n          weeklyGroups[day].push(assignment);\n        }\n      });\n    });\n    return weeklyGroups;\n  };\n\n  // 특정 요일의 학습 가능 여부 판단\n  const canStudyOnDay = (dayIndex, assignment) => {\n    if (!assignment.startDate || !assignment.weeklySchedule) return false;\n    const startDate = new Date(assignment.startDate);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    startDate.setHours(0, 0, 0, 0);\n\n    // 시작일 이전이면 학습 불가\n    if (today < startDate) return false;\n\n    // 주간 스케줄에서 활성화된 요일만 카운트\n    const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n    let studyDayCount = 0;\n    let targetStudyDay = 0;\n\n    // 시작일부터 오늘까지 학습일 수 계산\n    const currentDate = new Date(startDate);\n    while (currentDate <= today) {\n      var _assignment$weeklySch4;\n      const currentDayIndex = currentDate.getDay();\n      const currentDayName = dayNames[currentDayIndex];\n      if ((_assignment$weeklySch4 = assignment.weeklySchedule[currentDayName]) !== null && _assignment$weeklySch4 !== void 0 && _assignment$weeklySch4.isActive) {\n        studyDayCount++;\n\n        // 목표 요일의 학습일 번호 계산\n        if (currentDayIndex === dayIndex && currentDate.getTime() === today.getTime()) {\n          targetStudyDay = studyDayCount;\n        }\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n\n    // 이번 주의 특정 요일이 몇 번째 학습일인지 계산\n    const thisWeekStart = new Date(today);\n    thisWeekStart.setDate(today.getDate() - today.getDay()); // 이번 주 일요일\n\n    let weekStudyDay = 0;\n    for (let i = 0; i < 7; i++) {\n      var _assignment$weeklySch5;\n      const checkDate = new Date(thisWeekStart);\n      checkDate.setDate(thisWeekStart.getDate() + i);\n      if (checkDate >= startDate && (_assignment$weeklySch5 = assignment.weeklySchedule[dayNames[i]]) !== null && _assignment$weeklySch5 !== void 0 && _assignment$weeklySch5.isActive) {\n        weekStudyDay++;\n        if (i === dayIndex) {\n          // 해당 요일이 전체 학습 진행에서 몇 번째인지\n          const totalStudyDays = Math.floor((checkDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));\n          let dayNumber = 0;\n          for (let j = 0; j <= totalStudyDays; j++) {\n            var _assignment$weeklySch6;\n            const tempDate = new Date(startDate);\n            tempDate.setDate(startDate.getDate() + j);\n            const tempDayName = dayNames[tempDate.getDay()];\n            if ((_assignment$weeklySch6 = assignment.weeklySchedule[tempDayName]) !== null && _assignment$weeklySch6 !== void 0 && _assignment$weeklySch6.isActive) {\n              dayNumber++;\n            }\n          }\n\n          // 단원이 아직 남아있는지 확인\n          // 이 부분은 실제 단원 수와 비교해야 하지만, 일단 true 반환\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  // 특정 날짜에 학습할 단원 계산\n  const getUnitForDate = (assignment, targetDate) => {\n    if (!assignment.startDate || !assignment.weeklySchedule || !assignment.vocabularyData) {\n      return null;\n    }\n    const startDate = new Date(assignment.startDate);\n    startDate.setHours(0, 0, 0, 0);\n    targetDate.setHours(0, 0, 0, 0);\n\n    // 시작일 이전이면 null\n    if (targetDate < startDate) return null;\n\n    // 주간 스케줄에서 활성화된 요일만 카운트\n    const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n    let studyDayCount = 0;\n\n    // 시작일부터 목표일까지 학습일 수 계산\n    const currentDate = new Date(startDate);\n    while (currentDate <= targetDate) {\n      var _assignment$weeklySch7;\n      const currentDayName = dayNames[currentDate.getDay()];\n      if ((_assignment$weeklySch7 = assignment.weeklySchedule[currentDayName]) !== null && _assignment$weeklySch7 !== void 0 && _assignment$weeklySch7.isActive) {\n        studyDayCount++;\n        if (currentDate.getTime() === targetDate.getTime()) {\n          // 단원 목록 추출\n          const unitOrder = [];\n          const unitSet = new Set();\n          assignment.vocabularyData.forEach(word => {\n            if (!unitSet.has(word.unit)) {\n              unitSet.add(word.unit);\n              unitOrder.push(word.unit);\n            }\n          });\n\n          // 시작 단원 인덱스 찾기\n          const startUnitIndex = assignment.startUnit ? unitOrder.indexOf(assignment.startUnit) : 0;\n          if (startUnitIndex !== -1) {\n            const targetUnitIndex = startUnitIndex + (studyDayCount - 1);\n            if (targetUnitIndex < unitOrder.length) {\n              return unitOrder[targetUnitIndex];\n            }\n          }\n          return null;\n        }\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return null;\n  };\n\n  // 특정 날짜의 단원 진행 정보 가져오기\n  const getUnitProgressForDate = (assignment, targetDate) => {\n    if (!assignment.startDate || !assignment.weeklySchedule || !assignment.vocabularyData) {\n      return null;\n    }\n    const startDate = new Date(assignment.startDate);\n    startDate.setHours(0, 0, 0, 0);\n    targetDate.setHours(0, 0, 0, 0);\n\n    // 시작일 이전이면 null\n    if (targetDate < startDate) return null;\n\n    // 단원 목록 추출\n    const unitOrder = [];\n    const unitSet = new Set();\n    assignment.vocabularyData.forEach(word => {\n      if (!unitSet.has(word.unit)) {\n        unitSet.add(word.unit);\n        unitOrder.push(word.unit);\n      }\n    });\n    const totalUnits = unitOrder.length;\n    const startUnitIndex = assignment.startUnit ? unitOrder.indexOf(assignment.startUnit) : 0;\n\n    // 주간 스케줄에서 활성화된 요일만 카운트\n    const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n    let totalUnitsStudied = 0;\n\n    // 시작일부터 목표일까지 학습한 총 단원 수 계산\n    const currentDate = new Date(startDate);\n    while (currentDate <= targetDate) {\n      const currentDayName = dayNames[currentDate.getDay()];\n      const daySchedule = assignment.weeklySchedule[currentDayName];\n      if (daySchedule !== null && daySchedule !== void 0 && daySchedule.isActive) {\n        const dailyAmount = Number(daySchedule.dailyAmount) || 0;\n        if (currentDate.getTime() === targetDate.getTime()) {\n          // 목표일의 시작 단원 번호 계산 (1부터 시작)\n          const currentStartUnit = startUnitIndex + totalUnitsStudied + 1;\n\n          // 전체 단원을 완료했는지 확인\n          const isCompleted = currentStartUnit > totalUnits;\n          return {\n            current: Math.min(currentStartUnit, totalUnits + 1),\n            total: totalUnits,\n            isCompleted\n          };\n        } else {\n          // 이전 날짜들의 학습량 누적\n          totalUnitsStudied += dailyAmount;\n        }\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return null;\n  };\n\n  // 과제가 이미 완료되었는지 확인\n  const isAssignmentCompleted = (assignment, targetDate) => {\n    if (!assignment.startDate || !assignment.weeklySchedule || !assignment.vocabularyData) {\n      return false;\n    }\n    const startDate = new Date(assignment.startDate);\n    startDate.setHours(0, 0, 0, 0);\n    targetDate.setHours(0, 0, 0, 0);\n\n    // 단원 목록 추출\n    const unitOrder = [];\n    const unitSet = new Set();\n    assignment.vocabularyData.forEach(word => {\n      if (!unitSet.has(word.unit)) {\n        unitSet.add(word.unit);\n        unitOrder.push(word.unit);\n      }\n    });\n    const totalUnits = unitOrder.length;\n    const startUnitIndex = assignment.startUnit ? unitOrder.indexOf(assignment.startUnit) : 0;\n\n    // 주간 스케줄에서 활성화된 요일만 카운트\n    const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n    let studyDayCount = 0;\n    let completedDate = null;\n\n    // 시작일부터 목표일까지 학습일 수 계산\n    const currentDate = new Date(startDate);\n    while (currentDate <= targetDate) {\n      var _assignment$weeklySch8;\n      const currentDayName = dayNames[currentDate.getDay()];\n      if ((_assignment$weeklySch8 = assignment.weeklySchedule[currentDayName]) !== null && _assignment$weeklySch8 !== void 0 && _assignment$weeklySch8.isActive) {\n        studyDayCount++;\n        const targetUnitIndex = startUnitIndex + (studyDayCount - 1);\n\n        // 마지막 단원을 학습한 날짜 찾기\n        if (targetUnitIndex === totalUnits - 1) {\n          completedDate = new Date(currentDate);\n          break;\n        }\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n\n    // 완료 날짜가 있고, 목표일이 완료 날짜 이후이면 true\n    return completedDate !== null && targetDate > completedDate;\n  };\n  const getUpcomingAssignments = () => {\n    if (!student) return [];\n    console.log('Getting upcoming assignments...');\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const assignments = [];\n\n    // 오늘부터 3일간의 과제 수집\n    for (let i = 0; i < 3; i++) {\n      const targetDate = new Date(today);\n      targetDate.setDate(today.getDate() + i);\n      const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n      const dayName = dayNames[targetDate.getDay()];\n      console.log(`Day ${i}: ${targetDate.toLocaleDateString()} (${dayName})`);\n\n      // 해당 날짜에 활성화된 과제 필터링\n      const dayAssignments = student.taskAssignments.filter(assignment => {\n        var _assignment$weeklySch9;\n        // 활성 상태인지 확인\n        if (assignment.status !== 'active') return false;\n\n        // 해당 요일의 스케줄이 활성화되어 있는지 확인\n        const daySchedule = (_assignment$weeklySch9 = assignment.weeklySchedule) === null || _assignment$weeklySch9 === void 0 ? void 0 : _assignment$weeklySch9[dayName];\n        if (!(daySchedule !== null && daySchedule !== void 0 && daySchedule.isActive)) return false;\n\n        // 시작일이 대상 날짜보다 늦으면 제외\n        const assignmentStartDate = new Date(assignment.startDate);\n        assignmentStartDate.setHours(0, 0, 0, 0);\n        if (assignmentStartDate > targetDate) return false;\n\n        // 종료일이 있고 대상 날짜보다 이전이면 제외\n        if (assignment.endDate) {\n          const assignmentEndDate = new Date(assignment.endDate);\n          assignmentEndDate.setHours(0, 0, 0, 0);\n          if (assignmentEndDate < targetDate) return false;\n        }\n\n        // 전체 학습이 완료된 과제는 제외\n        if (isAssignmentCompleted(assignment, targetDate)) return false;\n        console.log(`  Including assignment: ${assignment.taskTitle} (taskId: ${assignment.taskId})`);\n        return true;\n      });\n\n      // 각 과제를 단원별로 분리\n      const unitSeparatedAssignments = [];\n      dayAssignments.forEach(assignment => {\n        var _assignment$weeklySch0;\n        const daySchedule = (_assignment$weeklySch0 = assignment.weeklySchedule) === null || _assignment$weeklySch0 === void 0 ? void 0 : _assignment$weeklySch0[dayName];\n        const dailyAmount = Number(daySchedule === null || daySchedule === void 0 ? void 0 : daySchedule.dailyAmount) || 0;\n        console.log(`  Processing assignment: ${assignment.taskTitle}, dailyAmount: ${dailyAmount}`);\n        if (dailyAmount > 0 && assignment.vocabularyData) {\n          // 단원 목록 추출\n          const unitOrder = [];\n          const unitSet = new Set();\n          assignment.vocabularyData.forEach(word => {\n            if (!unitSet.has(word.unit)) {\n              unitSet.add(word.unit);\n              unitOrder.push(word.unit);\n            }\n          });\n          console.log(`    Units in order: ${unitOrder.join(', ')}`);\n\n          // 학습 진도 계산\n          const progress = getUnitProgressForDate(assignment, targetDate);\n          if (progress) {\n            console.log(`    Progress: ${progress.current}/${progress.total}`);\n\n            // 현재 단원 번호를 인덱스로 변환 (단원 번호는 1부터 시작, 인덱스는 0부터 시작)\n            const currentUnitIndex = progress.current - 1;\n            const endUnitIndex = Math.min(currentUnitIndex + dailyAmount, unitOrder.length);\n            console.log(`    Creating cards for units ${currentUnitIndex} to ${endUnitIndex - 1}`);\n\n            // 각 단원별로 별도의 카드 생성\n            for (let unitIndex = currentUnitIndex; unitIndex < endUnitIndex; unitIndex++) {\n              console.log(`      Creating card for unit: ${unitOrder[unitIndex]} (same taskId: ${assignment.taskId})`);\n              unitSeparatedAssignments.push({\n                ...assignment,\n                targetUnit: unitOrder[unitIndex]\n              });\n            }\n          }\n        } else {\n          // 단원 정보가 없으면 그대로 추가\n          unitSeparatedAssignments.push(assignment);\n        }\n      });\n      if (unitSeparatedAssignments.length > 0 || i === 0) {\n        // 오늘은 과제가 없어도 표시\n        assignments.push({\n          date: targetDate,\n          dayName: dayName,\n          assignments: unitSeparatedAssignments\n        });\n      }\n    }\n    return assignments;\n  };\n  if (!student) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"\\uD559\\uC0DD \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1215,\n      columnNumber: 7\n    }, this);\n  }\n  const todayAssignments = getTodayAssignments();\n  const activeAssignments = getActiveAssignments();\n  const viewAssignments = getAssignmentsByViewMode();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      pb: isMobile ? 8 : 0\n    },\n    children: [isMobile && /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"sticky\",\n      elevation: 1,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          onClick: () => navigate('/students'),\n          sx: {\n            mr: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1237,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flex: 1\n          },\n          children: student.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: getGradeText(student.grade),\n          color: getGradeColor(student.grade),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1242,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1230,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1229,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        px: isMobile ? 2 : 3,\n        py: isMobile ? 2 : 3\n      },\n      children: [!isMobile && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              mr: 2,\n              width: 64,\n              height: 64\n            },\n            children: student.name.charAt(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h1\",\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1,\n                mt: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: getGradeText(student.grade),\n                color: getGradeColor(student.grade),\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: student.status === 'active' ? '활성' : '비활성',\n                color: student.status === 'active' ? 'success' : 'error',\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1269,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1255,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1254,\n        columnNumber: 11\n      }, this), isMobile && /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 3,\n          borderRadius: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                mr: 2,\n                width: 48,\n                height: 48\n              },\n              children: student.name.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: student.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1289,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: student.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1292,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1288,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 1,\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Chip, {\n              label: getGradeText(student.grade),\n              color: getGradeColor(student.grade),\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: student.status === 'active' ? '활성' : '비활성',\n              color: student.status === 'active' ? 'success' : 'error',\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1304,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"\\uC5F0\\uB77D\\uCC98: \", student.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1313,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"\\uAC00\\uC785\\uC77C: \", student.joinDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1316,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                textAlign: 'right'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"primary\",\n                children: student.taskAssignments.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1321,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                children: \"\\uBC30\\uC815\\uB41C \\uACFC\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1324,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1320,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1311,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1283,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider',\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: tabValue,\n          onChange: handleTabChange,\n          variant: isMobile ? \"fullWidth\" : \"standard\",\n          sx: {\n            '& .MuiTab-root': {\n              minHeight: isMobile ? 56 : 48,\n              fontSize: isMobile ? '0.875rem' : '1rem'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(TodayIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1347,\n              columnNumber: 21\n            }, this),\n            label: \"\\uC624\\uB298\\uC758 \\uACFC\\uC81C\",\n            iconPosition: \"start\",\n            sx: {\n              '& .MuiTab-iconWrapper': {\n                mr: 1\n              },\n              '& .MuiTab-labelIcon': {\n                flexDirection: 'row'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(ViewModuleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1356,\n              columnNumber: 21\n            }, this),\n            label: \"\\uACFC\\uC81C \\uD604\\uD669\",\n            iconPosition: \"start\",\n            sx: {\n              '& .MuiTab-iconWrapper': {\n                mr: 1\n              },\n              '& .MuiTab-labelIcon': {\n                flexDirection: 'row'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1365,\n              columnNumber: 21\n            }, this),\n            label: \"\\uC124\\uC815\",\n            iconPosition: \"start\",\n            sx: {\n              '& .MuiTab-iconWrapper': {\n                mr: 1\n              },\n              '& .MuiTab-labelIcon': {\n                flexDirection: 'row'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1335,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 0,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              mb: 2,\n              flexWrap: 'wrap',\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1,\n                flexWrap: 'wrap'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TodayIcon, {\n                  sx: {\n                    mr: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1382,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: isMobile ? \"h6\" : \"h5\",\n                  sx: {\n                    fontWeight: 600\n                  },\n                  children: [getViewTitle(), \" (\", viewAssignments.length, \"\\uAC1C)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1383,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1381,\n                columnNumber: 17\n              }, this), viewMode === 'week' && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  ml: isMobile ? 0 : 2,\n                  mt: isMobile ? 1 : 0\n                },\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => setWeekOffset(weekOffset - 1),\n                  size: \"small\",\n                  sx: {\n                    border: '1px solid',\n                    borderColor: 'divider'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(NavigateBeforeIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1399,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1394,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  onClick: () => setWeekOffset(0),\n                  disabled: weekOffset === 0,\n                  sx: {\n                    mx: 1,\n                    minWidth: 'auto'\n                  },\n                  children: \"\\uC774\\uBC88 \\uC8FC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1401,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => setWeekOffset(weekOffset + 1),\n                  size: \"small\",\n                  sx: {\n                    border: '1px solid',\n                    borderColor: 'divider'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1414,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1409,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1388,\n                columnNumber: 19\n              }, this), viewMode === 'month' && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  ml: isMobile ? 0 : 2,\n                  mt: isMobile ? 1 : 0\n                },\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => setMonthOffset(monthOffset - 1),\n                  size: \"small\",\n                  sx: {\n                    border: '1px solid',\n                    borderColor: 'divider'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(NavigateBeforeIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1430,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1425,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  onClick: () => setMonthOffset(0),\n                  disabled: monthOffset === 0,\n                  sx: {\n                    mx: 1,\n                    minWidth: 'auto'\n                  },\n                  children: \"\\uC774\\uBC88 \\uB2EC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1432,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => setMonthOffset(monthOffset + 1),\n                  size: \"small\",\n                  sx: {\n                    border: '1px solid',\n                    borderColor: 'divider'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1445,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1440,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1419,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1380,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n              value: viewMode,\n              exclusive: true,\n              onChange: (event, newMode) => {\n                if (newMode !== null) {\n                  setViewMode(newMode);\n                  setWeekOffset(0); // 모드 변경 시 주차 초기화\n                  setMonthOffset(0); // 모드 변경 시 월 초기화\n                }\n              },\n              size: isMobile ? \"small\" : \"medium\",\n              children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                value: \"today\",\n                children: [/*#__PURE__*/_jsxDEV(TodayIcon, {\n                  sx: {\n                    mr: 0.5\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1464,\n                  columnNumber: 19\n                }, this), \"\\uC624\\uB298\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1463,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                value: \"week\",\n                children: [/*#__PURE__*/_jsxDEV(DateRangeIcon, {\n                  sx: {\n                    mr: 0.5\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1468,\n                  columnNumber: 19\n                }, this), \"\\uC8FC\\uAC04\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1467,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                value: \"month\",\n                children: [/*#__PURE__*/_jsxDEV(CalendarMonthIcon, {\n                  sx: {\n                    mr: 0.5\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1472,\n                  columnNumber: 19\n                }, this), \"\\uC6D4\\uAC04\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1471,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1451,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1379,\n            columnNumber: 13\n          }, this), viewAssignments.length > 0 ? viewMode === 'week' ?\n          /*#__PURE__*/\n          // 주간 보기: 요일별로 그룹화\n          _jsxDEV(Box, {\n            children: (() => {\n              const weeklyGroups = getWeeklyGroupedAssignments();\n              const dayNamesKorean = ['일', '월', '화', '수', '목', '금', '토'];\n              const dayNamesDisplay = ['월', '화', '수', '목', '금', '토', '일'];\n              const today = new Date().getDay();\n              const todayIndex = today === 0 ? 6 : today - 1; // 일요일을 마지막으로\n\n              // 요일 인덱스를 실제 요일 번호로 변환 (월=1, 화=2, ..., 일=0)\n              const dayIndexToWeekday = index => {\n                return index === 6 ? 0 : index + 1;\n              };\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: dayNamesDisplay.map((day, index) => {\n                  const koreanDay = dayNamesKorean[dayIndexToWeekday(index)];\n                  const assignments = (weeklyGroups === null || weeklyGroups === void 0 ? void 0 : weeklyGroups[koreanDay]) || [];\n                  const isToday = index === todayIndex;\n                  const weekdayNumber = dayIndexToWeekday(index);\n\n                  // 이번 주의 해당 요일 날짜 계산\n                  const thisWeekDate = new Date();\n                  const currentDay = thisWeekDate.getDay();\n                  const diff = weekdayNumber - currentDay;\n                  thisWeekDate.setDate(thisWeekDate.getDate() + diff + weekOffset * 7);\n                  thisWeekDate.setHours(0, 0, 0, 0);\n                  const todayDate = new Date();\n                  todayDate.setHours(0, 0, 0, 0);\n\n                  // 오늘보다 과거인지 확인\n                  const isPast = thisWeekDate < todayDate;\n\n                  // 오늘인지 확인 (weekOffset이 0일 때만)\n                  const isRealToday = weekOffset === 0 && isToday;\n\n                  // 완료된 이후의 과제는 필터링\n                  const activeAssignments = assignments.filter(assignment => !isAssignmentCompleted(assignment, thisWeekDate));\n                  return /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 6,\n                    md: true,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        height: '100%',\n                        border: isRealToday ? '2px solid' : '1px solid',\n                        borderColor: isRealToday ? 'primary.main' : isPast ? 'grey.400' : 'grey.300',\n                        borderRadius: 2,\n                        p: 2,\n                        bgcolor: isRealToday ? 'primary.50' : isPast ? 'grey.50' : 'background.paper',\n                        opacity: isPast ? 0.7 : 1\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          display: 'flex',\n                          alignItems: 'center',\n                          mb: 2,\n                          pb: 1,\n                          borderBottom: '1px solid',\n                          borderColor: 'divider'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"subtitle1\",\n                          sx: {\n                            fontWeight: isRealToday ? 700 : 600,\n                            color: isRealToday ? 'primary.main' : isPast ? 'text.disabled' : 'text.primary'\n                          },\n                          children: day\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1542,\n                          columnNumber: 35\n                        }, this), isRealToday && /*#__PURE__*/_jsxDEV(Chip, {\n                          label: \"\\uC624\\uB298\",\n                          size: \"small\",\n                          color: \"primary\",\n                          sx: {\n                            ml: 1\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1552,\n                          columnNumber: 37\n                        }, this), isPast && /*#__PURE__*/_jsxDEV(Chip, {\n                          label: \"\\uC9C0\\uB0A8\",\n                          size: \"small\",\n                          color: \"default\",\n                          sx: {\n                            ml: 1\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1560,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"caption\",\n                          color: \"text.secondary\",\n                          sx: {\n                            ml: 'auto'\n                          },\n                          children: [activeAssignments.length, \"\\uAC1C\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1567,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1534,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          maxHeight: 400,\n                          overflowY: 'auto',\n                          '&::-webkit-scrollbar': {\n                            width: '8px'\n                          },\n                          '&::-webkit-scrollbar-track': {\n                            background: '#f1f1f1',\n                            borderRadius: '4px'\n                          },\n                          '&::-webkit-scrollbar-thumb': {\n                            background: '#888',\n                            borderRadius: '4px'\n                          },\n                          '&::-webkit-scrollbar-thumb:hover': {\n                            background: '#555'\n                          }\n                        },\n                        children: activeAssignments.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            display: 'flex',\n                            flexDirection: 'column',\n                            gap: 0\n                          },\n                          children: activeAssignments.map((assignment, idx) => {\n                            var _assignment$weeklySch1, _assignment$weeklySch10;\n                            return /*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                display: 'flex',\n                                alignItems: 'center',\n                                gap: 1,\n                                borderBottom: idx < activeAssignments.length - 1 ? '1px solid' : 'none',\n                                borderColor: 'divider',\n                                py: 0.5,\n                                px: 1,\n                                '&:hover': {\n                                  bgcolor: isPast ? 'transparent' : 'action.hover'\n                                }\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(Box, {\n                                sx: {\n                                  width: 10,\n                                  height: 10,\n                                  borderRadius: '50%',\n                                  border: '1px solid rgba(0,0,0,0.1)',\n                                  bgcolor: (_student$learningHist3 => {\n                                    const todayDate = new Date();\n                                    todayDate.setHours(0, 0, 0, 0);\n\n                                    // 미래 날짜는 노란색 (수행전)\n                                    if (thisWeekDate > todayDate) {\n                                      return '#FFD700'; // 진한 노란색\n                                    }\n\n                                    // 오늘이거나 과거 날짜인 경우\n                                    const taskHistory = (student === null || student === void 0 ? void 0 : (_student$learningHist3 = student.learningHistory) === null || _student$learningHist3 === void 0 ? void 0 : _student$learningHist3.filter(h => {\n                                      if (h.taskId !== assignment.taskId) return false;\n                                      const historyDate = new Date(h.date);\n                                      historyDate.setHours(0, 0, 0, 0);\n                                      return historyDate.getTime() === thisWeekDate.getTime();\n                                    })) || [];\n\n                                    // 학습 기록이 있으면 파란색 (수행완료)\n                                    if (taskHistory.length > 0) {\n                                      return '#2196F3'; // 파란색\n                                    }\n\n                                    // 학습 기록이 없으면 빨간색 (미수행)\n                                    return '#F44336'; // 빨간색\n                                  })(),\n                                  flexShrink: 0\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1609,\n                                columnNumber: 45\n                              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                variant: \"caption\",\n                                sx: {\n                                  color: isPast ? 'text.disabled' : 'text.primary',\n                                  fontSize: '0.75rem',\n                                  overflow: 'hidden',\n                                  textOverflow: 'ellipsis',\n                                  whiteSpace: 'nowrap',\n                                  flex: 1\n                                },\n                                children: [assignment.taskTitle, \" / \", ((_assignment$weeklySch1 = assignment.weeklySchedule) === null || _assignment$weeklySch1 === void 0 ? void 0 : (_assignment$weeklySch10 = _assignment$weeklySch1[koreanDay]) === null || _assignment$weeklySch10 === void 0 ? void 0 : _assignment$weeklySch10.dailyAmount) || '0', \"\\uAC1C\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1647,\n                                columnNumber: 45\n                              }, this)]\n                            }, `${day}-${idx}`, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1593,\n                              columnNumber: 81\n                            }, this);\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1591,\n                          columnNumber: 37\n                        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            height: 100,\n                            color: 'text.secondary'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"caption\",\n                            children: \"\\uACFC\\uC81C \\uC5C6\\uC74C\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1671,\n                            columnNumber: 39\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1664,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1572,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1525,\n                      columnNumber: 31\n                    }, this)\n                  }, day, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1524,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1495,\n                columnNumber: 23\n              }, this);\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1481,\n            columnNumber: 17\n          }, this) : viewMode === 'month' ?\n          /*#__PURE__*/\n          // 월간 보기: 캘린더 형태\n          _jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              sx: {\n                mb: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                size: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: ['월', '화', '수', '목', '금', '토', '일'].map(day => /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      sx: {\n                        fontWeight: 600,\n                        width: '14.28%'\n                      },\n                      children: day\n                    }, day, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1693,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1691,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1690,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: getMonthCalendarData().map((week, weekIndex) => /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: week.map((date, dayIndex) => {\n                      if (!date) {\n                        return /*#__PURE__*/_jsxDEV(TableCell, {\n                          sx: {\n                            height: 120,\n                            bgcolor: 'grey.50'\n                          }\n                        }, dayIndex, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1704,\n                          columnNumber: 40\n                        }, this);\n                      }\n                      const dateString = date.toISOString().split('T')[0];\n                      const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n                      const dayName = dayNames[date.getDay()];\n\n                      // 현재 실제 오늘 날짜 (monthOffset과 관계없이)\n                      const actualToday = new Date();\n                      actualToday.setHours(0, 0, 0, 0);\n                      const isToday = date.getTime() === actualToday.getTime() && monthOffset === 0;\n                      const isPast = date < actualToday;\n\n                      // 해당 날짜에 활성화된 과제 찾기 (전체 학습 완료된 과제만 제외)\n                      const dayAssignments = (() => {\n                        // viewAssignments에서 시작 (이미 활성 과제만 필터링됨)\n                        const baseAssignments = viewAssignments.filter(assignment => {\n                          // 시작일이 현재 날짜보다 늦으면 제외\n                          const assignmentStartDate = new Date(assignment.startDate);\n                          if (assignmentStartDate > date) return false;\n\n                          // 종료일이 있고 현재 날짜보다 이전이면 제외\n                          if (assignment.endDate) {\n                            const assignmentEndDate = new Date(assignment.endDate);\n                            if (assignmentEndDate < date) return false;\n                          }\n\n                          // 전체 학습이 완료된 과제만 제외 (주간 일정과 동일한 로직)\n                          if (isAssignmentCompleted(assignment, date)) return false;\n                          return true;\n                        });\n\n                        // 오늘인 경우에도 요일별 스케줄 확인 (주간 일정과 동일하게)\n                        // 오늘이 아닌 날짜와 동일한 로직 적용\n                        return baseAssignments.filter(assignment => {\n                          var _assignment$weeklySch11, _assignment$weeklySch12;\n                          return (_assignment$weeklySch11 = assignment.weeklySchedule) === null || _assignment$weeklySch11 === void 0 ? void 0 : (_assignment$weeklySch12 = _assignment$weeklySch11[dayName]) === null || _assignment$weeklySch12 === void 0 ? void 0 : _assignment$weeklySch12.isActive;\n                        });\n                      })();\n                      return /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          height: 120,\n                          verticalAlign: 'top',\n                          p: 1,\n                          bgcolor: isToday ? 'primary.50' : isPast ? 'grey.50' : 'background.paper',\n                          border: isToday ? '2px solid' : '1px solid',\n                          borderColor: isToday ? 'primary.main' : 'divider',\n                          position: 'relative',\n                          cursor: dayAssignments.length > 0 ? 'pointer' : 'default',\n                          '&:hover': {\n                            bgcolor: dayAssignments.length > 0 ? isToday ? 'primary.100' : isPast ? 'grey.100' : 'grey.50' : undefined\n                          }\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            mb: 1\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"body2\",\n                            sx: {\n                              fontWeight: isToday ? 700 : 500,\n                              color: isToday ? 'primary.main' : isPast ? 'text.disabled' : 'text.primary'\n                            },\n                            children: date.getDate()\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1765,\n                            columnNumber: 37\n                          }, this), dayAssignments.length > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n                            label: dayAssignments.length,\n                            size: \"small\",\n                            color: isPast ? 'default' : 'primary',\n                            sx: {\n                              height: 20,\n                              fontSize: '0.75rem'\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1775,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1764,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            display: 'flex',\n                            flexDirection: 'column',\n                            gap: 0.5,\n                            overflow: 'hidden'\n                          },\n                          children: [dayAssignments.slice(0, 3).map((assignment, idx) => {\n                            var _assignment$weeklySch13, _assignment$weeklySch14;\n                            return /*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                display: 'flex',\n                                alignItems: 'center',\n                                gap: 0.5,\n                                py: 0.25,\n                                borderBottom: idx < Math.min(dayAssignments.length - 1, 2) ? '1px solid' : 'none',\n                                borderColor: 'divider'\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(Box, {\n                                sx: {\n                                  width: 6,\n                                  height: 6,\n                                  borderRadius: '50%',\n                                  border: '1px solid rgba(0,0,0,0.1)',\n                                  bgcolor: (_student$learningHist4 => {\n                                    const todayDate = new Date();\n                                    todayDate.setHours(0, 0, 0, 0);\n\n                                    // 미래 날짜는 노란색 (수행전)\n                                    if (date > todayDate) {\n                                      return '#FFD700'; // 진한 노란색\n                                    }\n\n                                    // 오늘이거나 과거 날짜인 경우\n                                    const taskHistory = (student === null || student === void 0 ? void 0 : (_student$learningHist4 = student.learningHistory) === null || _student$learningHist4 === void 0 ? void 0 : _student$learningHist4.filter(h => {\n                                      if (h.taskId !== assignment.taskId) return false;\n                                      const historyDate = new Date(h.date);\n                                      historyDate.setHours(0, 0, 0, 0);\n                                      return historyDate.getTime() === date.getTime();\n                                    })) || [];\n\n                                    // 학습 기록이 있으면 파란색 (수행완료)\n                                    if (taskHistory.length > 0) {\n                                      return '#2196F3'; // 파란색\n                                    }\n\n                                    // 학습 기록이 없으면 빨간색 (미수행)\n                                    return '#F44336'; // 빨간색\n                                  })(),\n                                  flexShrink: 0\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1803,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                variant: \"caption\",\n                                sx: {\n                                  fontSize: '0.65rem',\n                                  overflow: 'hidden',\n                                  textOverflow: 'ellipsis',\n                                  whiteSpace: 'nowrap',\n                                  color: isPast ? 'text.disabled' : 'text.primary',\n                                  flex: 1\n                                },\n                                children: [assignment.taskTitle, \" / \", ((_assignment$weeklySch13 = assignment.weeklySchedule) === null || _assignment$weeklySch13 === void 0 ? void 0 : (_assignment$weeklySch14 = _assignment$weeklySch13[dayName]) === null || _assignment$weeklySch14 === void 0 ? void 0 : _assignment$weeklySch14.dailyAmount) || '0', \"\\uAC1C\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1841,\n                                columnNumber: 41\n                              }, this)]\n                            }, idx, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1791,\n                              columnNumber: 39\n                            }, this);\n                          }), dayAssignments.length > 3 && /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"caption\",\n                            sx: {\n                              fontSize: '0.65rem',\n                              color: 'text.secondary',\n                              textAlign: 'center',\n                              display: 'block',\n                              mt: 0.5\n                            },\n                            children: [\"+\", dayAssignments.length - 3, \"\\uAC1C \\uB354\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1857,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1784,\n                          columnNumber: 35\n                        }, this)]\n                      }, dayIndex, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1746,\n                        columnNumber: 33\n                      }, this);\n                    })\n                  }, weekIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1701,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1699,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1689,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1688,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1687,\n            columnNumber: 17\n          }, this) :\n          // 오늘의 과제 보기: 3일간의 과제 표시\n          viewMode === 'today' ? /*#__PURE__*/_jsxDEV(Box, {\n            children: (() => {\n              // 더미 데이터인지 확인\n              const isDummy = viewAssignments.length === 1 && viewAssignments[0].taskId === 'dummy';\n              const upcomingDays = getUpcomingAssignments();\n\n              // 모든 영역 추출\n              const areas = new Set();\n              upcomingDays.forEach(dayData => {\n                dayData.assignments.forEach(assignment => {\n                  if (assignment.area) {\n                    areas.add(assignment.area);\n                  }\n                });\n              });\n\n              // 영역별로 필터링된 과제\n              const filteredUpcomingDays = upcomingDays.map(dayData => ({\n                ...dayData,\n                assignments: selectedArea === 'all' ? dayData.assignments : dayData.assignments.filter(assignment => assignment.area === selectedArea)\n              }));\n              return /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: 3\n                },\n                children: [areas.size > 0 && /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    borderBottom: 1,\n                    borderColor: 'divider',\n                    mb: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n                    value: selectedArea,\n                    exclusive: true,\n                    onChange: (event, newArea) => {\n                      if (newArea !== null) {\n                        setSelectedArea(newArea);\n                      }\n                    },\n                    \"aria-label\": \"area filter\",\n                    size: \"small\",\n                    children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                      value: \"all\",\n                      \"aria-label\": \"all areas\",\n                      children: \"\\uC804\\uCCB4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1923,\n                      columnNumber: 33\n                    }, this), Array.from(areas).map(area => /*#__PURE__*/_jsxDEV(ToggleButton, {\n                      value: area,\n                      \"aria-label\": area,\n                      children: getAreaText(area)\n                    }, area, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1927,\n                      columnNumber: 35\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1912,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1911,\n                  columnNumber: 29\n                }, this), filteredUpcomingDays.map((dayData, dayIndex) => {\n                  const dateLabel = dayIndex === 0 ? '오늘' : dayIndex === 1 ? '내일' : '모레';\n                  const dateString = `${dayData.date.getMonth() + 1}월 ${dayData.date.getDate()}일 (${dayData.dayName})`;\n                  return /*#__PURE__*/_jsxDEV(Box, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      sx: {\n                        mb: 2,\n                        fontWeight: 600,\n                        color: dayIndex === 0 ? 'primary.main' : 'text.primary'\n                      },\n                      children: [dateLabel, \" - \", dateString]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1942,\n                      columnNumber: 33\n                    }, this), dayData.assignments.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        flexDirection: 'column',\n                        gap: 1\n                      },\n                      children: dayData.assignments.map((assignment, idx) => {\n                        var _assignment$weeklySch15, _assignment$weeklySch16;\n                        return /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: 2,\n                            p: 2,\n                            border: '1px solid',\n                            borderColor: dayIndex === 0 ? 'primary.light' : 'grey.300',\n                            borderRadius: 1,\n                            bgcolor: 'background.paper',\n                            '&:hover': {\n                              bgcolor: 'grey.50'\n                            }\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              width: 12,\n                              height: 12,\n                              borderRadius: '50%',\n                              border: '1px solid rgba(0,0,0,0.1)',\n                              bgcolor: (_student$learningHist5 => {\n                                const todayDate = new Date();\n                                todayDate.setHours(0, 0, 0, 0);\n\n                                // 미래 날짜는 노란색 (수행전)\n                                if (dayData.date > todayDate) {\n                                  return '#FFD700';\n                                }\n\n                                // 오늘이거나 과거 날짜인 경우\n                                const taskHistory = (student === null || student === void 0 ? void 0 : (_student$learningHist5 = student.learningHistory) === null || _student$learningHist5 === void 0 ? void 0 : _student$learningHist5.filter(h => {\n                                  if (h.taskId !== assignment.taskId) return false;\n                                  const historyDate = new Date(h.date);\n                                  historyDate.setHours(0, 0, 0, 0);\n                                  return historyDate.getTime() === dayData.date.getTime();\n                                })) || [];\n\n                                // 학습 기록이 있으면 파란색 (수행완료)\n                                if (taskHistory.length > 0) {\n                                  return '#2196F3';\n                                }\n\n                                // 학습 기록이 없으면 빨간색 (미수행)\n                                return '#F44336';\n                              })(),\n                              flexShrink: 0\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1973,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              flex: 1\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"body1\",\n                              sx: {\n                                fontWeight: 600\n                              },\n                              children: [assignment.taskTitle, assignment.targetUnit && /*#__PURE__*/_jsxDEV(Typography, {\n                                component: \"span\",\n                                variant: \"body2\",\n                                color: \"text.secondary\",\n                                sx: {\n                                  ml: 1\n                                },\n                                children: [\"(\", assignment.targetUnit, \")\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2015,\n                                columnNumber: 47\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2012,\n                              columnNumber: 43\n                            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"caption\",\n                              color: \"text.secondary\",\n                              children: [\"\\uD559\\uC2B5\\uB7C9 \", ((_assignment$weeklySch15 = assignment.weeklySchedule) === null || _assignment$weeklySch15 === void 0 ? void 0 : (_assignment$weeklySch16 = _assignment$weeklySch15[['일', '월', '화', '수', '목', '금', '토'][dayData.date.getDay()]]) === null || _assignment$weeklySch16 === void 0 ? void 0 : _assignment$weeklySch16.dailyAmount) || '0', \"\\uAC1C \\xB7 \\uC9C4\\uB3C4 \", (() => {\n                                if (assignment.targetUnit) {\n                                  const unitOrder = [];\n                                  const unitSet = new Set();\n                                  if (assignment.vocabularyData) {\n                                    assignment.vocabularyData.forEach(word => {\n                                      if (!unitSet.has(word.unit)) {\n                                        unitSet.add(word.unit);\n                                        unitOrder.push(word.unit);\n                                      }\n                                    });\n                                  }\n                                  const startUnitIndex = assignment.startUnit ? unitOrder.indexOf(assignment.startUnit) : 0;\n                                  const targetUnitIndex = unitOrder.indexOf(assignment.targetUnit);\n                                  const unitNumber = targetUnitIndex - startUnitIndex + 1;\n                                  return `${unitNumber}/${unitOrder.length - startUnitIndex}`;\n                                }\n                                const unitProgress = getUnitProgressForDate(assignment, dayData.date);\n                                if (unitProgress) {\n                                  return `${unitProgress.current}/${unitProgress.total}`;\n                                }\n                                return `0/${assignment.progress.total}`;\n                              })(), \" \\xB7 \\uD559\\uC2B5 \", (_student$learningHist6 => {\n                                const targetDateString = dayData.date.toISOString().split('T')[0];\n                                console.log(`Checking learning history for ${assignment.taskTitle} (${assignment.taskId}) unit: ${assignment.targetUnit} on date ${targetDateString}`);\n                                const taskHistory = (student === null || student === void 0 ? void 0 : (_student$learningHist6 = student.learningHistory) === null || _student$learningHist6 === void 0 ? void 0 : _student$learningHist6.filter(h => {\n                                  if (h.taskId !== assignment.taskId) {\n                                    console.log(`Skipping history item with different taskId: ${h.taskId} !== ${assignment.taskId}`);\n                                    return false;\n                                  }\n\n                                  // targetUnit이 있으면 단원도 비교\n                                  if (assignment.targetUnit && h.targetUnit !== assignment.targetUnit) {\n                                    console.log(`Skipping history item with different unit: ${h.targetUnit} !== ${assignment.targetUnit}`);\n                                    return false;\n                                  }\n                                  const historyDate = new Date(h.date);\n                                  historyDate.setHours(0, 0, 0, 0);\n                                  const historyDateString = historyDate.toISOString().split('T')[0];\n                                  const matches = historyDateString === targetDateString;\n                                  console.log(`History item for ${h.taskTitle} (${h.taskId}) unit: ${h.targetUnit}: date=${historyDateString}, matches=${matches}`);\n                                  return matches;\n                                })) || [];\n                                console.log(`Found ${taskHistory.length} learning records for ${assignment.taskTitle} unit: ${assignment.targetUnit} on ${targetDateString}`);\n                                return `${taskHistory.length}회`;\n                              })()]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2020,\n                              columnNumber: 43\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2011,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              display: 'flex',\n                              gap: 1\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Button, {\n                              variant: \"contained\",\n                              size: \"small\",\n                              onClick: () => handleStartVocabularyLearning(assignment, dayData.date),\n                              children: \"\\uD559\\uC2B5\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2085,\n                              columnNumber: 43\n                            }, this), /*#__PURE__*/_jsxDEV(Button, {\n                              variant: \"outlined\",\n                              size: \"small\",\n                              onClick: () => handleStartEvaluation(assignment, dayData.date),\n                              children: \"\\uD3C9\\uAC00\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2092,\n                              columnNumber: 43\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2084,\n                            columnNumber: 41\n                          }, this)]\n                        }, idx, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1956,\n                          columnNumber: 39\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1954,\n                      columnNumber: 35\n                    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n                      sx: {\n                        borderRadius: isMobile ? 2 : 1,\n                        textAlign: 'center',\n                        bgcolor: 'grey.50'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(CardContent, {\n                        sx: {\n                          py: 3\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body1\",\n                          color: \"text.secondary\",\n                          children: [dateLabel, \" \\uACFC\\uC81C\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2106,\n                          columnNumber: 39\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2105,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2104,\n                      columnNumber: 35\n                    }, this)]\n                  }, dayIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1941,\n                    columnNumber: 31\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1908,\n                columnNumber: 25\n              }, this);\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1883,\n            columnNumber: 19\n          }, this) :\n          /*#__PURE__*/\n          // 기존 월간 보기\n          _jsxDEV(Grid, {\n            container: true,\n            spacing: isMobile ? 2 : 3,\n            children: viewAssignments.map((assignment, index) => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  borderRadius: isMobile ? 2 : 1,\n                  border: '2px solid',\n                  borderColor: 'primary.main',\n                  backgroundColor: 'primary.50',\n                  '&:hover': {\n                    boxShadow: 3,\n                    transform: 'translateY(-2px)',\n                    transition: 'all 0.2s ease-in-out'\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  sx: {\n                    p: isMobile ? 3 : 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      alignItems: 'flex-start',\n                      mb: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        flex: 1\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        sx: {\n                          mb: 1,\n                          fontWeight: 600\n                        },\n                        children: assignment.taskTitle\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2140,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          display: 'flex',\n                          alignItems: 'center',\n                          mb: 1\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(AssignmentIcon, {\n                          sx: {\n                            fontSize: 16,\n                            mr: 0.5,\n                            color: 'primary.main'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2144,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"primary\",\n                          sx: {\n                            fontWeight: 500\n                          },\n                          children: [getAreaText(assignment.area), \" \\uC601\\uC5ED\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2145,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2143,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2139,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      label: getChipLabel(viewMode),\n                      color: \"primary\",\n                      size: \"small\",\n                      sx: {\n                        fontWeight: 600\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2150,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2138,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mb: 3\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        mb: 1\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          fontWeight: 500\n                        },\n                        children: \"\\uD559\\uC2B5 \\uC9C4\\uB3C4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2161,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        color: \"primary\",\n                        sx: {\n                          fontWeight: 600\n                        },\n                        children: (() => {\n                          const today = new Date();\n                          const unitProgress = getUnitProgressForDate(assignment, today);\n                          if (unitProgress) {\n                            return `${unitProgress.current}/${unitProgress.total}`;\n                          }\n                          // 단원 목록 추출\n                          const unitOrder = [];\n                          const unitSet = new Set();\n                          if (assignment.vocabularyData) {\n                            assignment.vocabularyData.forEach(word => {\n                              if (!unitSet.has(word.unit)) {\n                                unitSet.add(word.unit);\n                                unitOrder.push(word.unit);\n                              }\n                            });\n                          }\n                          return `0/${unitOrder.length || assignment.progress.total}`;\n                        })()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2164,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2160,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                      variant: \"determinate\",\n                      value: (() => {\n                        const today = new Date();\n                        const unitProgress = getUnitProgressForDate(assignment, today);\n                        if (unitProgress) {\n                          return unitProgress.current / unitProgress.total * 100;\n                        }\n                        return 0;\n                      })(),\n                      sx: {\n                        height: 8,\n                        borderRadius: 4,\n                        backgroundColor: 'grey.200',\n                        '& .MuiLinearProgress-bar': {\n                          borderRadius: 4\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2188,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"text.secondary\",\n                      sx: {\n                        mt: 0.5,\n                        display: 'block'\n                      },\n                      children: (_assignment$weeklySch17 => {\n                        const today = new Date();\n                        const unit = getUnitForDate(assignment, today);\n                        if (unit) {\n                          return `오늘 학습 단원: ${unit}`;\n                        }\n                        const dayName = ['일', '월', '화', '수', '목', '금', '토'][today.getDay()];\n                        const todaySchedule = (_assignment$weeklySch17 = assignment.weeklySchedule) === null || _assignment$weeklySch17 === void 0 ? void 0 : _assignment$weeklySch17[dayName];\n                        if (!todaySchedule || !todaySchedule.isActive) {\n                          return '오늘은 학습 예정일이 아닙니다';\n                        }\n                        return '오늘 학습 예정';\n                      })()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2207,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2159,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mb: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"text.secondary\",\n                      sx: {\n                        display: 'block',\n                        mb: 0.5\n                      },\n                      children: \"\\uD559\\uC2B5 \\uC774\\uB825:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2226,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        gap: 0.5,\n                        flexWrap: 'wrap'\n                      },\n                      children: (_student$learningHist7 => {\n                        // 오늘 날짜의 학습 이력만 필터링\n                        const today = new Date();\n                        today.setHours(0, 0, 0, 0);\n                        const todayString = today.toISOString().split('T')[0];\n                        console.log('Checking learning history for assignment:', assignment.taskTitle, 'taskId:', assignment.taskId);\n                        console.log('Today string:', todayString);\n                        const taskHistory = (student === null || student === void 0 ? void 0 : (_student$learningHist7 = student.learningHistory) === null || _student$learningHist7 === void 0 ? void 0 : _student$learningHist7.filter(h => {\n                          if (h.taskId !== assignment.taskId) return false;\n\n                          // 학습 날짜가 오늘인지 확인\n                          const historyDate = new Date(h.date);\n                          historyDate.setHours(0, 0, 0, 0);\n                          const historyDateString = historyDate.toISOString().split('T')[0];\n                          const matches = historyDateString === todayString;\n                          console.log('History item:', h.taskId, 'date:', historyDateString, 'matches today:', matches);\n                          return matches;\n                        })) || [];\n                        console.log('Task history for', assignment.taskTitle, ':', taskHistory.length, 'items');\n                        if (taskHistory.length === 0) {\n                          return /*#__PURE__*/_jsxDEV(Chip, {\n                            label: \"\\uC624\\uB298 \\uBBF8\\uD559\\uC2B5\",\n                            size: \"small\",\n                            variant: \"outlined\",\n                            color: \"default\",\n                            sx: {\n                              height: 20,\n                              fontSize: '0.75rem'\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2259,\n                            columnNumber: 39\n                          }, this);\n                        }\n                        return /*#__PURE__*/_jsxDEV(Chip, {\n                          label: `오늘 ${taskHistory.length}회 학습 완료`,\n                          size: \"small\",\n                          color: \"success\",\n                          variant: \"outlined\",\n                          sx: {\n                            height: 20,\n                            fontSize: '0.75rem'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2270,\n                          columnNumber: 37\n                        }, this);\n                      })()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2229,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2225,\n                    columnNumber: 29\n                  }, this), assignment.area === 'vocabulary' && /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mb: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"text.secondary\",\n                      sx: {\n                        display: 'block',\n                        mb: 0.5\n                      },\n                      children: \"\\uD3C9\\uAC00 \\uC9C4\\uD589:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2285,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        gap: 0.5,\n                        alignItems: 'center'\n                      },\n                      children: (_student$evaluationHi2 => {\n                        // 해당 과제의 평가 이력 확인\n                        const evaluationHistory = (student === null || student === void 0 ? void 0 : (_student$evaluationHi2 = student.evaluationHistory) === null || _student$evaluationHi2 === void 0 ? void 0 : _student$evaluationHi2.filter(e => e.taskId === assignment.taskId)) || [];\n                        if (evaluationHistory.length === 0) {\n                          return /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"caption\",\n                            color: \"text.secondary\",\n                            children: \"\\uBBF8\\uC9C4\\uD589\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2297,\n                            columnNumber: 41\n                          }, this);\n                        }\n\n                        // 평가 레벨 순으로 정렬\n                        const sortedEvaluations = evaluationHistory.sort((a, b) => a.evaluationLevel - b.evaluationLevel);\n                        return /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: sortedEvaluations.map(evaluation => {\n                            const isPerfect = evaluation.results.correctWords === evaluation.results.totalWords;\n                            return /*#__PURE__*/_jsxDEV(Tooltip, {\n                              title: `${evaluation.evaluationLevel}차 평가: ${evaluation.results.correctWords}/${evaluation.results.totalWords}개 정답`,\n                              arrow: true,\n                              children: /*#__PURE__*/_jsxDEV(Box, {\n                                sx: {\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  gap: 0.5\n                                },\n                                children: /*#__PURE__*/_jsxDEV(Box, {\n                                  sx: {\n                                    width: 20,\n                                    height: 20,\n                                    borderRadius: '50%',\n                                    bgcolor: isPerfect ? 'primary.main' : 'error.main',\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                    cursor: 'pointer'\n                                  },\n                                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                                    variant: \"caption\",\n                                    sx: {\n                                      color: 'white',\n                                      fontSize: '0.65rem',\n                                      fontWeight: 'bold'\n                                    },\n                                    children: evaluation.evaluationLevel\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2335,\n                                    columnNumber: 51\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2323,\n                                  columnNumber: 49\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2316,\n                                columnNumber: 47\n                              }, this)\n                            }, evaluation.evaluationLevel, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2311,\n                              columnNumber: 45\n                            }, this);\n                          })\n                        }, void 0, false);\n                      })()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2288,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2284,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      gap: 1,\n                      mt: 2\n                    },\n                    children: [(_assignment$weeklySch18 => {\n                      const today = new Date().getDay();\n                      const dayName = ['일', '월', '화', '수', '목', '금', '토'][today];\n                      const todaySchedule = (_assignment$weeklySch18 = assignment.weeklySchedule) === null || _assignment$weeklySch18 === void 0 ? void 0 : _assignment$weeklySch18[dayName];\n                      const hasTodayTask = todaySchedule && todaySchedule.isActive;\n                      if (hasTodayTask) {\n                        return /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: [/*#__PURE__*/_jsxDEV(Button, {\n                            variant: \"contained\",\n                            startIcon: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2370,\n                              columnNumber: 52\n                            }, this),\n                            size: isMobile ? \"large\" : \"medium\",\n                            sx: {\n                              flex: 1\n                            },\n                            onClick: () => handleStartVocabularyLearning(assignment),\n                            children: \"\\uD559\\uC2B5 \\uC2DC\\uC791\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2368,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(Button, {\n                            variant: \"outlined\",\n                            size: isMobile ? \"large\" : \"medium\",\n                            sx: {\n                              flex: 1\n                            },\n                            onClick: () => handleStartEvaluation(assignment),\n                            children: \"\\uD3C9\\uAC00\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2377,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true);\n                      }\n                      return /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"text.secondary\",\n                        sx: {\n                          flex: 1,\n                          textAlign: 'center',\n                          py: 1\n                        },\n                        children: \"\\uC624\\uB298\\uC740 \\uD559\\uC2B5 \\uC608\\uC815\\uC77C\\uC774 \\uC544\\uB2D9\\uB2C8\\uB2E4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2390,\n                        columnNumber: 35\n                      }, this);\n                    })(), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"text\",\n                      size: isMobile ? \"large\" : \"medium\",\n                      onClick: () => handleOpenDetailDialog(assignment),\n                      children: \"\\uC0C1\\uC138\\uBCF4\\uAE30\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2395,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2358,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2137,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2124,\n                columnNumber: 25\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2123,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2121,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              borderRadius: isMobile ? 2 : 1,\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                py: isMobile ? 6 : 4\n              },\n              children: [/*#__PURE__*/_jsxDEV(CalendarIcon, {\n                sx: {\n                  fontSize: isMobile ? 80 : 64,\n                  color: 'text.secondary',\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2413,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: isMobile ? \"h6\" : \"h6\",\n                color: \"text.secondary\",\n                sx: {\n                  mb: 1,\n                  fontWeight: 600\n                },\n                children: viewMode === 'today' ? '오늘의 과제가 없습니다' : viewMode === 'week' ? '이번 주 과제가 없습니다' : '이번 달 과제가 없습니다'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2418,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                sx: {\n                  mb: 3\n                },\n                children: viewMode === 'today' ? '오늘은 학습이 예정되어 있지 않습니다.' : viewMode === 'week' ? '이번 주에 배정된 과제가 없습니다.' : '이번 달에 배정된 과제가 없습니다.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2421,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                size: isMobile ? \"large\" : \"medium\",\n                onClick: handleRestartLearning,\n                startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2435,\n                  columnNumber: 32\n                }, this),\n                sx: {\n                  borderRadius: 2,\n                  px: 3,\n                  py: 1.5,\n                  fontWeight: 600,\n                  textTransform: 'none',\n                  boxShadow: 2,\n                  '&:hover': {\n                    boxShadow: 4,\n                    transform: 'translateY(-1px)',\n                    transition: 'all 0.2s ease-in-out'\n                  }\n                },\n                children: \"\\uD559\\uC2B5 \\uC2DC\\uC791\\uD558\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2430,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2412,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2411,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1378,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 1,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(ViewModuleIcon, {\n              sx: {\n                mr: 1,\n                color: 'primary.main'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2462,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: isMobile ? \"h6\" : \"h5\",\n              sx: {\n                fontWeight: 600\n              },\n              children: [\"\\uACFC\\uC81C \\uD604\\uD669 (\", activeAssignments.length, \"\\uAC1C)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2463,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2461,\n            columnNumber: 13\n          }, this), activeAssignments.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: isMobile ? 2 : 3,\n            children: activeAssignments.map((assignment, index) => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  cursor: 'pointer',\n                  borderRadius: isMobile ? 2 : 1,\n                  '&:hover': {\n                    boxShadow: isMobile ? 2 : 3,\n                    transform: isMobile ? 'none' : 'translateY(-2px)',\n                    transition: 'all 0.2s ease-in-out'\n                  },\n                  minHeight: isMobile ? 200 : 'auto'\n                },\n                onClick: () => handleOpenDetailDialog(assignment),\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  sx: {\n                    p: isMobile ? 3 : 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      alignItems: 'flex-start',\n                      mb: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: isMobile ? \"h6\" : \"h6\",\n                      sx: {\n                        flex: 1,\n                        fontSize: isMobile ? '1rem' : '1.25rem',\n                        lineHeight: 1.3\n                      },\n                      children: assignment.taskTitle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2487,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      label: getStatusText(assignment.status),\n                      color: getStatusColor(assignment.status),\n                      size: \"small\",\n                      sx: {\n                        ml: 1\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2497,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2486,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mb: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        mb: 1\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(AssignmentIcon, {\n                        sx: {\n                          fontSize: 16,\n                          mr: 0.5,\n                          color: 'primary.main'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2507,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"primary\",\n                        sx: {\n                          fontWeight: 500\n                        },\n                        children: [getAreaText(assignment.area), \" \\uC601\\uC5ED\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2508,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2506,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        mb: 2\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                          mb: 1\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          sx: {\n                            fontWeight: 500\n                          },\n                          children: \"\\uC9C4\\uD589\\uB960\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2516,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"primary\",\n                          sx: {\n                            fontWeight: 600\n                          },\n                          children: [assignment.progress.completed, \" / \", assignment.progress.total]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2519,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2515,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                        variant: \"determinate\",\n                        value: assignment.progress.completed / assignment.progress.total * 100,\n                        sx: {\n                          height: isMobile ? 8 : 6,\n                          borderRadius: 4,\n                          backgroundColor: 'grey.200',\n                          '& .MuiLinearProgress-bar': {\n                            borderRadius: 4\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2523,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2514,\n                      columnNumber: 27\n                    }, this), assignment.area === 'vocabulary' && assignment.startUnit && /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        mb: 1\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(InfoIcon, {\n                        sx: {\n                          fontSize: 16,\n                          mr: 0.5,\n                          color: 'text.secondary'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2540,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"text.secondary\",\n                        children: [\"\\uC2DC\\uC791 \\uB2E8\\uC6D0: \", assignment.startUnit]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2541,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2539,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        mb: 2\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        color: \"text.secondary\",\n                        sx: {\n                          display: 'block',\n                          mb: 0.5\n                        },\n                        children: \"\\uD559\\uC2B5 \\uC774\\uB825:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2549,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          display: 'flex',\n                          gap: 0.5,\n                          flexWrap: 'wrap'\n                        },\n                        children: (_student$learningHist8 => {\n                          // 오늘 날짜의 학습 이력만 필터링\n                          const today = new Date();\n                          today.setHours(0, 0, 0, 0);\n                          const todayString = today.toISOString().split('T')[0];\n                          console.log('Checking learning history for assignment:', assignment.taskTitle, 'taskId:', assignment.taskId);\n                          console.log('Today string:', todayString);\n                          const taskHistory = (student === null || student === void 0 ? void 0 : (_student$learningHist8 = student.learningHistory) === null || _student$learningHist8 === void 0 ? void 0 : _student$learningHist8.filter(h => {\n                            if (h.taskId !== assignment.taskId) return false;\n\n                            // 학습 날짜가 오늘인지 확인\n                            const historyDate = new Date(h.date);\n                            historyDate.setHours(0, 0, 0, 0);\n                            const historyDateString = historyDate.toISOString().split('T')[0];\n                            const matches = historyDateString === todayString;\n                            console.log('History item:', h.taskId, 'date:', historyDateString, 'matches today:', matches);\n                            return matches;\n                          })) || [];\n                          console.log('Task history for', assignment.taskTitle, ':', taskHistory.length, 'items');\n                          if (taskHistory.length === 0) {\n                            return /*#__PURE__*/_jsxDEV(Chip, {\n                              label: \"\\uC624\\uB298 \\uBBF8\\uD559\\uC2B5\",\n                              size: \"small\",\n                              variant: \"outlined\",\n                              color: \"default\",\n                              sx: {\n                                height: 20,\n                                fontSize: '0.75rem'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2582,\n                              columnNumber: 37\n                            }, this);\n                          }\n                          return /*#__PURE__*/_jsxDEV(Chip, {\n                            label: `오늘 ${taskHistory.length}회 학습 완료`,\n                            size: \"small\",\n                            color: \"success\",\n                            variant: \"outlined\",\n                            sx: {\n                              height: 20,\n                              fontSize: '0.75rem'\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2593,\n                            columnNumber: 35\n                          }, this);\n                        })()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2552,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2548,\n                      columnNumber: 27\n                    }, this), assignment.area === 'vocabulary' && /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        mb: 2\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        color: \"text.secondary\",\n                        sx: {\n                          display: 'block',\n                          mb: 0.5\n                        },\n                        children: \"\\uD3C9\\uAC00 \\uC9C4\\uD589:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2608,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          display: 'flex',\n                          gap: 0.5,\n                          alignItems: 'center'\n                        },\n                        children: (_student$evaluationHi3 => {\n                          // 해당 과제의 평가 이력 확인\n                          const evaluationHistory = (student === null || student === void 0 ? void 0 : (_student$evaluationHi3 = student.evaluationHistory) === null || _student$evaluationHi3 === void 0 ? void 0 : _student$evaluationHi3.filter(e => e.taskId === assignment.taskId)) || [];\n                          if (evaluationHistory.length === 0) {\n                            return /*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"caption\",\n                              color: \"text.secondary\",\n                              children: \"\\uBBF8\\uC9C4\\uD589\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2620,\n                              columnNumber: 39\n                            }, this);\n                          }\n\n                          // 평가 레벨 순으로 정렬\n                          const sortedEvaluations = evaluationHistory.sort((a, b) => a.evaluationLevel - b.evaluationLevel);\n                          return /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: sortedEvaluations.map(evaluation => {\n                              const isPerfect = evaluation.results.correctWords === evaluation.results.totalWords;\n                              return /*#__PURE__*/_jsxDEV(Tooltip, {\n                                title: `${evaluation.evaluationLevel}차 평가: ${evaluation.results.correctWords}/${evaluation.results.totalWords}개 정답`,\n                                arrow: true,\n                                children: /*#__PURE__*/_jsxDEV(Box, {\n                                  sx: {\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    gap: 0.5\n                                  },\n                                  children: /*#__PURE__*/_jsxDEV(Box, {\n                                    sx: {\n                                      width: 20,\n                                      height: 20,\n                                      borderRadius: '50%',\n                                      bgcolor: isPerfect ? 'primary.main' : 'error.main',\n                                      display: 'flex',\n                                      alignItems: 'center',\n                                      justifyContent: 'center',\n                                      cursor: 'pointer'\n                                    },\n                                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                                      variant: \"caption\",\n                                      sx: {\n                                        color: 'white',\n                                        fontSize: '0.65rem',\n                                        fontWeight: 'bold'\n                                      },\n                                      children: evaluation.evaluationLevel\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 2658,\n                                      columnNumber: 49\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2646,\n                                    columnNumber: 47\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2639,\n                                  columnNumber: 45\n                                }, this)\n                              }, evaluation.evaluationLevel, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2634,\n                                columnNumber: 43\n                              }, this);\n                            })\n                          }, void 0, false);\n                        })()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2611,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2607,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        mt: 2\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          display: 'flex',\n                          alignItems: 'center',\n                          mb: 1\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(CalendarIcon, {\n                          sx: {\n                            fontSize: 16,\n                            mr: 0.5,\n                            color: 'text.secondary'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2683,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"text.secondary\",\n                          children: \"\\uD559\\uC2B5 \\uC694\\uC77C:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2684,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2682,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          display: 'flex',\n                          gap: 0.5,\n                          flexWrap: 'wrap'\n                        },\n                        children: Object.entries(assignment.weeklySchedule).filter(([_, schedule]) => schedule.isActive).map(([day, schedule]) => /*#__PURE__*/_jsxDEV(Chip, {\n                          label: `${day} ${schedule.dailyAmount}`,\n                          size: \"small\",\n                          variant: \"outlined\",\n                          sx: {\n                            fontSize: '0.75rem'\n                          }\n                        }, day, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2692,\n                          columnNumber: 35\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2688,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2681,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2505,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      alignItems: 'center',\n                      mt: 'auto'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"text.secondary\",\n                      children: [\"\\uC2DC\\uC791: \", assignment.startDate]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2710,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      size: \"small\",\n                      variant: \"outlined\",\n                      onClick: e => {\n                        e.stopPropagation();\n                        handleOpenDetailDialog(assignment);\n                      },\n                      sx: {\n                        minWidth: 'auto',\n                        px: isMobile ? 2 : 1.5,\n                        py: isMobile ? 1 : 0.5\n                      },\n                      children: \"\\uC0C1\\uC138\\uBCF4\\uAE30\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2713,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2704,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2485,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2472,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2471,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2469,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              borderRadius: isMobile ? 2 : 1\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                textAlign: 'center',\n                py: isMobile ? 6 : 4,\n                px: isMobile ? 3 : 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(AssignmentIcon, {\n                sx: {\n                  fontSize: isMobile ? 80 : 64,\n                  color: 'text.secondary',\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2741,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: isMobile ? \"h6\" : \"h6\",\n                color: \"text.secondary\",\n                sx: {\n                  mb: 1\n                },\n                children: \"\\uD65C\\uC131 \\uACFC\\uC81C\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2746,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: \"\\uAD00\\uB9AC\\uC790\\uC5D0\\uAC8C \\uACFC\\uC81C \\uBC30\\uC815\\uC744 \\uC694\\uCCAD\\uD558\\uC138\\uC694.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2749,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2736,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2735,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2460,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 2,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(SettingsIcon, {\n              sx: {\n                mr: 1,\n                color: 'primary.main'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2762,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: isMobile ? \"h6\" : \"h5\",\n              sx: {\n                fontWeight: 600\n              },\n              children: \"\\uD559\\uC2B5 \\uC124\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2763,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2761,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  borderRadius: isMobile ? 2 : 1\n                },\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  sx: {\n                    p: isMobile ? 3 : 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      mb: 3\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(TimerIcon, {\n                      sx: {\n                        mr: 1,\n                        color: 'primary.main'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2773,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      sx: {\n                        fontWeight: 600\n                      },\n                      children: \"\\uB2E8\\uC5B4 \\uD559\\uC2B5 \\uD0C0\\uC774\\uBA38 \\uC124\\uC815\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2774,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2772,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    sx: {\n                      mb: 3\n                    },\n                    children: \"\\uB2E8\\uC5B4\\uC758 \\uB73B\\uC744 \\uD655\\uC778\\uD55C \\uD6C4 \\uB2E4\\uC74C \\uB2E8\\uC5B4\\uB85C \\uB118\\uC5B4\\uAC00\\uB294 \\uC2DC\\uAC04\\uC744 \\uC124\\uC815\\uD569\\uB2C8\\uB2E4.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2779,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      px: 2,\n                      mb: 3\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Slider, {\n                      value: timerDuration,\n                      onChange: (e, value) => setTimerDuration(value),\n                      min: 0.5,\n                      max: 5,\n                      step: 0.5,\n                      marks: [{\n                        value: 0.5,\n                        label: '0.5초'\n                      }, {\n                        value: 1.5,\n                        label: '1.5초'\n                      }, {\n                        value: 3,\n                        label: '3초'\n                      }, {\n                        value: 5,\n                        label: '5초'\n                      }],\n                      valueLabelDisplay: \"on\",\n                      valueLabelFormat: value => `${value}초`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2784,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2783,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: [\"\\uD604\\uC7AC \\uC124\\uC815: \", timerDuration, \"\\uCD08\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2802,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      onClick: () => {\n                        localStorage.setItem(`timer_duration_${studentId}`, timerDuration.toString());\n                        alert('설정이 저장되었습니다.');\n                      },\n                      children: \"\\uC800\\uC7A5\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2805,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2801,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2771,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2770,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2769,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  borderRadius: isMobile ? 2 : 1\n                },\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  sx: {\n                    p: isMobile ? 3 : 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      mb: 3\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(RefreshIcon, {\n                      sx: {\n                        mr: 1,\n                        color: 'warning.main'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2824,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      sx: {\n                        fontWeight: 600\n                      },\n                      children: \"\\uD559\\uC2B5 \\uC774\\uB825 \\uCD08\\uAE30\\uD654 (\\uD14C\\uC2A4\\uD2B8\\uC6A9)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2825,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2823,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    sx: {\n                      mb: 3\n                    },\n                    children: [\"\\uD14C\\uC2A4\\uD2B8\\uB97C \\uC704\\uD574 \\uC774 \\uD559\\uC0DD\\uC758 \\uBAA8\\uB4E0 \\uD559\\uC2B5 \\uC774\\uB825\\uC744 \\uCD08\\uAE30\\uD654\\uD569\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2832,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                      style: {\n                        color: '#d32f2f'\n                      },\n                      children: \"\\uC8FC\\uC758: \\uC774 \\uC791\\uC5C5\\uC740 \\uB418\\uB3CC\\uB9B4 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2833,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2830,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      gap: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outlined\",\n                      color: \"warning\",\n                      onClick: () => {\n                        if (window.confirm('정말로 이 학생의 모든 학습 이력을 초기화하시겠습니까?\\n\\n이 작업은 되돌릴 수 없습니다!')) {\n                          if (!student) return;\n                          const updatedStudent = {\n                            ...student,\n                            learningHistory: [],\n                            evaluationHistory: []\n                          };\n\n                          // 과제 진행률도 초기화\n                          updatedStudent.taskAssignments = updatedStudent.taskAssignments.map(assignment => ({\n                            ...assignment,\n                            progress: {\n                              ...assignment.progress,\n                              completed: 0\n                            }\n                          }));\n                          const students = loadStudents();\n                          const studentIndex = students.findIndex(s => s.id === student.id);\n                          if (studentIndex !== -1) {\n                            students[studentIndex] = updatedStudent;\n                            saveStudents(students);\n                            setStudent(updatedStudent);\n                            alert('학습 이력이 초기화되었습니다.');\n                          }\n                        }\n                      },\n                      children: \"\\uD559\\uC2B5 \\uC774\\uB825 \\uCD08\\uAE30\\uD654\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2837,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outlined\",\n                      color: \"info\",\n                      onClick: () => {\n                        var _student$learningHist9, _student$evaluationHi4;\n                        if (!student) return;\n                        console.log('Current Learning History:', student.learningHistory);\n                        console.log('Current Evaluation History:', student.evaluationHistory);\n                        alert(`학습 이력: ${((_student$learningHist9 = student.learningHistory) === null || _student$learningHist9 === void 0 ? void 0 : _student$learningHist9.length) || 0}개\\n평가 이력: ${((_student$evaluationHi4 = student.evaluationHistory) === null || _student$evaluationHi4 === void 0 ? void 0 : _student$evaluationHi4.length) || 0}개\\n\\n자세한 내용은 개발자 도구 콘솔을 확인하세요.`);\n                      },\n                      children: \"\\uC774\\uB825 \\uD655\\uC778\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2873,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2836,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2822,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2821,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2820,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2768,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2760,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2759,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openDetailDialog,\n        onClose: handleCloseDetailDialog,\n        maxWidth: \"md\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: [selectedAssignment === null || selectedAssignment === void 0 ? void 0 : selectedAssignment.taskTitle, \" - \\uC0C1\\uC138 \\uC815\\uBCF4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2895,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: selectedAssignment && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              pt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    mb: 2\n                  },\n                  children: \"\\uAE30\\uBCF8 \\uC815\\uBCF4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2903,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mb: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [\"\\uC601\\uC5ED: \", getAreaText(selectedAssignment.area)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2907,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [\"\\uC0C1\\uD0DC: \", getStatusText(selectedAssignment.status)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2910,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [\"\\uC2DC\\uC791\\uC77C: \", selectedAssignment.startDate]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2913,\n                    columnNumber: 23\n                  }, this), selectedAssignment.endDate && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [\"\\uC885\\uB8CC\\uC77C: \", selectedAssignment.endDate]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2917,\n                    columnNumber: 25\n                  }, this), selectedAssignment.area === 'vocabulary' && selectedAssignment.startUnit && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [\"\\uC2DC\\uC791 \\uB2E8\\uC6D0: \", selectedAssignment.startUnit]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2922,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2906,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    mb: 2\n                  },\n                  children: \"\\uC9C4\\uD589\\uB960\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2928,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mb: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      mb: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: [selectedAssignment.progress.completed, \" / \", selectedAssignment.progress.total, \" \\uC644\\uB8CC\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2933,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: [Math.round(selectedAssignment.progress.completed / selectedAssignment.progress.total * 100), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2936,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2932,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                    variant: \"determinate\",\n                    value: selectedAssignment.progress.completed / selectedAssignment.progress.total * 100,\n                    sx: {\n                      height: 12,\n                      borderRadius: 6\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2940,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2931,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2902,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    mb: 2\n                  },\n                  children: \"\\uC8FC\\uAC04 \\uC2A4\\uCF00\\uC904\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2949,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n                  component: Paper,\n                  variant: \"outlined\",\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    size: \"small\",\n                    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                      children: /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          children: \"\\uC694\\uC77C\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2956,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          children: \"\\uD559\\uC2B5\\uB7C9\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2957,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          children: \"\\uC0C1\\uD0DC\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2958,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2955,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2954,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                      children: ['월', '화', '수', '목', '금', '토', '일'].map(day => {\n                        const schedule = selectedAssignment.weeklySchedule[day];\n                        return /*#__PURE__*/_jsxDEV(TableRow, {\n                          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                            children: day\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2966,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            children: schedule !== null && schedule !== void 0 && schedule.isActive ? schedule.dailyAmount : '-'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2967,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            children: schedule !== null && schedule !== void 0 && schedule.isActive ? /*#__PURE__*/_jsxDEV(Chip, {\n                              label: \"\\uD65C\\uC131\",\n                              color: \"success\",\n                              size: \"small\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2972,\n                              columnNumber: 37\n                            }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                              label: \"\\uBE44\\uD65C\\uC131\",\n                              color: \"default\",\n                              size: \"small\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2974,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2970,\n                            columnNumber: 33\n                          }, this)]\n                        }, day, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2965,\n                          columnNumber: 31\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2961,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2953,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2952,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2948,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2901,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2900,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2898,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseDetailDialog,\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2989,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2988,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2894,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: \"bottom\",\n        open: openMobileDetail,\n        onClose: handleCloseDetailDialog,\n        PaperProps: {\n          sx: {\n            borderTopLeftRadius: 16,\n            borderTopRightRadius: 16,\n            maxHeight: '80vh',\n            minHeight: '50vh'\n          }\n        },\n        children: selectedAssignment && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                fontWeight: 600\n              },\n              children: selectedAssignment.taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3010,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleCloseDetailDialog,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3014,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3013,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3009,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              p: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                px: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(AssignmentIcon, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3021,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3020,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"\\uC601\\uC5ED\",\n                secondary: getAreaText(selectedAssignment.area)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3023,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3019,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                px: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(TrendingUpIcon, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3031,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3030,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"\\uC0C1\\uD0DC\",\n                secondary: getStatusText(selectedAssignment.status)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3033,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3029,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                px: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(CalendarIcon, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3041,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3040,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"\\uC2DC\\uC791\\uC77C\",\n                secondary: selectedAssignment.startDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3043,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3039,\n              columnNumber: 17\n            }, this), selectedAssignment.endDate && /*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                px: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3052,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3051,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"\\uC885\\uB8CC\\uC77C\",\n                secondary: selectedAssignment.endDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3054,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3050,\n              columnNumber: 19\n            }, this), selectedAssignment.area === 'vocabulary' && selectedAssignment.startUnit && /*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                px: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(InfoIcon, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3064,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3063,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"\\uC2DC\\uC791 \\uB2E8\\uC6D0\",\n                secondary: selectedAssignment.startUnit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3066,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3062,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3018,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              my: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3074,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mb: 2,\n              fontWeight: 600\n            },\n            children: \"\\uC9C4\\uD589\\uB960\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3076,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [selectedAssignment.progress.completed, \" / \", selectedAssignment.progress.total, \" \\uC644\\uB8CC\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3081,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"primary\",\n                sx: {\n                  fontWeight: 600\n                },\n                children: [Math.round(selectedAssignment.progress.completed / selectedAssignment.progress.total * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3084,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3080,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"determinate\",\n              value: selectedAssignment.progress.completed / selectedAssignment.progress.total * 100,\n              sx: {\n                height: 8,\n                borderRadius: 4\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3088,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3079,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mb: 2,\n              fontWeight: 600\n            },\n            children: \"\\uC8FC\\uAC04 \\uC2A4\\uCF00\\uC904\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3095,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 1\n            },\n            children: ['월', '화', '수', '목', '금', '토', '일'].map(day => {\n              const schedule = selectedAssignment.weeklySchedule[day];\n              return /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  p: 2,\n                  borderRadius: 1,\n                  backgroundColor: schedule !== null && schedule !== void 0 && schedule.isActive ? 'primary.50' : 'grey.50',\n                  border: schedule !== null && schedule !== void 0 && schedule.isActive ? '1px solid' : '1px solid',\n                  borderColor: schedule !== null && schedule !== void 0 && schedule.isActive ? 'primary.200' : 'grey.200'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  sx: {\n                    fontWeight: 500\n                  },\n                  children: [day, \"\\uC694\\uC77C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3115,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: schedule !== null && schedule !== void 0 && schedule.isActive ? schedule.dailyAmount : '학습 없음'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3119,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    label: schedule !== null && schedule !== void 0 && schedule.isActive ? '활성' : '비활성',\n                    color: schedule !== null && schedule !== void 0 && schedule.isActive ? 'success' : 'default',\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3122,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3118,\n                  columnNumber: 23\n                }, this)]\n              }, day, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3102,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3098,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3008,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2994,\n        columnNumber: 9\n      }, this), showVocabularyLearning && selectedAssignment && /*#__PURE__*/_jsxDEV(VocabularyLearning, {\n        assignment: selectedAssignment,\n        onComplete: handleCompleteVocabularyLearning,\n        onClose: handleCloseVocabularyLearning,\n        timerDuration: timerDuration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3140,\n        columnNumber: 11\n      }, this), showVocabularyEvaluation && selectedAssignment && /*#__PURE__*/_jsxDEV(VocabularyEvaluation, {\n        assignment: selectedAssignment,\n        learningHistory: (student === null || student === void 0 ? void 0 : (_student$learningHist0 = student.learningHistory) === null || _student$learningHist0 === void 0 ? void 0 : _student$learningHist0.filter(history => history.taskId === selectedAssignment.taskId)) || [],\n        evaluationLevel: evaluationLevel,\n        firstEvaluationResults: evaluationLevel > 1 ? student === null || student === void 0 ? void 0 : (_student$evaluationHi5 = student.evaluationHistory) === null || _student$evaluationHi5 === void 0 ? void 0 : (_student$evaluationHi6 = _student$evaluationHi5.find(e => e.taskId === selectedAssignment.taskId && e.evaluationLevel === evaluationLevel - 1)) === null || _student$evaluationHi6 === void 0 ? void 0 : _student$evaluationHi6.results : undefined,\n        onComplete: handleCompleteVocabularyEvaluation,\n        onClose: handleCloseVocabularyEvaluation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: showEvaluationSelectDialog,\n        onClose: () => setShowEvaluationSelectDialog(false),\n        maxWidth: \"sm\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"\\uD3C9\\uAC00 \\uC120\\uD0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              py: 2\n            },\n            children: ((_student$evaluationHi7, _latestEvaluation$res2) => {\n              // 해당 과제의 모든 평가 기록\n              const allEvaluations = (student === null || student === void 0 ? void 0 : (_student$evaluationHi7 = student.evaluationHistory) === null || _student$evaluationHi7 === void 0 ? void 0 : _student$evaluationHi7.filter(e => e.taskId === (selectedAssignment === null || selectedAssignment === void 0 ? void 0 : selectedAssignment.taskId))) || [];\n\n              // 가장 최근 평가\n              const latestEvaluation = allEvaluations.length > 0 ? allEvaluations.reduce((latest, current) => current.evaluationLevel > latest.evaluationLevel ? current : latest) : null;\n              if (!latestEvaluation) return null;\n              const correctCount = latestEvaluation.results.correctWords;\n              const incorrectCount = ((_latestEvaluation$res2 = latestEvaluation.results.incorrectWords) === null || _latestEvaluation$res2 === void 0 ? void 0 : _latestEvaluation$res2.length) || 0;\n              const totalCount = correctCount + incorrectCount;\n              const correctRate = Math.round(correctCount / totalCount * 100);\n              const nextLevel = latestEvaluation.evaluationLevel + 1;\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  sx: {\n                    mb: 3\n                  },\n                  children: [latestEvaluation.evaluationLevel, \"\\uCC28 \\uD3C9\\uAC00\\uB97C \\uC644\\uB8CC\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4. \\uC5B4\\uB5A4 \\uD3C9\\uAC00\\uB97C \\uC9C4\\uD589\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3197,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mb: 3,\n                    p: 2,\n                    bgcolor: 'grey.50',\n                    borderRadius: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    sx: {\n                      fontWeight: 600,\n                      mb: 1\n                    },\n                    children: [latestEvaluation.evaluationLevel, \"\\uCC28 \\uD3C9\\uAC00 \\uACB0\\uACFC\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3202,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [\"\\uCD1D \", totalCount, \"\\uAC1C \\uC911 \", correctCount, \"\\uAC1C \\uC815\\uB2F5 (\\uC815\\uB2F5\\uB960 \", correctRate, \"%)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3205,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"error\",\n                    sx: {\n                      mt: 0.5\n                    },\n                    children: [\"\\uC624\\uB2F5: \", incorrectCount, \"\\uAC1C\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3208,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    sx: {\n                      display: 'block',\n                      mt: 1\n                    },\n                    children: [\"\\uD3C9\\uAC00\\uC77C: \", new Date(latestEvaluation.date).toLocaleDateString('ko-KR')]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3211,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3201,\n                  columnNumber: 21\n                }, this), allEvaluations.length > 1 && /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mb: 3\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    sx: {\n                      display: 'block',\n                      mb: 1\n                    },\n                    children: \"\\uC774\\uC804 \\uD3C9\\uAC00 \\uC774\\uB825:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3219,\n                    columnNumber: 25\n                  }, this), allEvaluations.filter(e => e.evaluationLevel < latestEvaluation.evaluationLevel).sort((a, b) => b.evaluationLevel - a.evaluationLevel).map(evaluation => /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    sx: {\n                      display: 'block'\n                    },\n                    children: [\"\\u2022 \", evaluation.evaluationLevel, \"\\uCC28: \", evaluation.results.correctWords, \"/\", evaluation.results.totalWords, \"\\uAC1C \\uC815\\uB2F5\"]\n                  }, evaluation.evaluationLevel, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3226,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3218,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    size: \"large\",\n                    onClick: () => {\n                      setEvaluationLevel(latestEvaluation.evaluationLevel);\n                      setShowEvaluationSelectDialog(false);\n                      setShowVocabularyEvaluation(true);\n                    },\n                    sx: {\n                      py: 2\n                    },\n                    children: [latestEvaluation.evaluationLevel, \"\\uCC28 \\uD3C9\\uAC00 \\uB2E4\\uC2DC\\uD558\\uAE30\", /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"text.secondary\",\n                      sx: {\n                        display: 'block',\n                        mt: 0.5\n                      },\n                      children: [latestEvaluation.evaluationLevel === 1 ? '전체 단어를' : '이전 오답 단어를', \" \\uB2E4\\uC2DC \\uD3C9\\uAC00\\uD569\\uB2C8\\uB2E4\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3245,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3234,\n                    columnNumber: 23\n                  }, this), incorrectCount > 0 && nextLevel <= 5 && /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    size: \"large\",\n                    onClick: () => {\n                      setEvaluationLevel(nextLevel);\n                      setShowEvaluationSelectDialog(false);\n                      setShowVocabularyEvaluation(true);\n                    },\n                    sx: {\n                      py: 2\n                    },\n                    children: [nextLevel, \"\\uCC28 \\uD3C9\\uAC00 \\uC9C4\\uD589\\uD558\\uAE30\", /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      sx: {\n                        display: 'block',\n                        mt: 0.5,\n                        color: 'inherit'\n                      },\n                      children: [latestEvaluation.evaluationLevel, \"\\uCC28 \\uD3C9\\uAC00\\uC5D0\\uC11C \\uD2C0\\uB9B0 \", incorrectCount, \"\\uAC1C \\uB2E8\\uC5B4\\uB9CC \\uD3C9\\uAC00\\uD569\\uB2C8\\uB2E4\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3262,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3251,\n                    columnNumber: 25\n                  }, this), nextLevel > 5 && incorrectCount > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    sx: {\n                      textAlign: 'center',\n                      mt: 2\n                    },\n                    children: \"5\\uCC28 \\uD3C9\\uAC00\\uAE4C\\uC9C0 \\uC644\\uB8CC\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4. \\uCD94\\uAC00 \\uD3C9\\uAC00\\uB294 \\uC9C0\\uC6D0\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3269,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3233,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true);\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShowEvaluationSelectDialog(false),\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3280,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1226,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentPage, \"Wq7WteoHB9EzyingX5X6yJBrwdA=\", false, function () {\n  return [useParams, useNavigate, useTheme, useMediaQuery];\n});\n_c2 = StudentPage;\nexport default StudentPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"StudentPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Card","CardContent","Grid","Chip","LinearProgress","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","Dialog","DialogTitle","DialogContent","DialogActions","IconButton","Avatar","useTheme","useMediaQuery","Drawer","List","ListItem","ListItemText","ListItemIcon","Divider","AppBar","Toolbar","Container","Tabs","Tab","Slider","ToggleButton","ToggleButtonGroup","Tooltip","Assignment","AssignmentIcon","CheckCircle","CheckCircleIcon","ArrowBack","ArrowBackIcon","Info","InfoIcon","CalendarToday","CalendarIcon","TrendingUp","TrendingUpIcon","Close","CloseIcon","Refresh","RefreshIcon","Today","TodayIcon","ViewModule","ViewModuleIcon","PlayArrow","PlayArrowIcon","Settings","SettingsIcon","Timer","TimerIcon","DateRange","DateRangeIcon","CalendarMonth","CalendarMonthIcon","NavigateBefore","NavigateBeforeIcon","NavigateNext","NavigateNextIcon","useParams","useNavigate","loadStudents","saveStudents","loadTasks","VocabularyLearning","VocabularyEvaluation","jsxDEV","_jsxDEV","Fragment","_Fragment","TabPanel","props","children","value","index","other","role","hidden","id","sx","pt","fileName","_jsxFileName","lineNumber","columnNumber","_c","StudentPage","_s","_student$learningHist0","_student$evaluationHi5","_student$evaluationHi6","studentId","navigate","student","setStudent","selectedAssignment","setSelectedAssignment","openDetailDialog","setOpenDetailDialog","openMobileDetail","setOpenMobileDetail","tabValue","setTabValue","showVocabularyLearning","setShowVocabularyLearning","showVocabularyEvaluation","setShowVocabularyEvaluation","showEvaluationSelectDialog","setShowEvaluationSelectDialog","evaluationLevel","setEvaluationLevel","selectedArea","setSelectedArea","timerDuration","setTimerDuration","saved","localStorage","getItem","parseFloat","viewMode","setViewMode","weekOffset","setWeekOffset","monthOffset","setMonthOffset","theme","isMobile","breakpoints","down","students","foundStudent","find","s","_student$learningHist","console","log","name","taskAssignments","map","a","taskId","title","taskTitle","learningHistoryCount","learningHistory","length","getAreaText","area","getStatusText","status","getStatusColor","getGradeText","grade","getGradeColor","handleOpenDetailDialog","assignment","handleCloseDetailDialog","handleStartVocabularyLearning","targetDate","assignmentWithDate","toISOString","handleStartEvaluation","_student$learningHist2","_student$evaluationHi","_latestEvaluation$res","taskLearningHistory","filter","history","alert","allEvaluations","evaluationHistory","e","latestEvaluation","reduce","latest","current","results","incorrectWords","handleCompleteVocabularyLearning","learningDate","Date","targetUnit","totalRounds","finalResult","totalWords","finalCompletedWords","actualFinalCompletedWords","undefined","firstRoundCompleted","completedWords","lastRoundCompleted","updatedStudent","previousLearningCount","learningRecord","date","learningSession","isFirstLearning","rounds","summary","completionRate","Math","round","toLocaleString","push","h","assignmentIndex","findIndex","progress","completed","totalProgress","total","studentIndex","sessionText","handleCloseVocabularyLearning","handleCompleteVocabularyEvaluation","evaluationDate","evaluationRecord","correctWords","handleCloseVocabularyEvaluation","handleRestartLearning","_student$taskAssignme","_targetTask$vocabular","existingAssignment","startUnit","tasks","targetTask","t","error","vocabularyData","weeklySchedule","isActive","dailyAmount","startDate","split","updatedStudents","handleTabChange","event","newValue","getTodayAssignments","today","dayNames","todayDayName","getDay","todayTasks","_assignment$weeklySch","todaySchedule","assignmentStartDate","setHours","endDate","assignmentEndDate","isAssignmentCompleted","getWeekAssignments","dayOfWeek","weekStart","setDate","getDate","weekEnd","Object","entries","some","day","schedule","getMonthAssignments","getActiveAssignments","activeAssignments","taskIds","uniqueTaskIds","Set","size","getAssignmentsByViewMode","getViewModeTitle","getWeekDateRange","offset","currentDay","diff","monday","sunday","getWeekTitle","formatDate","getMonth","abs","getMonthDateRange","year","getFullYear","month","firstDay","lastDay","getMonthCalendarData","startDayOfWeek","daysInMonth","calendar","week","i","getMonthTitle","monthNames","getViewTitle","getChipLabel","mode","getWeeklyGroupedAssignments","weeklyGroups","forEach","viewAssignments","_assignment$weeklySch2","_assignment$weeklySch3","canStudyOnDay","dayIndex","studyDayCount","targetStudyDay","currentDate","_assignment$weeklySch4","currentDayIndex","currentDayName","getTime","thisWeekStart","weekStudyDay","_assignment$weeklySch5","checkDate","totalStudyDays","floor","dayNumber","j","_assignment$weeklySch6","tempDate","tempDayName","getUnitForDate","_assignment$weeklySch7","unitOrder","unitSet","word","has","unit","add","startUnitIndex","indexOf","targetUnitIndex","getUnitProgressForDate","totalUnits","totalUnitsStudied","daySchedule","Number","currentStartUnit","isCompleted","min","completedDate","_assignment$weeklySch8","getUpcomingAssignments","assignments","dayName","toLocaleDateString","dayAssignments","_assignment$weeklySch9","unitSeparatedAssignments","_assignment$weeklySch0","join","currentUnitIndex","endUnitIndex","unitIndex","display","justifyContent","alignItems","height","variant","todayAssignments","pb","position","elevation","edge","color","onClick","mr","flex","label","maxWidth","px","py","mb","width","charAt","component","gap","mt","borderRadius","p","address","phone","joinDate","textAlign","borderBottom","borderColor","onChange","minHeight","fontSize","icon","iconPosition","flexDirection","flexWrap","fontWeight","ml","border","disabled","mx","minWidth","exclusive","newMode","dayNamesKorean","dayNamesDisplay","todayIndex","dayIndexToWeekday","container","spacing","koreanDay","isToday","weekdayNumber","thisWeekDate","todayDate","isPast","isRealToday","item","xs","sm","md","bgcolor","opacity","maxHeight","overflowY","background","idx","_assignment$weeklySch1","_assignment$weeklySch10","_student$learningHist3","taskHistory","historyDate","flexShrink","overflow","textOverflow","whiteSpace","align","weekIndex","dateString","actualToday","baseAssignments","_assignment$weeklySch11","_assignment$weeklySch12","verticalAlign","cursor","slice","_assignment$weeklySch13","_assignment$weeklySch14","_student$learningHist4","isDummy","upcomingDays","areas","dayData","filteredUpcomingDays","newArea","Array","from","dateLabel","_assignment$weeklySch15","_assignment$weeklySch16","_student$learningHist5","unitNumber","unitProgress","_student$learningHist6","targetDateString","historyDateString","matches","backgroundColor","boxShadow","transform","transition","_assignment$weeklySch17","_student$learningHist7","todayString","_student$evaluationHi2","sortedEvaluations","sort","b","evaluation","isPerfect","arrow","_assignment$weeklySch18","hasTodayTask","startIcon","textTransform","lineHeight","_student$learningHist8","_student$evaluationHi3","_","stopPropagation","max","step","marks","valueLabelDisplay","valueLabelFormat","setItem","toString","style","window","confirm","_student$learningHist9","_student$evaluationHi4","open","onClose","fullWidth","anchor","PaperProps","borderTopLeftRadius","borderTopRightRadius","primary","secondary","my","onComplete","firstEvaluationResults","_student$evaluationHi7","_latestEvaluation$res2","correctCount","incorrectCount","totalCount","correctRate","nextLevel","_c2","$RefreshReg$"],"sources":["C:/Users/user/pro_planner/src/pages/StudentPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  Chip,\n  LinearProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  Avatar,\n  useTheme,\n  useMediaQuery,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Divider,\n  AppBar,\n  Toolbar,\n  Container,\n  Tabs,\n  Tab,\n  Slider,\n  ToggleButton,\n  ToggleButtonGroup,\n  Tooltip,\n} from '@mui/material';\nimport {\n  Assignment as AssignmentIcon,\n  CheckCircle as CheckCircleIcon,\n  ArrowBack as ArrowBackIcon,\n  Info as InfoIcon,\n  CalendarToday as CalendarIcon,\n  TrendingUp as TrendingUpIcon,\n  Close as CloseIcon,\n  Refresh as RefreshIcon,\n  Today as TodayIcon,\n  ViewModule as ViewModuleIcon,\n  PlayArrow as PlayArrowIcon,\n  Settings as SettingsIcon,\n  Timer as TimerIcon,\n  DateRange as DateRangeIcon,\n  CalendarMonth as CalendarMonthIcon,\n  NavigateBefore as NavigateBeforeIcon,\n  NavigateNext as NavigateNextIcon,\n} from '@mui/icons-material';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { loadStudents, saveStudents, loadTasks } from '../utils/storage';\nimport VocabularyLearning from '../components/VocabularyLearning';\nimport VocabularyEvaluation from '../components/VocabularyEvaluation';\n\ninterface TaskAssignment {\n  taskId: string;\n  taskTitle: string;\n  area: 'vocabulary' | 'phrase' | 'grammar' | 'logic';\n  weeklySchedule: {\n    [day: string]: {\n      isActive: boolean;\n      dailyAmount: string;\n    };\n  };\n  startDate: string;\n  endDate?: string;\n  status: 'active' | 'completed' | 'paused';\n  progress: {\n    completed: number;\n    total: number;\n  };\n  startUnit?: string;\n  vocabularyData?: Array<{ unit: string; english: string; meaning: string }>;\n  targetDate?: string; // 학습이나 평가를 수행하는 대상 날짜\n  targetUnit?: string; // 특정 단원을 지정하여 학습할 때 사용\n}\n\ninterface Student {\n  id: string;\n  name: string;\n  address: string;\n  phone: string;\n  grade: '초6' | '중1' | '중2' | '중3' | '고1' | '고2' | '고3';\n  joinDate: string;\n  status: 'active' | 'inactive';\n  assignedTasks: string[];\n  taskAssignments: TaskAssignment[];\n  grades: {\n    [year: string]: {\n      mockExam3?: string;\n      mockExam6?: string;\n      mockExam9?: string;\n      mockExam11?: string;\n      midterm1?: string;\n      final1?: string;\n      midterm2?: string;\n      final2?: string;\n    };\n  };\n  learningHistory?: Array<{\n    date: string;\n    taskId: string;\n    taskTitle: string;\n    learningSession: number; // 학습 회차 (1, 2, 3...)\n    isFirstLearning: boolean; // 최초 학습 여부\n    rounds: any[];\n    summary: {\n      totalRounds: number;\n      totalWords: number;\n      finalCompletedWords: number;\n      completionRate: number;\n    };\n  }>;\n  evaluationHistory?: Array<{\n    date: string;\n    taskId: string;\n    taskTitle: string;\n    evaluationLevel: number;\n    results: any;\n  }>;\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ pt: 2 }}>{children}</Box>}\n    </div>\n  );\n}\n\nconst StudentPage: React.FC = () => {\n  const { studentId } = useParams<{ studentId: string }>();\n  const navigate = useNavigate();\n  const [student, setStudent] = useState<Student | null>(null);\n  const [selectedAssignment, setSelectedAssignment] = useState<TaskAssignment | null>(null);\n  const [openDetailDialog, setOpenDetailDialog] = useState(false);\n  const [openMobileDetail, setOpenMobileDetail] = useState(false);\n  const [tabValue, setTabValue] = useState(0);\n  const [showVocabularyLearning, setShowVocabularyLearning] = useState(false);\n  const [showVocabularyEvaluation, setShowVocabularyEvaluation] = useState(false);\n  const [showEvaluationSelectDialog, setShowEvaluationSelectDialog] = useState(false);\n  const [evaluationLevel, setEvaluationLevel] = useState<number>(1);\n  const [selectedArea, setSelectedArea] = useState<string>('all');\n  const [timerDuration, setTimerDuration] = useState(() => {\n    // 로컬 스토리지에서 저장된 타이머 시간 불러오기\n    const saved = localStorage.getItem(`timer_duration_${studentId}`);\n    return saved ? parseFloat(saved) : 1.5;\n  });\n  const [viewMode, setViewMode] = useState<'today' | 'week' | 'month'>('today');\n  const [weekOffset, setWeekOffset] = useState(0); // 0 = 이번 주, -1 = 지난 주, 1 = 다음 주\n  const [monthOffset, setMonthOffset] = useState(0); // 0 = 이번 달, -1 = 지난 달, 1 = 다음 달\n  \n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n\n  useEffect(() => {\n    if (studentId) {\n      const students = loadStudents();\n      const foundStudent = students.find(s => s.id === studentId);\n      if (foundStudent) {\n        setStudent(foundStudent);\n      } else {\n        // 학생을 찾을 수 없는 경우 관리자 페이지로 리다이렉트\n        navigate('/students');\n      }\n    }\n  }, [studentId, navigate]);\n\n  // viewMode가 변경될 때 selectedArea를 리셋\n  useEffect(() => {\n    setSelectedArea('all');\n  }, [viewMode]);\n\n  // 학생 정보 변경 모니터링\n  useEffect(() => {\n    if (student) {\n      console.log('Student data updated:', {\n        name: student.name,\n        taskAssignments: student.taskAssignments.map(a => ({ \n          taskId: a.taskId, \n          title: a.taskTitle \n        })),\n        learningHistoryCount: student.learningHistory?.length || 0\n      });\n    }\n  }, [student]);\n\n  const getAreaText = (area: string) => {\n    switch (area) {\n      case 'vocabulary': return '단어';\n      case 'phrase': return '구문';\n      case 'grammar': return '어법';\n      case 'logic': return '논리';\n      default: return area;\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'active': return '진행중';\n      case 'completed': return '완료';\n      case 'paused': return '일시정지';\n      default: return status;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'success';\n      case 'completed': return 'primary';\n      case 'paused': return 'warning';\n      default: return 'default';\n    }\n  };\n\n  const getGradeText = (grade: string) => {\n    return grade;\n  };\n\n  const getGradeColor = (grade: string) => {\n    switch (grade) {\n      case '초6':\n        return 'warning';\n      case '중1':\n      case '중2':\n      case '중3':\n        return 'primary';\n      case '고1':\n      case '고2':\n      case '고3':\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  const handleOpenDetailDialog = (assignment: TaskAssignment) => {\n    console.log('Opening detail dialog for assignment:', assignment.taskTitle, 'taskId:', assignment.taskId);\n    setSelectedAssignment(assignment);\n    if (isMobile) {\n      setOpenMobileDetail(true);\n    } else {\n      setOpenDetailDialog(true);\n    }\n  };\n\n  const handleCloseDetailDialog = () => {\n    setOpenDetailDialog(false);\n    setOpenMobileDetail(false);\n    setSelectedAssignment(null);\n  };\n\n  const handleStartVocabularyLearning = (assignment: TaskAssignment & { targetUnit?: string }, targetDate?: Date) => {\n    console.log('Starting vocabulary learning for assignment:', assignment);\n    console.log('Assignment taskId:', assignment.taskId);\n    console.log('Assignment title:', assignment.taskTitle);\n    console.log('Target date:', targetDate);\n    \n    // targetDate가 있으면 assignment에 추가\n    const assignmentWithDate = targetDate \n      ? { ...assignment, targetDate: targetDate.toISOString() }\n      : assignment;\n    \n    console.log('Assignment with date:', assignmentWithDate);\n    \n    setSelectedAssignment(assignmentWithDate);\n    // 타이머 설정 다이얼로그를 건너뛰고 바로 학습 시작\n    setShowVocabularyLearning(true);\n  };\n\n  const handleStartEvaluation = (assignment: TaskAssignment, targetDate?: Date) => {\n    // 해당 과제의 학습 기록 확인\n    const taskLearningHistory = student?.learningHistory?.filter(\n      history => history.taskId === assignment.taskId\n    ) || [];\n    \n    if (taskLearningHistory.length === 0) {\n      alert('먼저 학습을 완료해주세요. 평가는 학습 완료 후에 가능합니다.');\n      return;\n    }\n    \n    // targetDate가 있으면 assignment에 추가\n    const assignmentWithDate = targetDate \n      ? { ...assignment, targetDate: targetDate.toISOString() }\n      : assignment;\n    \n    setSelectedAssignment(assignmentWithDate);\n    \n    // 해당 과제의 모든 평가 기록 가져오기\n    const allEvaluations = student?.evaluationHistory?.filter(\n      e => e.taskId === assignment.taskId\n    ) || [];\n    \n    // 가장 최근 평가 찾기\n    const latestEvaluation = allEvaluations.length > 0 \n      ? allEvaluations.reduce((latest, current) => \n          current.evaluationLevel > latest.evaluationLevel ? current : latest\n        )\n      : null;\n    \n    if (!latestEvaluation) {\n      // 평가 기록이 없으면 1차 평가 시작\n      setEvaluationLevel(1);\n      setShowVocabularyEvaluation(true);\n    } else if (latestEvaluation.results.incorrectWords?.length > 0) {\n      // 가장 최근 평가에 오답이 있으면 평가 선택 다이얼로그 표시\n      setShowEvaluationSelectDialog(true);\n    } else {\n      // 가장 최근 평가에서 모두 정답인 경우\n      alert(`${latestEvaluation.evaluationLevel}차 평가에서 모든 문제를 맞추셨습니다. 추가 평가가 필요하지 않습니다.`);\n    }\n  };\n\n  const handleCompleteVocabularyLearning = (results: any[]) => {\n    // 학습 완료 처리 로직\n    console.log('Vocabulary learning completed with results:', results);\n    console.log('Selected assignment:', selectedAssignment);\n    \n    if (!student || !selectedAssignment) return;\n    \n    // targetDate가 있으면 해당 날짜 사용, 없으면 현재 날짜 사용\n    const learningDate = selectedAssignment.targetDate \n      ? new Date(selectedAssignment.targetDate) \n      : new Date();\n    \n    console.log('Learning date:', learningDate);\n    console.log('Selected assignment taskId:', selectedAssignment.taskId);\n    console.log('Selected assignment targetUnit:', (selectedAssignment as any).targetUnit);\n    \n    // 학습 결과 요약\n    const totalRounds = results.length;\n    const finalResult = results[results.length - 1];\n    const totalWords = results[0].totalWords;\n    \n    // actualFinalCompletedWords가 있으면 사용, 없으면 기존 방식으로 계산\n    let finalCompletedWords;\n    if (finalResult.actualFinalCompletedWords !== undefined) {\n      finalCompletedWords = finalResult.actualFinalCompletedWords;\n    } else {\n      // 1회차에서 완료한 단어 수\n      const firstRoundCompleted = results.length > 1 \n        ? totalWords - results[1].totalWords \n        : results[0].completedWords;\n      \n      // 마지막 회차에서 완료한 단어 수\n      const lastRoundCompleted = results.length > 1\n        ? finalResult.completedWords\n        : 0;\n      \n      finalCompletedWords = firstRoundCompleted + lastRoundCompleted;\n    }\n    \n    // 학생 정보 업데이트\n    const updatedStudent = { ...student };\n    \n    // 학습 기록 배열이 없으면 생성\n    if (!updatedStudent.learningHistory) {\n      updatedStudent.learningHistory = [];\n    }\n    \n    // 해당 과제의 기존 학습 횟수 계산 (단원별로 구분)\n    const targetUnit = (selectedAssignment as any).targetUnit;\n    const previousLearningCount = updatedStudent.learningHistory.filter(\n      history => history.taskId === selectedAssignment.taskId && \n                 (!targetUnit || (history as any).targetUnit === targetUnit)\n    ).length;\n    \n    console.log('Previous learning count for taskId', selectedAssignment.taskId, 'and unit', targetUnit, ':', previousLearningCount);\n    \n    // 학습 기록 저장 (학습 회차 추가)\n    const learningRecord = {\n      date: learningDate.toISOString(), // targetDate 사용\n      taskId: selectedAssignment.taskId,\n      taskTitle: selectedAssignment.taskTitle,\n      targetUnit: targetUnit, // 단원 정보 추가\n      learningSession: previousLearningCount + 1, // 학습 회차 (1회차, 2회차...)\n      isFirstLearning: previousLearningCount === 0, // 최초 학습 여부\n      rounds: results,\n      summary: {\n        totalRounds,\n        totalWords,\n        finalCompletedWords,\n        completionRate: Math.round((finalCompletedWords / totalWords) * 100),\n      }\n    };\n    \n    console.log('New learning record:', learningRecord);\n    console.log('Learning record date:', learningRecord.date);\n    console.log('Learning record date (local):', new Date(learningRecord.date).toLocaleString());\n    \n    // 학습 기록 추가\n    updatedStudent.learningHistory.push(learningRecord);\n    \n    console.log('Updated learning history:', updatedStudent.learningHistory);\n    console.log('Learning history for all tasks:', updatedStudent.learningHistory.map(h => ({ taskId: h.taskId, date: h.date })));\n    \n    // 과제 진행률 업데이트\n    const assignmentIndex = updatedStudent.taskAssignments.findIndex(\n      a => a.taskId === selectedAssignment.taskId\n    );\n    \n    if (assignmentIndex !== -1) {\n      // 완료된 단어 수만큼 진행률 증가\n      updatedStudent.taskAssignments[assignmentIndex].progress.completed += finalCompletedWords;\n      \n      // 진행률이 전체를 초과하지 않도록 조정\n      const totalProgress = updatedStudent.taskAssignments[assignmentIndex].progress.total;\n      if (updatedStudent.taskAssignments[assignmentIndex].progress.completed > totalProgress) {\n        updatedStudent.taskAssignments[assignmentIndex].progress.completed = totalProgress;\n      }\n    }\n    \n    // 학생 정보 저장\n    const students = loadStudents();\n    const studentIndex = students.findIndex(s => s.id === student.id);\n    if (studentIndex !== -1) {\n      students[studentIndex] = updatedStudent;\n      saveStudents(students);\n      setStudent(updatedStudent);\n    }\n    \n    // 결과 알림\n    const sessionText = learningRecord.learningSession === 1 ? '최초 학습' : `${learningRecord.learningSession}회차 학습`;\n    alert(`${sessionText}이 완료되었습니다!\\n\\n총 ${totalRounds}회차 학습\\n전체 ${totalWords}개 단어 중 ${finalCompletedWords}개 완료 (${learningRecord.summary.completionRate}%)`);\n    \n    setShowVocabularyLearning(false);\n    setSelectedAssignment(null);\n  };\n\n  const handleCloseVocabularyLearning = () => {\n    setShowVocabularyLearning(false);\n    setSelectedAssignment(null);\n  };\n\n  const handleCompleteVocabularyEvaluation = (results: any) => {\n    console.log('평가 완료:', results);\n    \n    if (!student || !selectedAssignment) return;\n    \n    // targetDate가 있으면 해당 날짜 사용, 없으면 현재 날짜 사용\n    const evaluationDate = selectedAssignment.targetDate \n      ? new Date(selectedAssignment.targetDate) \n      : new Date();\n    \n    // 평가 결과를 학생 정보에 저장\n    const evaluationRecord = {\n      date: evaluationDate.toISOString(), // targetDate 사용\n      taskId: selectedAssignment.taskId,\n      taskTitle: selectedAssignment.taskTitle,\n      evaluationLevel: results.evaluationLevel,\n      results: results,\n    };\n    \n    // 학생 정보 업데이트\n    const updatedStudent = { ...student };\n    \n    // 평가 기록 배열이 없으면 생성\n    if (!updatedStudent.evaluationHistory) {\n      updatedStudent.evaluationHistory = [];\n    }\n    \n    // 평가 기록 추가\n    updatedStudent.evaluationHistory.push(evaluationRecord);\n    \n    // 학생 정보 저장\n    const students = loadStudents();\n    const studentIndex = students.findIndex(s => s.id === student.id);\n    if (studentIndex !== -1) {\n      students[studentIndex] = updatedStudent;\n      saveStudents(students);\n      setStudent(updatedStudent);\n    }\n    \n    // 결과 알림\n    alert(`${results.evaluationLevel}차 평가가 완료되었습니다!\\n\\n정답: ${results.correctWords}개\\n오답: ${results.incorrectWords.length}개\\n정답률: ${Math.round((results.correctWords / results.totalWords) * 100)}%`);\n    \n    setShowVocabularyEvaluation(false);\n    setSelectedAssignment(null);\n  };\n\n  const handleCloseVocabularyEvaluation = () => {\n    setShowVocabularyEvaluation(false);\n    setSelectedAssignment(null);\n  };\n\n  const handleRestartLearning = () => {\n    // 기존 과제 배정 정보에서 startUnit 확인\n    const existingAssignment = student?.taskAssignments?.find(\n      a => a.taskId === selectedAssignment?.taskId\n    );\n    const startUnit = existingAssignment?.startUnit || '';\n    \n    console.log('Restarting learning with:', {\n      selectedAssignment,\n      existingAssignment,\n      startUnit\n    });\n    \n    // 현재 과제 정보 가져오기\n    const tasks = loadTasks();\n    const targetTask = tasks.find((t: any) => \n      t.id === selectedAssignment?.taskId || t.title === selectedAssignment?.taskTitle\n    );\n    \n    if (!targetTask) {\n      console.error('Target task not found');\n      alert('과제를 찾을 수 없습니다.');\n      return;\n    }\n    \n    console.log('Found target task:', targetTask);\n    console.log('Task vocabularyData:', targetTask.vocabularyData);\n    \n    // 찾은 과제로 배정 생성\n    const assignment: TaskAssignment = {\n      taskId: targetTask.id,\n      taskTitle: targetTask.title,\n      area: targetTask.area,\n      weeklySchedule: {\n        '월': { isActive: true, dailyAmount: '5' },\n        '화': { isActive: true, dailyAmount: '5' },\n        '수': { isActive: true, dailyAmount: '5' },\n        '목': { isActive: true, dailyAmount: '5' },\n        '금': { isActive: true, dailyAmount: '5' },\n        '토': { isActive: false, dailyAmount: '0' },\n        '일': { isActive: false, dailyAmount: '0' },\n      },\n      startDate: new Date().toISOString().split('T')[0],\n      status: 'active',\n      progress: {\n        completed: 0,\n        total: targetTask.vocabularyData?.length || 0,\n      },\n      vocabularyData: targetTask.vocabularyData,\n      startUnit: startUnit, // 기존 startUnit 유지\n    };\n    \n    console.log('Created new assignment:', assignment);\n    console.log('Assignment has vocabularyData:', !!assignment.vocabularyData);\n    \n    if (student) {\n      const updatedStudent = {\n        ...student,\n        taskAssignments: [assignment],\n      };\n      \n      // 로컬 스토리지에 저장\n      const students = loadStudents();\n      const updatedStudents = students.map(s => \n        s.id === student.id ? updatedStudent : s\n      );\n      saveStudents(updatedStudents);\n      \n      // 상태 업데이트\n      setStudent(updatedStudent);\n      console.log('Student updated with new assignment');\n    }\n  };\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  const getTodayAssignments = () => {\n    if (!student) return [];\n    \n    console.log('Getting today assignments for student:', student.name);\n    console.log('All task assignments:', student.taskAssignments);\n    \n    // 오늘 요일 확인\n    const today = new Date();\n    const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n    const todayDayName = dayNames[today.getDay()];\n    \n    console.log('Today is:', todayDayName);\n    \n    // 오늘 요일에 활성화된 과제만 필터링\n    const todayTasks = student.taskAssignments.filter(assignment => {\n      // 활성 상태인지 확인\n      if (assignment.status !== 'active') return false;\n      \n      // 오늘 요일의 스케줄이 활성화되어 있는지 확인\n      const todaySchedule = assignment.weeklySchedule?.[todayDayName];\n      if (!todaySchedule?.isActive) return false;\n      \n      // 시작일이 오늘보다 늦으면 제외\n      const assignmentStartDate = new Date(assignment.startDate);\n      assignmentStartDate.setHours(0, 0, 0, 0);\n      today.setHours(0, 0, 0, 0);\n      if (assignmentStartDate > today) return false;\n      \n      // 종료일이 있고 오늘보다 이전이면 제외\n      if (assignment.endDate) {\n        const assignmentEndDate = new Date(assignment.endDate);\n        assignmentEndDate.setHours(0, 0, 0, 0);\n        if (assignmentEndDate < today) return false;\n      }\n      \n      // 전체 학습이 완료된 과제는 제외\n      if (isAssignmentCompleted(assignment, today)) return false;\n      \n      console.log('Task included in today:', assignment.taskTitle, 'taskId:', assignment.taskId);\n      return true;\n    });\n    \n    console.log('Today tasks count:', todayTasks.length);\n    console.log('Today tasks:', todayTasks.map(t => ({ title: t.taskTitle, taskId: t.taskId })));\n    \n    // 오늘의 과제 뷰에서는 항상 더미 데이터를 반환하여 UI가 표시되도록 함\n    if (todayTasks.length === 0) {\n      return [{\n        taskId: 'dummy',\n        taskTitle: 'dummy',\n        area: 'vocabulary' as const,\n        weeklySchedule: {},\n        startDate: '',\n        status: 'active' as const,\n        progress: { completed: 0, total: 0 },\n      }];\n    }\n    \n    return todayTasks;\n  };\n\n  const getWeekAssignments = () => {\n    if (!student) return [];\n    \n    // 이번 주에 학습 예정인 모든 과제\n    const today = new Date();\n    const dayOfWeek = today.getDay();\n    const weekStart = new Date(today);\n    weekStart.setDate(today.getDate() - dayOfWeek);\n    const weekEnd = new Date(weekStart);\n    weekEnd.setDate(weekStart.getDate() + 6);\n    \n    return student.taskAssignments.filter(assignment => {\n      if (assignment.status !== 'active') return false;\n      \n      // 주간 스케줄에서 이번 주에 활성화된 요일이 있는지 확인\n      const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n      return Object.entries(assignment.weeklySchedule || {}).some(([day, schedule]) => \n        schedule.isActive\n      );\n    });\n  };\n\n  const getMonthAssignments = () => {\n    if (!student) return [];\n    \n    // 이번 달에 활성화된 모든 과제\n    return student.taskAssignments.filter(assignment => \n      assignment.status === 'active'\n    );\n  };\n\n  const getActiveAssignments = () => {\n    if (!student) return [];\n    const activeAssignments = student.taskAssignments.filter(assignment => assignment.status === 'active');\n    \n    // taskId 중복 체크\n    const taskIds = activeAssignments.map(a => a.taskId);\n    const uniqueTaskIds = new Set(taskIds);\n    if (taskIds.length !== uniqueTaskIds.size) {\n      console.error('Duplicate taskIds found!', taskIds);\n    }\n    console.log('Active assignments taskIds:', taskIds);\n    \n    return activeAssignments;\n  };\n\n  const getAssignmentsByViewMode = () => {\n    switch (viewMode) {\n      case 'week':\n        return getWeekAssignments();\n      case 'month':\n        return getMonthAssignments();\n      default:\n        return getTodayAssignments();\n    }\n  };\n\n  const getViewModeTitle = () => {\n    switch (viewMode) {\n      case 'week':\n        return '이번 주 과제';\n      case 'month':\n        return '이번 달 과제';\n      default:\n        return '오늘의 과제';\n    }\n  };\n\n  // 주간 날짜 범위 계산\n  const getWeekDateRange = (offset: number = 0) => {\n    const today = new Date();\n    const currentDay = today.getDay();\n    const diff = currentDay === 0 ? -6 : 1 - currentDay; // 월요일 기준\n    \n    const monday = new Date(today);\n    monday.setDate(today.getDate() + diff + (offset * 7));\n    \n    const sunday = new Date(monday);\n    sunday.setDate(monday.getDate() + 6);\n    \n    return { monday, sunday };\n  };\n\n  // 주간 타이틀 생성\n  const getWeekTitle = () => {\n    if (viewMode !== 'week') return getViewModeTitle();\n    \n    const { monday, sunday } = getWeekDateRange(weekOffset);\n    const formatDate = (date: Date) => `${date.getMonth() + 1}/${date.getDate()}`;\n    \n    if (weekOffset === 0) {\n      return `이번 주 과제 (${formatDate(monday)} - ${formatDate(sunday)})`;\n    } else if (weekOffset < 0) {\n      return `${Math.abs(weekOffset)}주 전 과제 (${formatDate(monday)} - ${formatDate(sunday)})`;\n    } else {\n      return `${weekOffset}주 후 과제 (${formatDate(monday)} - ${formatDate(sunday)})`;\n    }\n  };\n\n  // 월간 날짜 계산\n  const getMonthDateRange = (offset: number = 0) => {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = today.getMonth() + offset;\n    \n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    \n    return { firstDay, lastDay, year: firstDay.getFullYear(), month: firstDay.getMonth() };\n  };\n\n  // 월간 캘린더 데이터 생성\n  const getMonthCalendarData = () => {\n    const { firstDay, lastDay, year, month } = getMonthDateRange(monthOffset);\n    const startDayOfWeek = (firstDay.getDay() + 6) % 7; // 0 = 월요일, 6 = 일요일\n    const daysInMonth = lastDay.getDate();\n    \n    const calendar = [];\n    let week = [];\n    \n    // 첫 주의 빈 날짜 채우기\n    for (let i = 0; i < startDayOfWeek; i++) {\n      week.push(null);\n    }\n    \n    // 날짜 채우기\n    for (let day = 1; day <= daysInMonth; day++) {\n      week.push(new Date(year, month, day));\n      \n      if (week.length === 7) {\n        calendar.push(week);\n        week = [];\n      }\n    }\n    \n    // 마지막 주의 빈 날짜 채우기\n    if (week.length > 0) {\n      while (week.length < 7) {\n        week.push(null);\n      }\n      calendar.push(week);\n    }\n    \n    return calendar;\n  };\n\n  // 월간 타이틀 생성\n  const getMonthTitle = () => {\n    if (viewMode !== 'month') return getViewModeTitle();\n    \n    const { year, month } = getMonthDateRange(monthOffset);\n    const monthNames = ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'];\n    \n    if (monthOffset === 0) {\n      return `${year}년 ${monthNames[month]} 과제`;\n    } else if (monthOffset < 0) {\n      return `${year}년 ${monthNames[month]} 과제`;\n    } else {\n      return `${year}년 ${monthNames[month]} 과제`;\n    }\n  };\n\n  // 전체 타이틀 생성 (주간/월간 통합)\n  const getViewTitle = () => {\n    switch (viewMode) {\n      case 'week':\n        return getWeekTitle();\n      case 'month':\n        return getMonthTitle();\n      default:\n        return getViewModeTitle();\n    }\n  };\n\n  const getChipLabel = (mode: typeof viewMode) => {\n    switch (mode) {\n      case 'week':\n        return '주간 학습';\n      case 'month':\n        return '월간 학습';\n      default:\n        return '오늘 학습';\n    }\n  };\n\n  const getWeeklyGroupedAssignments = () => {\n    if (viewMode !== 'week') return null;\n    \n    const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n    const weeklyGroups: { [key: string]: TaskAssignment[] } = {};\n    \n    // 각 요일별로 빈 배열 초기화\n    dayNames.forEach(day => {\n      weeklyGroups[day] = [];\n    });\n    \n    // 각 과제를 해당하는 요일에 추가\n    viewAssignments.forEach(assignment => {\n      dayNames.forEach(day => {\n        if (assignment.weeklySchedule?.[day]?.isActive) {\n          weeklyGroups[day].push(assignment);\n        }\n      });\n    });\n    \n    return weeklyGroups;\n  };\n\n  // 특정 요일의 학습 가능 여부 판단\n  const canStudyOnDay = (dayIndex: number, assignment: TaskAssignment): boolean => {\n    if (!assignment.startDate || !assignment.weeklySchedule) return false;\n    \n    const startDate = new Date(assignment.startDate);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    startDate.setHours(0, 0, 0, 0);\n    \n    // 시작일 이전이면 학습 불가\n    if (today < startDate) return false;\n    \n    // 주간 스케줄에서 활성화된 요일만 카운트\n    const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n    let studyDayCount = 0;\n    let targetStudyDay = 0;\n    \n    // 시작일부터 오늘까지 학습일 수 계산\n    const currentDate = new Date(startDate);\n    while (currentDate <= today) {\n      const currentDayIndex = currentDate.getDay();\n      const currentDayName = dayNames[currentDayIndex];\n      \n      if (assignment.weeklySchedule[currentDayName]?.isActive) {\n        studyDayCount++;\n        \n        // 목표 요일의 학습일 번호 계산\n        if (currentDayIndex === dayIndex && currentDate.getTime() === today.getTime()) {\n          targetStudyDay = studyDayCount;\n        }\n      }\n      \n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    \n    // 이번 주의 특정 요일이 몇 번째 학습일인지 계산\n    const thisWeekStart = new Date(today);\n    thisWeekStart.setDate(today.getDate() - today.getDay()); // 이번 주 일요일\n    \n    let weekStudyDay = 0;\n    for (let i = 0; i < 7; i++) {\n      const checkDate = new Date(thisWeekStart);\n      checkDate.setDate(thisWeekStart.getDate() + i);\n      \n      if (checkDate >= startDate && assignment.weeklySchedule[dayNames[i]]?.isActive) {\n        weekStudyDay++;\n        \n        if (i === dayIndex) {\n          // 해당 요일이 전체 학습 진행에서 몇 번째인지\n          const totalStudyDays = Math.floor((checkDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));\n          let dayNumber = 0;\n          \n          for (let j = 0; j <= totalStudyDays; j++) {\n            const tempDate = new Date(startDate);\n            tempDate.setDate(startDate.getDate() + j);\n            const tempDayName = dayNames[tempDate.getDay()];\n            \n            if (assignment.weeklySchedule[tempDayName]?.isActive) {\n              dayNumber++;\n            }\n          }\n          \n          // 단원이 아직 남아있는지 확인\n          // 이 부분은 실제 단원 수와 비교해야 하지만, 일단 true 반환\n          return true;\n        }\n      }\n    }\n    \n    return false;\n  };\n\n  // 특정 날짜에 학습할 단원 계산\n  const getUnitForDate = (assignment: TaskAssignment, targetDate: Date): string | null => {\n    if (!assignment.startDate || !assignment.weeklySchedule || !assignment.vocabularyData) {\n      return null;\n    }\n    \n    const startDate = new Date(assignment.startDate);\n    startDate.setHours(0, 0, 0, 0);\n    targetDate.setHours(0, 0, 0, 0);\n    \n    // 시작일 이전이면 null\n    if (targetDate < startDate) return null;\n    \n    // 주간 스케줄에서 활성화된 요일만 카운트\n    const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n    let studyDayCount = 0;\n    \n    // 시작일부터 목표일까지 학습일 수 계산\n    const currentDate = new Date(startDate);\n    while (currentDate <= targetDate) {\n      const currentDayName = dayNames[currentDate.getDay()];\n      \n      if (assignment.weeklySchedule[currentDayName]?.isActive) {\n        studyDayCount++;\n        \n        if (currentDate.getTime() === targetDate.getTime()) {\n          // 단원 목록 추출\n          const unitOrder: string[] = [];\n          const unitSet = new Set<string>();\n          \n          assignment.vocabularyData.forEach((word: any) => {\n            if (!unitSet.has(word.unit)) {\n              unitSet.add(word.unit);\n              unitOrder.push(word.unit);\n            }\n          });\n          \n          // 시작 단원 인덱스 찾기\n          const startUnitIndex = assignment.startUnit ? unitOrder.indexOf(assignment.startUnit) : 0;\n          \n          if (startUnitIndex !== -1) {\n            const targetUnitIndex = startUnitIndex + (studyDayCount - 1);\n            \n            if (targetUnitIndex < unitOrder.length) {\n              return unitOrder[targetUnitIndex];\n            }\n          }\n          \n          return null;\n        }\n      }\n      \n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    \n    return null;\n  };\n\n  // 특정 날짜의 단원 진행 정보 가져오기\n  const getUnitProgressForDate = (assignment: TaskAssignment, targetDate: Date): { current: number; total: number; isCompleted: boolean } | null => {\n    if (!assignment.startDate || !assignment.weeklySchedule || !assignment.vocabularyData) {\n      return null;\n    }\n    \n    const startDate = new Date(assignment.startDate);\n    startDate.setHours(0, 0, 0, 0);\n    targetDate.setHours(0, 0, 0, 0);\n    \n    // 시작일 이전이면 null\n    if (targetDate < startDate) return null;\n    \n    // 단원 목록 추출\n    const unitOrder: string[] = [];\n    const unitSet = new Set<string>();\n    \n    assignment.vocabularyData.forEach((word: any) => {\n      if (!unitSet.has(word.unit)) {\n        unitSet.add(word.unit);\n        unitOrder.push(word.unit);\n      }\n    });\n    \n    const totalUnits = unitOrder.length;\n    const startUnitIndex = assignment.startUnit ? unitOrder.indexOf(assignment.startUnit) : 0;\n    \n    // 주간 스케줄에서 활성화된 요일만 카운트\n    const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n    let totalUnitsStudied = 0;\n    \n    // 시작일부터 목표일까지 학습한 총 단원 수 계산\n    const currentDate = new Date(startDate);\n    while (currentDate <= targetDate) {\n      const currentDayName = dayNames[currentDate.getDay()];\n      const daySchedule = assignment.weeklySchedule[currentDayName];\n      \n      if (daySchedule?.isActive) {\n        const dailyAmount = Number(daySchedule.dailyAmount) || 0;\n        \n        if (currentDate.getTime() === targetDate.getTime()) {\n          // 목표일의 시작 단원 번호 계산 (1부터 시작)\n          const currentStartUnit = startUnitIndex + totalUnitsStudied + 1;\n          \n          // 전체 단원을 완료했는지 확인\n          const isCompleted = currentStartUnit > totalUnits;\n          \n          return {\n            current: Math.min(currentStartUnit, totalUnits + 1),\n            total: totalUnits,\n            isCompleted\n          };\n        } else {\n          // 이전 날짜들의 학습량 누적\n          totalUnitsStudied += dailyAmount;\n        }\n      }\n      \n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    \n    return null;\n  };\n\n  // 과제가 이미 완료되었는지 확인\n  const isAssignmentCompleted = (assignment: TaskAssignment, targetDate: Date): boolean => {\n    if (!assignment.startDate || !assignment.weeklySchedule || !assignment.vocabularyData) {\n      return false;\n    }\n    \n    const startDate = new Date(assignment.startDate);\n    startDate.setHours(0, 0, 0, 0);\n    targetDate.setHours(0, 0, 0, 0);\n    \n    // 단원 목록 추출\n    const unitOrder: string[] = [];\n    const unitSet = new Set<string>();\n    \n    assignment.vocabularyData.forEach((word: any) => {\n      if (!unitSet.has(word.unit)) {\n        unitSet.add(word.unit);\n        unitOrder.push(word.unit);\n      }\n    });\n    \n    const totalUnits = unitOrder.length;\n    const startUnitIndex = assignment.startUnit ? unitOrder.indexOf(assignment.startUnit) : 0;\n    \n    // 주간 스케줄에서 활성화된 요일만 카운트\n    const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n    let studyDayCount = 0;\n    let completedDate: Date | null = null;\n    \n    // 시작일부터 목표일까지 학습일 수 계산\n    const currentDate = new Date(startDate);\n    while (currentDate <= targetDate) {\n      const currentDayName = dayNames[currentDate.getDay()];\n      \n      if (assignment.weeklySchedule[currentDayName]?.isActive) {\n        studyDayCount++;\n        const targetUnitIndex = startUnitIndex + (studyDayCount - 1);\n        \n        // 마지막 단원을 학습한 날짜 찾기\n        if (targetUnitIndex === totalUnits - 1) {\n          completedDate = new Date(currentDate);\n          break;\n        }\n      }\n      \n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    \n    // 완료 날짜가 있고, 목표일이 완료 날짜 이후이면 true\n    return completedDate !== null && targetDate > completedDate;\n  };\n\n  const getUpcomingAssignments = () => {\n    if (!student) return [];\n    \n    console.log('Getting upcoming assignments...');\n    \n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    \n    const assignments: { date: Date; dayName: string; assignments: (TaskAssignment & { targetUnit?: string })[] }[] = [];\n    \n    // 오늘부터 3일간의 과제 수집\n    for (let i = 0; i < 3; i++) {\n      const targetDate = new Date(today);\n      targetDate.setDate(today.getDate() + i);\n      \n      const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n      const dayName = dayNames[targetDate.getDay()];\n      \n      console.log(`Day ${i}: ${targetDate.toLocaleDateString()} (${dayName})`);\n      \n      // 해당 날짜에 활성화된 과제 필터링\n      const dayAssignments = student.taskAssignments.filter(assignment => {\n        // 활성 상태인지 확인\n        if (assignment.status !== 'active') return false;\n        \n        // 해당 요일의 스케줄이 활성화되어 있는지 확인\n        const daySchedule = assignment.weeklySchedule?.[dayName];\n        if (!daySchedule?.isActive) return false;\n        \n        // 시작일이 대상 날짜보다 늦으면 제외\n        const assignmentStartDate = new Date(assignment.startDate);\n        assignmentStartDate.setHours(0, 0, 0, 0);\n        if (assignmentStartDate > targetDate) return false;\n        \n        // 종료일이 있고 대상 날짜보다 이전이면 제외\n        if (assignment.endDate) {\n          const assignmentEndDate = new Date(assignment.endDate);\n          assignmentEndDate.setHours(0, 0, 0, 0);\n          if (assignmentEndDate < targetDate) return false;\n        }\n        \n        // 전체 학습이 완료된 과제는 제외\n        if (isAssignmentCompleted(assignment, targetDate)) return false;\n        \n        console.log(`  Including assignment: ${assignment.taskTitle} (taskId: ${assignment.taskId})`);\n        return true;\n      });\n      \n      // 각 과제를 단원별로 분리\n      const unitSeparatedAssignments: (TaskAssignment & { targetUnit?: string })[] = [];\n      \n      dayAssignments.forEach(assignment => {\n        const daySchedule = assignment.weeklySchedule?.[dayName];\n        const dailyAmount = Number(daySchedule?.dailyAmount) || 0;\n        \n        console.log(`  Processing assignment: ${assignment.taskTitle}, dailyAmount: ${dailyAmount}`);\n        \n        if (dailyAmount > 0 && assignment.vocabularyData) {\n          // 단원 목록 추출\n          const unitOrder: string[] = [];\n          const unitSet = new Set<string>();\n          \n          assignment.vocabularyData.forEach((word: any) => {\n            if (!unitSet.has(word.unit)) {\n              unitSet.add(word.unit);\n              unitOrder.push(word.unit);\n            }\n          });\n          \n          console.log(`    Units in order: ${unitOrder.join(', ')}`);\n          \n          // 학습 진도 계산\n          const progress = getUnitProgressForDate(assignment, targetDate);\n          if (progress) {\n            console.log(`    Progress: ${progress.current}/${progress.total}`);\n            \n            // 현재 단원 번호를 인덱스로 변환 (단원 번호는 1부터 시작, 인덱스는 0부터 시작)\n            const currentUnitIndex = progress.current - 1;\n            const endUnitIndex = Math.min(currentUnitIndex + dailyAmount, unitOrder.length);\n            \n            console.log(`    Creating cards for units ${currentUnitIndex} to ${endUnitIndex - 1}`);\n            \n            // 각 단원별로 별도의 카드 생성\n            for (let unitIndex = currentUnitIndex; unitIndex < endUnitIndex; unitIndex++) {\n              console.log(`      Creating card for unit: ${unitOrder[unitIndex]} (same taskId: ${assignment.taskId})`);\n              unitSeparatedAssignments.push({\n                ...assignment,\n                targetUnit: unitOrder[unitIndex]\n              });\n            }\n          }\n        } else {\n          // 단원 정보가 없으면 그대로 추가\n          unitSeparatedAssignments.push(assignment);\n        }\n      });\n      \n      if (unitSeparatedAssignments.length > 0 || i === 0) { // 오늘은 과제가 없어도 표시\n        assignments.push({\n          date: targetDate,\n          dayName: dayName,\n          assignments: unitSeparatedAssignments\n        });\n      }\n    }\n    \n    return assignments;\n  };\n\n  if (!student) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n        <Typography variant=\"h6\">학생 정보를 불러오는 중...</Typography>\n      </Box>\n    );\n  }\n\n  const todayAssignments = getTodayAssignments();\n  const activeAssignments = getActiveAssignments();\n  const viewAssignments = getAssignmentsByViewMode();\n\n  return (\n    <Box sx={{ pb: isMobile ? 8 : 0 }}>\n      {/* 모바일 앱바 */}\n      {isMobile && (\n        <AppBar position=\"sticky\" elevation={1}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={() => navigate('/students')}\n              sx={{ mr: 2 }}\n            >\n              <ArrowBackIcon />\n            </IconButton>\n            <Typography variant=\"h6\" sx={{ flex: 1 }}>\n              {student.name}\n            </Typography>\n            <Chip\n              label={getGradeText(student.grade)}\n              color={getGradeColor(student.grade) as any}\n              size=\"small\"\n            />\n          </Toolbar>\n        </AppBar>\n      )}\n\n      <Container maxWidth=\"lg\" sx={{ px: isMobile ? 2 : 3, py: isMobile ? 2 : 3 }}>\n        {/* 데스크톱 학생 정보 헤더 */}\n        {!isMobile && (\n          <Box sx={{ mb: 4 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n              <Avatar sx={{ mr: 2, width: 64, height: 64 }}>\n                {student.name.charAt(0)}\n              </Avatar>\n              <Box>\n                <Typography variant=\"h4\" component=\"h1\">\n                  {student.name}\n                </Typography>\n                <Box sx={{ display: 'flex', gap: 1, mt: 1 }}>\n                  <Chip\n                    label={getGradeText(student.grade)}\n                    color={getGradeColor(student.grade) as any}\n                    size=\"small\"\n                  />\n                  <Chip\n                    label={student.status === 'active' ? '활성' : '비활성'}\n                    color={student.status === 'active' ? 'success' : 'error'}\n                    size=\"small\"\n                  />\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        )}\n\n        {/* 모바일 학생 정보 카드 */}\n        {isMobile && (\n          <Card sx={{ mb: 3, borderRadius: 2 }}>\n            <CardContent sx={{ p: 3 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <Avatar sx={{ mr: 2, width: 48, height: 48 }}>\n                  {student.name.charAt(0)}\n                </Avatar>\n                <Box sx={{ flex: 1 }}>\n                  <Typography variant=\"h6\">\n                    {student.name}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {student.address}\n                  </Typography>\n                </Box>\n              </Box>\n              \n              <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\n                <Chip\n                  label={getGradeText(student.grade)}\n                  color={getGradeColor(student.grade) as any}\n                  size=\"small\"\n                />\n                <Chip\n                  label={student.status === 'active' ? '활성' : '비활성'}\n                  color={student.status === 'active' ? 'success' : 'error'}\n                  size=\"small\"\n                />\n              </Box>\n\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Box>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    연락처: {student.phone}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    가입일: {student.joinDate}\n                  </Typography>\n                </Box>\n                <Box sx={{ textAlign: 'right' }}>\n                  <Typography variant=\"h6\" color=\"primary\">\n                    {student.taskAssignments.length}\n                  </Typography>\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    배정된 과제\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* 탭 네비게이션 */}\n        <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n          <Tabs \n            value={tabValue} \n            onChange={handleTabChange}\n            variant={isMobile ? \"fullWidth\" : \"standard\"}\n            sx={{\n              '& .MuiTab-root': {\n                minHeight: isMobile ? 56 : 48,\n                fontSize: isMobile ? '0.875rem' : '1rem',\n              }\n            }}\n          >\n            <Tab \n              icon={<TodayIcon />} \n              label=\"오늘의 과제\" \n              iconPosition=\"start\"\n              sx={{ \n                '& .MuiTab-iconWrapper': { mr: 1 },\n                '& .MuiTab-labelIcon': { flexDirection: 'row' }\n              }}\n            />\n            <Tab \n              icon={<ViewModuleIcon />} \n              label=\"과제 현황\" \n              iconPosition=\"start\"\n              sx={{ \n                '& .MuiTab-iconWrapper': { mr: 1 },\n                '& .MuiTab-labelIcon': { flexDirection: 'row' }\n              }}\n            />\n            <Tab \n              icon={<SettingsIcon />} \n              label=\"설정\" \n              iconPosition=\"start\"\n              sx={{ \n                '& .MuiTab-iconWrapper': { mr: 1 },\n                '& .MuiTab-labelIcon': { flexDirection: 'row' }\n              }}\n            />\n          </Tabs>\n        </Box>\n\n        {/* 오늘의 과제 탭 */}\n        <TabPanel value={tabValue} index={0}>\n          <Box sx={{ mb: 3 }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2, flexWrap: 'wrap', gap: 2 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, flexWrap: 'wrap' }}>\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                  <TodayIcon sx={{ mr: 1, color: 'primary.main' }} />\n                  <Typography variant={isMobile ? \"h6\" : \"h5\"} sx={{ fontWeight: 600 }}>\n                    {getViewTitle()} ({viewAssignments.length}개)\n                  </Typography>\n                </Box>\n                {viewMode === 'week' && (\n                  <Box sx={{ \n                    display: 'flex', \n                    alignItems: 'center',\n                    ml: isMobile ? 0 : 2,\n                    mt: isMobile ? 1 : 0\n                  }}>\n                    <IconButton \n                      onClick={() => setWeekOffset(weekOffset - 1)}\n                      size=\"small\"\n                      sx={{ border: '1px solid', borderColor: 'divider' }}\n                    >\n                      <NavigateBeforeIcon />\n                    </IconButton>\n                    <Button\n                      size=\"small\"\n                      onClick={() => setWeekOffset(0)}\n                      disabled={weekOffset === 0}\n                      sx={{ mx: 1, minWidth: 'auto' }}\n                    >\n                      이번 주\n                    </Button>\n                    <IconButton \n                      onClick={() => setWeekOffset(weekOffset + 1)}\n                      size=\"small\"\n                      sx={{ border: '1px solid', borderColor: 'divider' }}\n                    >\n                      <NavigateNextIcon />\n                    </IconButton>\n                  </Box>\n                )}\n                {viewMode === 'month' && (\n                  <Box sx={{ \n                    display: 'flex', \n                    alignItems: 'center',\n                    ml: isMobile ? 0 : 2,\n                    mt: isMobile ? 1 : 0\n                  }}>\n                    <IconButton \n                      onClick={() => setMonthOffset(monthOffset - 1)}\n                      size=\"small\"\n                      sx={{ border: '1px solid', borderColor: 'divider' }}\n                    >\n                      <NavigateBeforeIcon />\n                    </IconButton>\n                    <Button\n                      size=\"small\"\n                      onClick={() => setMonthOffset(0)}\n                      disabled={monthOffset === 0}\n                      sx={{ mx: 1, minWidth: 'auto' }}\n                    >\n                      이번 달\n                    </Button>\n                    <IconButton \n                      onClick={() => setMonthOffset(monthOffset + 1)}\n                      size=\"small\"\n                      sx={{ border: '1px solid', borderColor: 'divider' }}\n                    >\n                      <NavigateNextIcon />\n                    </IconButton>\n                  </Box>\n                )}\n              </Box>\n              \n              <ToggleButtonGroup\n                value={viewMode}\n                exclusive\n                onChange={(event, newMode) => {\n                  if (newMode !== null) {\n                    setViewMode(newMode);\n                    setWeekOffset(0); // 모드 변경 시 주차 초기화\n                    setMonthOffset(0); // 모드 변경 시 월 초기화\n                  }\n                }}\n                size={isMobile ? \"small\" : \"medium\"}\n              >\n                <ToggleButton value=\"today\">\n                  <TodayIcon sx={{ mr: 0.5 }} />\n                  오늘\n                </ToggleButton>\n                <ToggleButton value=\"week\">\n                  <DateRangeIcon sx={{ mr: 0.5 }} />\n                  주간\n                </ToggleButton>\n                <ToggleButton value=\"month\">\n                  <CalendarMonthIcon sx={{ mr: 0.5 }} />\n                  월간\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </Box>\n            \n            {viewAssignments.length > 0 ? (\n              viewMode === 'week' ? (\n                // 주간 보기: 요일별로 그룹화\n                <Box>\n                  {(() => {\n                    const weeklyGroups = getWeeklyGroupedAssignments();\n                    const dayNamesKorean = ['일', '월', '화', '수', '목', '금', '토'];\n                    const dayNamesDisplay = ['월', '화', '수', '목', '금', '토', '일'];\n                    const today = new Date().getDay();\n                    const todayIndex = today === 0 ? 6 : today - 1; // 일요일을 마지막으로\n                    \n                    // 요일 인덱스를 실제 요일 번호로 변환 (월=1, 화=2, ..., 일=0)\n                    const dayIndexToWeekday = (index: number) => {\n                      return index === 6 ? 0 : index + 1;\n                    };\n                    \n                    return (\n                      <Grid container spacing={2}>\n                        {dayNamesDisplay.map((day, index) => {\n                          const koreanDay = dayNamesKorean[dayIndexToWeekday(index)];\n                          const assignments = weeklyGroups?.[koreanDay] || [];\n                          const isToday = index === todayIndex;\n                          const weekdayNumber = dayIndexToWeekday(index);\n                          \n                          // 이번 주의 해당 요일 날짜 계산\n                          const thisWeekDate = new Date();\n                          const currentDay = thisWeekDate.getDay();\n                          const diff = weekdayNumber - currentDay;\n                          thisWeekDate.setDate(thisWeekDate.getDate() + diff + (weekOffset * 7));\n                          thisWeekDate.setHours(0, 0, 0, 0);\n                          \n                          const todayDate = new Date();\n                          todayDate.setHours(0, 0, 0, 0);\n                          \n                          // 오늘보다 과거인지 확인\n                          const isPast = thisWeekDate < todayDate;\n                          \n                          // 오늘인지 확인 (weekOffset이 0일 때만)\n                          const isRealToday = weekOffset === 0 && isToday;\n                          \n                          // 완료된 이후의 과제는 필터링\n                          const activeAssignments = assignments.filter(assignment => \n                            !isAssignmentCompleted(assignment, thisWeekDate)\n                          );\n                          \n                          return (\n                            <Grid item xs={12} sm={6} md key={day}>\n                              <Box sx={{ \n                                height: '100%',\n                                border: isRealToday ? '2px solid' : '1px solid',\n                                borderColor: isRealToday ? 'primary.main' : isPast ? 'grey.400' : 'grey.300',\n                                borderRadius: 2,\n                                p: 2,\n                                bgcolor: isRealToday ? 'primary.50' : isPast ? 'grey.50' : 'background.paper',\n                                opacity: isPast ? 0.7 : 1\n                              }}>\n                                <Box sx={{ \n                                  display: 'flex', \n                                  alignItems: 'center', \n                                  mb: 2,\n                                  pb: 1,\n                                  borderBottom: '1px solid',\n                                  borderColor: 'divider'\n                                }}>\n                                  <Typography \n                                    variant=\"subtitle1\" \n                                    sx={{ \n                                      fontWeight: isRealToday ? 700 : 600,\n                                      color: isRealToday ? 'primary.main' : isPast ? 'text.disabled' : 'text.primary'\n                                    }}\n                                  >\n                                    {day}\n                                  </Typography>\n                                  {isRealToday && (\n                                    <Chip \n                                      label=\"오늘\" \n                                      size=\"small\" \n                                      color=\"primary\" \n                                      sx={{ ml: 1 }}\n                                    />\n                                  )}\n                                  {isPast && (\n                                    <Chip \n                                      label=\"지남\" \n                                      size=\"small\" \n                                      color=\"default\" \n                                      sx={{ ml: 1 }}\n                                    />\n                                  )}\n                                  <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 'auto' }}>\n                                    {activeAssignments.length}개\n                                  </Typography>\n                                </Box>\n                                \n                                <Box sx={{ \n                                  maxHeight: 400, \n                                  overflowY: 'auto',\n                                  '&::-webkit-scrollbar': {\n                                    width: '8px',\n                                  },\n                                  '&::-webkit-scrollbar-track': {\n                                    background: '#f1f1f1',\n                                    borderRadius: '4px',\n                                  },\n                                  '&::-webkit-scrollbar-thumb': {\n                                    background: '#888',\n                                    borderRadius: '4px',\n                                  },\n                                  '&::-webkit-scrollbar-thumb:hover': {\n                                    background: '#555',\n                                  },\n                                }}>\n                                  {activeAssignments.length > 0 ? (\n                                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0 }}>\n                                      {activeAssignments.map((assignment, idx) => (\n                                                                                <Box \n                                          key={`${day}-${idx}`}\n                                          sx={{ \n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            gap: 1,\n                                            borderBottom: idx < activeAssignments.length - 1 ? '1px solid' : 'none',\n                                            borderColor: 'divider',\n                                            py: 0.5,\n                                            px: 1,\n                                            '&:hover': {\n                                              bgcolor: isPast ? 'transparent' : 'action.hover',\n                                            }\n                                          }}\n                                        >\n                                            {/* 상태 표시 원 */}\n                                            <Box\n                                              sx={{\n                                                width: 10,\n                                                height: 10,\n                                                borderRadius: '50%',\n                                                border: '1px solid rgba(0,0,0,0.1)',\n                                                bgcolor: (() => {\n                                                  const todayDate = new Date();\n                                                  todayDate.setHours(0, 0, 0, 0);\n                                                  \n                                                  // 미래 날짜는 노란색 (수행전)\n                                                  if (thisWeekDate > todayDate) {\n                                                    return '#FFD700'; // 진한 노란색\n                                                  }\n                                                  \n                                                  // 오늘이거나 과거 날짜인 경우\n                                                  const taskHistory = student?.learningHistory?.filter(\n                                                    h => {\n                                                      if (h.taskId !== assignment.taskId) return false;\n                                                      const historyDate = new Date(h.date);\n                                                      historyDate.setHours(0, 0, 0, 0);\n                                                      return historyDate.getTime() === thisWeekDate.getTime();\n                                                    }\n                                                  ) || [];\n                                                  \n                                                  // 학습 기록이 있으면 파란색 (수행완료)\n                                                  if (taskHistory.length > 0) {\n                                                    return '#2196F3'; // 파란색\n                                                  }\n                                                  \n                                                  // 학습 기록이 없으면 빨간색 (미수행)\n                                                  return '#F44336'; // 빨간색\n                                                })(),\n                                                flexShrink: 0\n                                              }}\n                                            />\n                                            \n                                            {/* 과제 정보 한 줄 표시 */}\n                                            <Typography \n                                              variant=\"caption\" \n                                              sx={{ \n                                                color: isPast ? 'text.disabled' : 'text.primary',\n                                                fontSize: '0.75rem',\n                                                overflow: 'hidden',\n                                                textOverflow: 'ellipsis',\n                                                whiteSpace: 'nowrap',\n                                                flex: 1\n                                              }}\n                                            >\n                                              {assignment.taskTitle} / {assignment.weeklySchedule?.[koreanDay]?.dailyAmount || '0'}개\n                                            </Typography>\n                                        </Box>\n                                      ))}\n                                    </Box>\n                                  ) : (\n                                    <Box sx={{ \n                                      display: 'flex', \n                                      alignItems: 'center', \n                                      justifyContent: 'center',\n                                      height: 100,\n                                      color: 'text.secondary'\n                                    }}>\n                                      <Typography variant=\"caption\">\n                                        과제 없음\n                                      </Typography>\n                                    </Box>\n                                  )}\n                                </Box>\n                              </Box>\n                            </Grid>\n                          );\n                        })}\n                      </Grid>\n                    );\n                  })()}\n                </Box>\n              ) : viewMode === 'month' ? (\n                // 월간 보기: 캘린더 형태\n                <Box>\n                  <TableContainer component={Paper} sx={{ mb: 2 }}>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          {['월', '화', '수', '목', '금', '토', '일'].map((day) => (\n                            <TableCell key={day} align=\"center\" sx={{ fontWeight: 600, width: '14.28%' }}>\n                              {day}\n                            </TableCell>\n                          ))}\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {getMonthCalendarData().map((week, weekIndex) => (\n                          <TableRow key={weekIndex}>\n                            {week.map((date, dayIndex) => {\n                              if (!date) {\n                                return <TableCell key={dayIndex} sx={{ height: 120, bgcolor: 'grey.50' }} />;\n                              }\n                              \n                              const dateString = date.toISOString().split('T')[0];\n                              const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n                              const dayName = dayNames[date.getDay()];\n                              \n                              // 현재 실제 오늘 날짜 (monthOffset과 관계없이)\n                              const actualToday = new Date();\n                              actualToday.setHours(0, 0, 0, 0);\n                              \n                              const isToday = date.getTime() === actualToday.getTime() && monthOffset === 0;\n                              const isPast = date < actualToday;\n                              \n                              // 해당 날짜에 활성화된 과제 찾기 (전체 학습 완료된 과제만 제외)\n                              const dayAssignments = (() => {\n                                // viewAssignments에서 시작 (이미 활성 과제만 필터링됨)\n                                const baseAssignments = viewAssignments.filter(assignment => {\n                                  // 시작일이 현재 날짜보다 늦으면 제외\n                                  const assignmentStartDate = new Date(assignment.startDate);\n                                  if (assignmentStartDate > date) return false;\n                                  \n                                  // 종료일이 있고 현재 날짜보다 이전이면 제외\n                                  if (assignment.endDate) {\n                                    const assignmentEndDate = new Date(assignment.endDate);\n                                    if (assignmentEndDate < date) return false;\n                                  }\n                                  \n                                  // 전체 학습이 완료된 과제만 제외 (주간 일정과 동일한 로직)\n                                  if (isAssignmentCompleted(assignment, date)) return false;\n                                  \n                                  return true;\n                                });\n                                \n                                // 오늘인 경우에도 요일별 스케줄 확인 (주간 일정과 동일하게)\n                                // 오늘이 아닌 날짜와 동일한 로직 적용\n                                return baseAssignments.filter(assignment => \n                                  assignment.weeklySchedule?.[dayName]?.isActive\n                                );\n                              })();\n                              \n                              return (\n                                <TableCell \n                                  key={dayIndex} \n                                  sx={{ \n                                    height: 120, \n                                    verticalAlign: 'top',\n                                    p: 1,\n                                    bgcolor: isToday ? 'primary.50' : isPast ? 'grey.50' : 'background.paper',\n                                    border: isToday ? '2px solid' : '1px solid',\n                                    borderColor: isToday ? 'primary.main' : 'divider',\n                                    position: 'relative',\n                                    cursor: dayAssignments.length > 0 ? 'pointer' : 'default',\n                                    '&:hover': {\n                                      bgcolor: dayAssignments.length > 0 \n                                        ? (isToday ? 'primary.100' : isPast ? 'grey.100' : 'grey.50')\n                                        : undefined\n                                    }\n                                  }}\n                                >\n                                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                                    <Typography \n                                      variant=\"body2\" \n                                      sx={{ \n                                        fontWeight: isToday ? 700 : 500,\n                                        color: isToday ? 'primary.main' : isPast ? 'text.disabled' : 'text.primary'\n                                      }}\n                                    >\n                                      {date.getDate()}\n                                    </Typography>\n                                    {dayAssignments.length > 0 && (\n                                      <Chip \n                                        label={dayAssignments.length} \n                                        size=\"small\" \n                                        color={isPast ? 'default' : 'primary'}\n                                        sx={{ height: 20, fontSize: '0.75rem' }}\n                                      />\n                                    )}\n                                  </Box>\n                                  \n                                  <Box sx={{ \n                                    display: 'flex', \n                                    flexDirection: 'column', \n                                    gap: 0.5,\n                                    overflow: 'hidden'\n                                  }}>\n                                    {dayAssignments.slice(0, 3).map((assignment, idx) => (\n                                      <Box\n                                        key={idx}\n                                        sx={{\n                                          display: 'flex',\n                                          alignItems: 'center',\n                                          gap: 0.5,\n                                          py: 0.25,\n                                          borderBottom: idx < Math.min(dayAssignments.length - 1, 2) ? '1px solid' : 'none',\n                                          borderColor: 'divider',\n                                        }}\n                                      >\n                                        {/* 상태 표시 원 */}\n                                        <Box\n                                          sx={{\n                                            width: 6,\n                                            height: 6,\n                                            borderRadius: '50%',\n                                            border: '1px solid rgba(0,0,0,0.1)',\n                                            bgcolor: (() => {\n                                              const todayDate = new Date();\n                                              todayDate.setHours(0, 0, 0, 0);\n                                              \n                                              // 미래 날짜는 노란색 (수행전)\n                                              if (date > todayDate) {\n                                                return '#FFD700'; // 진한 노란색\n                                              }\n                                              \n                                              // 오늘이거나 과거 날짜인 경우\n                                              const taskHistory = student?.learningHistory?.filter(\n                                                h => {\n                                                  if (h.taskId !== assignment.taskId) return false;\n                                                  const historyDate = new Date(h.date);\n                                                  historyDate.setHours(0, 0, 0, 0);\n                                                  return historyDate.getTime() === date.getTime();\n                                                }\n                                              ) || [];\n                                              \n                                              // 학습 기록이 있으면 파란색 (수행완료)\n                                              if (taskHistory.length > 0) {\n                                                return '#2196F3'; // 파란색\n                                              }\n                                              \n                                              // 학습 기록이 없으면 빨간색 (미수행)\n                                              return '#F44336'; // 빨간색\n                                            })(),\n                                            flexShrink: 0\n                                          }}\n                                        />\n                                        \n                                        {/* 과제 정보 한 줄 표시 */}\n                                        <Typography \n                                          variant=\"caption\" \n                                          sx={{ \n                                            fontSize: '0.65rem',\n                                            overflow: 'hidden',\n                                            textOverflow: 'ellipsis',\n                                            whiteSpace: 'nowrap',\n                                            color: isPast ? 'text.disabled' : 'text.primary',\n                                            flex: 1\n                                          }}\n                                        >\n                                          {assignment.taskTitle} / {assignment.weeklySchedule?.[dayName]?.dailyAmount || '0'}개\n                                        </Typography>\n                                      </Box>\n                                    ))}\n                                    {dayAssignments.length > 3 && (\n                                      <Typography \n                                        variant=\"caption\" \n                                        sx={{ \n                                          fontSize: '0.65rem', \n                                          color: 'text.secondary',\n                                          textAlign: 'center',\n                                          display: 'block',\n                                          mt: 0.5\n                                        }}\n                                      >\n                                        +{dayAssignments.length - 3}개 더\n                                      </Typography>\n                                    )}\n                                  </Box>\n                                </TableCell>\n                              );\n                            })}\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </Box>\n              ) : (\n                // 오늘의 과제 보기: 3일간의 과제 표시\n                viewMode === 'today' ? (\n                  <Box>\n                    {(() => {\n                      // 더미 데이터인지 확인\n                      const isDummy = viewAssignments.length === 1 && viewAssignments[0].taskId === 'dummy';\n                      const upcomingDays = getUpcomingAssignments();\n                      \n                      // 모든 영역 추출\n                      const areas = new Set<string>();\n                      upcomingDays.forEach(dayData => {\n                        dayData.assignments.forEach(assignment => {\n                          if (assignment.area) {\n                            areas.add(assignment.area);\n                          }\n                        });\n                      });\n                      \n                      // 영역별로 필터링된 과제\n                      const filteredUpcomingDays = upcomingDays.map(dayData => ({\n                        ...dayData,\n                        assignments: selectedArea === 'all' \n                          ? dayData.assignments \n                          : dayData.assignments.filter(assignment => assignment.area === selectedArea)\n                      }));\n                      \n                      return (\n                        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\n                          {/* 영역별 탭 */}\n                          {areas.size > 0 && (\n                            <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 1 }}>\n                              <ToggleButtonGroup\n                                value={selectedArea}\n                                exclusive\n                                onChange={(event, newArea) => {\n                                  if (newArea !== null) {\n                                    setSelectedArea(newArea);\n                                  }\n                                }}\n                                aria-label=\"area filter\"\n                                size=\"small\"\n                              >\n                                <ToggleButton value=\"all\" aria-label=\"all areas\">\n                                  전체\n                                </ToggleButton>\n                                {Array.from(areas).map(area => (\n                                  <ToggleButton key={area} value={area} aria-label={area}>\n                                    {getAreaText(area)}\n                                  </ToggleButton>\n                                ))}\n                              </ToggleButtonGroup>\n                            </Box>\n                          )}\n                          \n                          {filteredUpcomingDays.map((dayData, dayIndex) => {\n                            const dateLabel = dayIndex === 0 ? '오늘' : \n                                            dayIndex === 1 ? '내일' : '모레';\n                            const dateString = `${dayData.date.getMonth() + 1}월 ${dayData.date.getDate()}일 (${dayData.dayName})`;\n                            \n                            return (\n                              <Box key={dayIndex}>\n                                <Typography \n                                  variant=\"h6\" \n                                  sx={{ \n                                    mb: 2, \n                                    fontWeight: 600,\n                                    color: dayIndex === 0 ? 'primary.main' : 'text.primary'\n                                  }}\n                                >\n                                  {dateLabel} - {dateString}\n                                </Typography>\n                                \n                                {dayData.assignments.length > 0 ? (\n                                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                                    {dayData.assignments.map((assignment, idx) => (\n                                      <Box\n                                        key={idx}\n                                        sx={{\n                                          display: 'flex',\n                                          alignItems: 'center',\n                                          gap: 2,\n                                          p: 2,\n                                          border: '1px solid',\n                                          borderColor: dayIndex === 0 ? 'primary.light' : 'grey.300',\n                                          borderRadius: 1,\n                                          bgcolor: 'background.paper',\n                                          '&:hover': {\n                                            bgcolor: 'grey.50',\n                                          }\n                                        }}\n                                      >\n                                        {/* 상태 표시 원 */}\n                                        <Box\n                                          sx={{\n                                            width: 12,\n                                            height: 12,\n                                            borderRadius: '50%',\n                                            border: '1px solid rgba(0,0,0,0.1)',\n                                            bgcolor: (() => {\n                                              const todayDate = new Date();\n                                              todayDate.setHours(0, 0, 0, 0);\n                                              \n                                              // 미래 날짜는 노란색 (수행전)\n                                              if (dayData.date > todayDate) {\n                                                return '#FFD700';\n                                              }\n                                              \n                                              // 오늘이거나 과거 날짜인 경우\n                                              const taskHistory = student?.learningHistory?.filter(\n                                                h => {\n                                                  if (h.taskId !== assignment.taskId) return false;\n                                                  const historyDate = new Date(h.date);\n                                                  historyDate.setHours(0, 0, 0, 0);\n                                                  return historyDate.getTime() === dayData.date.getTime();\n                                                }\n                                              ) || [];\n                                              \n                                              // 학습 기록이 있으면 파란색 (수행완료)\n                                              if (taskHistory.length > 0) {\n                                                return '#2196F3';\n                                              }\n                                              \n                                              // 학습 기록이 없으면 빨간색 (미수행)\n                                              return '#F44336';\n                                            })(),\n                                            flexShrink: 0\n                                          }}\n                                        />\n                                        \n                                        {/* 과제 정보 */}\n                                        <Box sx={{ flex: 1 }}>\n                                          <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\n                                            {assignment.taskTitle}\n                                            {assignment.targetUnit && (\n                                              <Typography component=\"span\" variant=\"body2\" color=\"text.secondary\" sx={{ ml: 1 }}>\n                                                ({assignment.targetUnit})\n                                              </Typography>\n                                            )}\n                                          </Typography>\n                                          <Typography variant=\"caption\" color=\"text.secondary\">\n                                            학습량 {assignment.weeklySchedule?.[['일', '월', '화', '수', '목', '금', '토'][dayData.date.getDay()]]?.dailyAmount || '0'}개 · \n                                            진도 {(() => {\n                                              if (assignment.targetUnit) {\n                                                const unitOrder: string[] = [];\n                                                const unitSet = new Set<string>();\n                                                \n                                                if (assignment.vocabularyData) {\n                                                  assignment.vocabularyData.forEach((word: any) => {\n                                                    if (!unitSet.has(word.unit)) {\n                                                      unitSet.add(word.unit);\n                                                      unitOrder.push(word.unit);\n                                                    }\n                                                  });\n                                                }\n                                                \n                                                const startUnitIndex = assignment.startUnit ? unitOrder.indexOf(assignment.startUnit) : 0;\n                                                const targetUnitIndex = unitOrder.indexOf(assignment.targetUnit);\n                                                const unitNumber = targetUnitIndex - startUnitIndex + 1;\n                                                \n                                                return `${unitNumber}/${unitOrder.length - startUnitIndex}`;\n                                              }\n                                              \n                                              const unitProgress = getUnitProgressForDate(assignment, dayData.date);\n                                              if (unitProgress) {\n                                                return `${unitProgress.current}/${unitProgress.total}`;\n                                              }\n                                              \n                                              return `0/${assignment.progress.total}`;\n                                            })()} · \n                                            학습 {(() => {\n                                              const targetDateString = dayData.date.toISOString().split('T')[0];\n                                              console.log(`Checking learning history for ${assignment.taskTitle} (${assignment.taskId}) unit: ${assignment.targetUnit} on date ${targetDateString}`);\n                                              \n                                              const taskHistory = student?.learningHistory?.filter(\n                                                h => {\n                                                  if (h.taskId !== assignment.taskId) {\n                                                    console.log(`Skipping history item with different taskId: ${h.taskId} !== ${assignment.taskId}`);\n                                                    return false;\n                                                  }\n                                                  \n                                                  // targetUnit이 있으면 단원도 비교\n                                                  if (assignment.targetUnit && (h as any).targetUnit !== assignment.targetUnit) {\n                                                    console.log(`Skipping history item with different unit: ${(h as any).targetUnit} !== ${assignment.targetUnit}`);\n                                                    return false;\n                                                  }\n                                                  \n                                                  const historyDate = new Date(h.date);\n                                                  historyDate.setHours(0, 0, 0, 0);\n                                                  const historyDateString = historyDate.toISOString().split('T')[0];\n                                                  const matches = historyDateString === targetDateString;\n                                                  console.log(`History item for ${h.taskTitle} (${h.taskId}) unit: ${(h as any).targetUnit}: date=${historyDateString}, matches=${matches}`);\n                                                  return matches;\n                                                }\n                                              ) || [];\n                                              \n                                              console.log(`Found ${taskHistory.length} learning records for ${assignment.taskTitle} unit: ${assignment.targetUnit} on ${targetDateString}`);\n                                              \n                                              return `${taskHistory.length}회`;\n                                            })()}\n                                          </Typography>\n                                        </Box>\n                                        \n                                        {/* 액션 버튼 */}\n                                        <Box sx={{ display: 'flex', gap: 1 }}>\n                                          <Button\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            onClick={() => handleStartVocabularyLearning(assignment, dayData.date)}\n                                          >\n                                            학습\n                                          </Button>\n                                          <Button\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            onClick={() => handleStartEvaluation(assignment, dayData.date)}\n                                          >\n                                            평가\n                                          </Button>\n                                        </Box>\n                                      </Box>\n                                    ))}\n                                  </Box>\n                                ) : (\n                                  <Card sx={{ borderRadius: isMobile ? 2 : 1, textAlign: 'center', bgcolor: 'grey.50' }}>\n                                    <CardContent sx={{ py: 3 }}>\n                                      <Typography variant=\"body1\" color=\"text.secondary\">\n                                        {dateLabel} 과제가 없습니다\n                                      </Typography>\n                                    </CardContent>\n                                  </Card>\n                                )}\n                              </Box>\n                            );\n                          })}\n                        </Box>\n                      );\n                    })()}\n                  </Box>\n                ) : (\n                  // 기존 월간 보기\n                  <Grid container spacing={isMobile ? 2 : 3}>\n                    {viewAssignments.map((assignment, index) => (\n                      <Grid item xs={12} key={index}>\n                        <Card \n                          sx={{ \n                            borderRadius: isMobile ? 2 : 1,\n                            border: '2px solid',\n                            borderColor: 'primary.main',\n                            backgroundColor: 'primary.50',\n                            '&:hover': { \n                              boxShadow: 3,\n                              transform: 'translateY(-2px)',\n                              transition: 'all 0.2s ease-in-out'\n                            }\n                          }}\n                        >\n                          <CardContent sx={{ p: isMobile ? 3 : 2 }}>\n                            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>\n                              <Box sx={{ flex: 1 }}>\n                                <Typography variant=\"h6\" sx={{ mb: 1, fontWeight: 600 }}>\n                                  {assignment.taskTitle}\n                                </Typography>\n                                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                                  <AssignmentIcon sx={{ fontSize: 16, mr: 0.5, color: 'primary.main' }} />\n                                  <Typography variant=\"body2\" color=\"primary\" sx={{ fontWeight: 500 }}>\n                                    {getAreaText(assignment.area)} 영역\n                                  </Typography>\n                                </Box>\n                              </Box>\n                              <Chip\n                                label={getChipLabel(viewMode)}\n                                color=\"primary\"\n                                size=\"small\"\n                                sx={{ fontWeight: 600 }}\n                              />\n                            </Box>\n\n                            {/* 학습 진도 */}\n                            <Box sx={{ mb: 3 }}>\n                              <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                                <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                                  학습 진도\n                                </Typography>\n                                <Typography variant=\"h6\" color=\"primary\" sx={{ fontWeight: 600 }}>\n                                  {(() => {\n                                    const today = new Date();\n                                    const unitProgress = getUnitProgressForDate(assignment, today);\n                                    if (unitProgress) {\n                                      return `${unitProgress.current}/${unitProgress.total}`;\n                                    }\n                                    // 단원 목록 추출\n                                    const unitOrder: string[] = [];\n                                    const unitSet = new Set<string>();\n                                    \n                                    if (assignment.vocabularyData) {\n                                      assignment.vocabularyData.forEach((word: any) => {\n                                        if (!unitSet.has(word.unit)) {\n                                          unitSet.add(word.unit);\n                                          unitOrder.push(word.unit);\n                                        }\n                                      });\n                                    }\n                                    \n                                    return `0/${unitOrder.length || assignment.progress.total}`;\n                                  })()}\n                                </Typography>\n                              </Box>\n                              <LinearProgress\n                                variant=\"determinate\"\n                                value={(() => {\n                                  const today = new Date();\n                                  const unitProgress = getUnitProgressForDate(assignment, today);\n                                  if (unitProgress) {\n                                    return (unitProgress.current / unitProgress.total) * 100;\n                                  }\n                                  return 0;\n                                })()}\n                                sx={{ \n                                  height: 8, \n                                  borderRadius: 4,\n                                  backgroundColor: 'grey.200',\n                                  '& .MuiLinearProgress-bar': {\n                                    borderRadius: 4,\n                                  }\n                                }}\n                              />\n                              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 0.5, display: 'block' }}>\n                                {(() => {\n                                  const today = new Date();\n                                  const unit = getUnitForDate(assignment, today);\n                                  if (unit) {\n                                    return `오늘 학습 단원: ${unit}`;\n                                  }\n                                  const dayName = ['일', '월', '화', '수', '목', '금', '토'][today.getDay()];\n                                  const todaySchedule = assignment.weeklySchedule?.[dayName];\n                                  if (!todaySchedule || !todaySchedule.isActive) {\n                                    return '오늘은 학습 예정일이 아닙니다';\n                                  }\n                                  return '오늘 학습 예정';\n                                })()}\n                              </Typography>\n                            </Box>\n\n                            {/* 학습 회차 표시 */}\n                            <Box sx={{ mb: 2 }}>\n                              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mb: 0.5 }}>\n                                학습 이력:\n                              </Typography>\n                              <Box sx={{ display: 'flex', gap: 0.5, flexWrap: 'wrap' }}>\n                                {(() => {\n                                  // 오늘 날짜의 학습 이력만 필터링\n                                  const today = new Date();\n                                  today.setHours(0, 0, 0, 0);\n                                  const todayString = today.toISOString().split('T')[0];\n                                  \n                                  console.log('Checking learning history for assignment:', assignment.taskTitle, 'taskId:', assignment.taskId);\n                                  console.log('Today string:', todayString);\n                                  \n                                  const taskHistory = student?.learningHistory?.filter(\n                                    h => {\n                                      if (h.taskId !== assignment.taskId) return false;\n                                      \n                                      // 학습 날짜가 오늘인지 확인\n                                      const historyDate = new Date(h.date);\n                                      historyDate.setHours(0, 0, 0, 0);\n                                      const historyDateString = historyDate.toISOString().split('T')[0];\n                                      \n                                      const matches = historyDateString === todayString;\n                                      console.log('History item:', h.taskId, 'date:', historyDateString, 'matches today:', matches);\n                                      \n                                      return matches;\n                                    }\n                                  ) || [];\n                                  \n                                  console.log('Task history for', assignment.taskTitle, ':', taskHistory.length, 'items');\n                                  \n                                  if (taskHistory.length === 0) {\n                                    return (\n                                      <Chip \n                                        label=\"오늘 미학습\" \n                                        size=\"small\" \n                                        variant=\"outlined\"\n                                        color=\"default\"\n                                        sx={{ height: 20, fontSize: '0.75rem' }}\n                                      />\n                                    );\n                                  }\n                                  \n                                  return (\n                                    <Chip \n                                      label={`오늘 ${taskHistory.length}회 학습 완료`}\n                                      size=\"small\" \n                                      color=\"success\"\n                                      variant=\"outlined\"\n                                      sx={{ height: 20, fontSize: '0.75rem' }}\n                                    />\n                                  );\n                                })()}\n                              </Box>\n                            </Box>\n\n                            {/* 평가 진행 상황 표시 */}\n                            {assignment.area === 'vocabulary' && (\n                              <Box sx={{ mb: 2 }}>\n                                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mb: 0.5 }}>\n                                  평가 진행:\n                                </Typography>\n                                <Box sx={{ display: 'flex', gap: 0.5, alignItems: 'center' }}>\n                                  {(() => {\n                                    // 해당 과제의 평가 이력 확인\n                                    const evaluationHistory = student?.evaluationHistory?.filter(\n                                      e => e.taskId === assignment.taskId\n                                    ) || [];\n                                    \n                                    if (evaluationHistory.length === 0) {\n                                      return (\n                                        <Typography variant=\"caption\" color=\"text.secondary\">\n                                          미진행\n                                        </Typography>\n                                      );\n                                    }\n                                    \n                                    // 평가 레벨 순으로 정렬\n                                    const sortedEvaluations = evaluationHistory.sort((a, b) => a.evaluationLevel - b.evaluationLevel);\n                                    \n                                    return (\n                                      <>\n                                        {sortedEvaluations.map((evaluation) => {\n                                          const isPerfect = evaluation.results.correctWords === evaluation.results.totalWords;\n                                          return (\n                                            <Tooltip\n                                              key={evaluation.evaluationLevel}\n                                              title={`${evaluation.evaluationLevel}차 평가: ${evaluation.results.correctWords}/${evaluation.results.totalWords}개 정답`}\n                                              arrow\n                                            >\n                                              <Box\n                                                sx={{\n                                                  display: 'flex',\n                                                  alignItems: 'center',\n                                                  gap: 0.5\n                                                }}\n                                              >\n                                                <Box\n                                                  sx={{\n                                                    width: 20,\n                                                    height: 20,\n                                                    borderRadius: '50%',\n                                                    bgcolor: isPerfect ? 'primary.main' : 'error.main',\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    justifyContent: 'center',\n                                                    cursor: 'pointer'\n                                                  }}\n                                                >\n                                                  <Typography\n                                                    variant=\"caption\"\n                                                    sx={{\n                                                      color: 'white',\n                                                      fontSize: '0.65rem',\n                                                      fontWeight: 'bold'\n                                                    }}\n                                                  >\n                                                    {evaluation.evaluationLevel}\n                                                  </Typography>\n                                                </Box>\n                                              </Box>\n                                            </Tooltip>\n                                          );\n                                        })}\n                                      </>\n                                    );\n                                  })()}\n                                </Box>\n                              </Box>\n                            )}\n\n                            {/* 액션 버튼 */}\n                            <Box sx={{ display: 'flex', gap: 1, mt: 2 }}>\n                              {(() => {\n                                const today = new Date().getDay();\n                                const dayName = ['일', '월', '화', '수', '목', '금', '토'][today];\n                                const todaySchedule = assignment.weeklySchedule?.[dayName];\n                                const hasTodayTask = todaySchedule && todaySchedule.isActive;\n\n                                if (hasTodayTask) {\n                                  return (\n                                    <>\n                                      <Button\n                                        variant=\"contained\"\n                                        startIcon={<PlayArrowIcon />}\n                                        size={isMobile ? \"large\" : \"medium\"}\n                                        sx={{ flex: 1 }}\n                                        onClick={() => handleStartVocabularyLearning(assignment)}\n                                      >\n                                        학습 시작\n                                      </Button>\n                                      <Button\n                                        variant=\"outlined\"\n                                        size={isMobile ? \"large\" : \"medium\"}\n                                        sx={{ flex: 1 }}\n                                        onClick={() => handleStartEvaluation(assignment)}\n                                      >\n                                        평가\n                                      </Button>\n                                    </>\n                                  );\n                                }\n                                \n                                return (\n                                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ flex: 1, textAlign: 'center', py: 1 }}>\n                                    오늘은 학습 예정일이 아닙니다\n                                  </Typography>\n                                );\n                              })()}\n                              <Button\n                                variant=\"text\"\n                                size={isMobile ? \"large\" : \"medium\"}\n                                onClick={() => handleOpenDetailDialog(assignment)}\n                              >\n                                상세보기\n                              </Button>\n                            </Box>\n                          </CardContent>\n                        </Card>\n                      </Grid>\n                    ))}\n                  </Grid>\n                )\n              )\n            ) : (\n              <Card sx={{ borderRadius: isMobile ? 2 : 1, textAlign: 'center' }}>\n                <CardContent sx={{ py: isMobile ? 6 : 4 }}>\n                  <CalendarIcon sx={{ \n                    fontSize: isMobile ? 80 : 64, \n                    color: 'text.secondary', \n                    mb: 2 \n                  }} />\n                  <Typography variant={isMobile ? \"h6\" : \"h6\"} color=\"text.secondary\" sx={{ mb: 1, fontWeight: 600 }}>\n                    {viewMode === 'today' ? '오늘의 과제가 없습니다' : viewMode === 'week' ? '이번 주 과제가 없습니다' : '이번 달 과제가 없습니다'}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                    {viewMode === 'today' \n                      ? '오늘은 학습이 예정되어 있지 않습니다.'\n                      : viewMode === 'week'\n                      ? '이번 주에 배정된 과제가 없습니다.'\n                      : '이번 달에 배정된 과제가 없습니다.'}\n                  </Typography>\n                  \n                  {/* 다시 시작 버튼 */}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size={isMobile ? \"large\" : \"medium\"}\n                    onClick={handleRestartLearning}\n                    startIcon={<RefreshIcon />}\n                    sx={{\n                      borderRadius: 2,\n                      px: 3,\n                      py: 1.5,\n                      fontWeight: 600,\n                      textTransform: 'none',\n                      boxShadow: 2,\n                      '&:hover': {\n                        boxShadow: 4,\n                        transform: 'translateY(-1px)',\n                        transition: 'all 0.2s ease-in-out'\n                      }\n                    }}\n                  >\n                    학습 시작하기\n                  </Button>\n                </CardContent>\n              </Card>\n            )}\n          </Box>\n        </TabPanel>\n\n        {/* 과제 현황 탭 */}\n        <TabPanel value={tabValue} index={1}>\n          <Box sx={{ mb: 3 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n              <ViewModuleIcon sx={{ mr: 1, color: 'primary.main' }} />\n              <Typography variant={isMobile ? \"h6\" : \"h5\"} sx={{ fontWeight: 600 }}>\n                과제 현황 ({activeAssignments.length}개)\n              </Typography>\n            </Box>\n\n            {activeAssignments.length > 0 ? (\n              <Grid container spacing={isMobile ? 2 : 3}>\n                {activeAssignments.map((assignment, index) => (\n                  <Grid item xs={12} sm={6} md={4} key={index}>\n                    <Card \n                      sx={{ \n                        cursor: 'pointer',\n                        borderRadius: isMobile ? 2 : 1,\n                        '&:hover': { \n                          boxShadow: isMobile ? 2 : 3,\n                          transform: isMobile ? 'none' : 'translateY(-2px)',\n                          transition: 'all 0.2s ease-in-out'\n                        },\n                        minHeight: isMobile ? 200 : 'auto'\n                      }}\n                      onClick={() => handleOpenDetailDialog(assignment)}\n                    >\n                      <CardContent sx={{ p: isMobile ? 3 : 2 }}>\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>\n                          <Typography \n                            variant={isMobile ? \"h6\" : \"h6\"} \n                            sx={{ \n                              flex: 1, \n                              fontSize: isMobile ? '1rem' : '1.25rem',\n                              lineHeight: 1.3\n                            }}\n                          >\n                            {assignment.taskTitle}\n                          </Typography>\n                          <Chip\n                            label={getStatusText(assignment.status)}\n                            color={getStatusColor(assignment.status) as any}\n                            size=\"small\"\n                            sx={{ ml: 1 }}\n                          />\n                        </Box>\n\n                        <Box sx={{ mb: 2 }}>\n                          <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                            <AssignmentIcon sx={{ fontSize: 16, mr: 0.5, color: 'primary.main' }} />\n                            <Typography variant=\"body2\" color=\"primary\" sx={{ fontWeight: 500 }}>\n                              {getAreaText(assignment.area)} 영역\n                            </Typography>\n                          </Box>\n                          \n                          {/* 진행률 */}\n                          <Box sx={{ mb: 2 }}>\n                            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                              <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                                진행률\n                              </Typography>\n                              <Typography variant=\"body2\" color=\"primary\" sx={{ fontWeight: 600 }}>\n                                {assignment.progress.completed} / {assignment.progress.total}\n                              </Typography>\n                            </Box>\n                            <LinearProgress\n                              variant=\"determinate\"\n                              value={(assignment.progress.completed / assignment.progress.total) * 100}\n                              sx={{ \n                                height: isMobile ? 8 : 6, \n                                borderRadius: 4,\n                                backgroundColor: 'grey.200',\n                                '& .MuiLinearProgress-bar': {\n                                  borderRadius: 4,\n                                }\n                              }}\n                            />\n                          </Box>\n\n                          {/* 시작 단원 (단어장인 경우) */}\n                          {assignment.area === 'vocabulary' && assignment.startUnit && (\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                              <InfoIcon sx={{ fontSize: 16, mr: 0.5, color: 'text.secondary' }} />\n                              <Typography variant=\"body2\" color=\"text.secondary\">\n                                시작 단원: {assignment.startUnit}\n                              </Typography>\n                            </Box>\n                          )}\n\n                          {/* 학습 회차 표시 */}\n                          <Box sx={{ mb: 2 }}>\n                            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mb: 0.5 }}>\n                              학습 이력:\n                            </Typography>\n                            <Box sx={{ display: 'flex', gap: 0.5, flexWrap: 'wrap' }}>\n                              {(() => {\n                                // 오늘 날짜의 학습 이력만 필터링\n                                const today = new Date();\n                                today.setHours(0, 0, 0, 0);\n                                const todayString = today.toISOString().split('T')[0];\n                                \n                                console.log('Checking learning history for assignment:', assignment.taskTitle, 'taskId:', assignment.taskId);\n                                console.log('Today string:', todayString);\n                                \n                                const taskHistory = student?.learningHistory?.filter(\n                                  h => {\n                                    if (h.taskId !== assignment.taskId) return false;\n                                    \n                                    // 학습 날짜가 오늘인지 확인\n                                    const historyDate = new Date(h.date);\n                                    historyDate.setHours(0, 0, 0, 0);\n                                    const historyDateString = historyDate.toISOString().split('T')[0];\n                                    \n                                    const matches = historyDateString === todayString;\n                                    console.log('History item:', h.taskId, 'date:', historyDateString, 'matches today:', matches);\n                                    \n                                    return matches;\n                                  }\n                                ) || [];\n                                \n                                console.log('Task history for', assignment.taskTitle, ':', taskHistory.length, 'items');\n                                \n                                if (taskHistory.length === 0) {\n                                  return (\n                                    <Chip \n                                      label=\"오늘 미학습\" \n                                      size=\"small\" \n                                      variant=\"outlined\"\n                                      color=\"default\"\n                                      sx={{ height: 20, fontSize: '0.75rem' }}\n                                    />\n                                  );\n                                }\n                                \n                                return (\n                                  <Chip \n                                    label={`오늘 ${taskHistory.length}회 학습 완료`}\n                                    size=\"small\" \n                                    color=\"success\"\n                                    variant=\"outlined\"\n                                    sx={{ height: 20, fontSize: '0.75rem' }}\n                                  />\n                                );\n                              })()}\n                            </Box>\n                          </Box>\n\n                          {/* 평가 진행 상황 표시 */}\n                          {assignment.area === 'vocabulary' && (\n                            <Box sx={{ mb: 2 }}>\n                              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mb: 0.5 }}>\n                                평가 진행:\n                              </Typography>\n                              <Box sx={{ display: 'flex', gap: 0.5, alignItems: 'center' }}>\n                                {(() => {\n                                  // 해당 과제의 평가 이력 확인\n                                  const evaluationHistory = student?.evaluationHistory?.filter(\n                                    e => e.taskId === assignment.taskId\n                                  ) || [];\n                                  \n                                  if (evaluationHistory.length === 0) {\n                                    return (\n                                      <Typography variant=\"caption\" color=\"text.secondary\">\n                                        미진행\n                                      </Typography>\n                                    );\n                                  }\n                                  \n                                  // 평가 레벨 순으로 정렬\n                                  const sortedEvaluations = evaluationHistory.sort((a, b) => a.evaluationLevel - b.evaluationLevel);\n                                  \n                                  return (\n                                    <>\n                                      {sortedEvaluations.map((evaluation) => {\n                                        const isPerfect = evaluation.results.correctWords === evaluation.results.totalWords;\n                                        return (\n                                          <Tooltip\n                                            key={evaluation.evaluationLevel}\n                                            title={`${evaluation.evaluationLevel}차 평가: ${evaluation.results.correctWords}/${evaluation.results.totalWords}개 정답`}\n                                            arrow\n                                          >\n                                            <Box\n                                              sx={{\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                gap: 0.5\n                                              }}\n                                            >\n                                              <Box\n                                                sx={{\n                                                  width: 20,\n                                                  height: 20,\n                                                  borderRadius: '50%',\n                                                  bgcolor: isPerfect ? 'primary.main' : 'error.main',\n                                                  display: 'flex',\n                                                  alignItems: 'center',\n                                                  justifyContent: 'center',\n                                                  cursor: 'pointer'\n                                                }}\n                                              >\n                                                <Typography\n                                                  variant=\"caption\"\n                                                  sx={{\n                                                    color: 'white',\n                                                    fontSize: '0.65rem',\n                                                    fontWeight: 'bold'\n                                                  }}\n                                                >\n                                                  {evaluation.evaluationLevel}\n                                                </Typography>\n                                              </Box>\n                                            </Box>\n                                          </Tooltip>\n                                        );\n                                      })}\n                                    </>\n                                  );\n                                })()}\n                              </Box>\n                            </Box>\n                          )}\n\n                          {/* 스케줄 요약 */}\n                          <Box sx={{ mt: 2 }}>\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                              <CalendarIcon sx={{ fontSize: 16, mr: 0.5, color: 'text.secondary' }} />\n                              <Typography variant=\"body2\" color=\"text.secondary\">\n                                학습 요일:\n                              </Typography>\n                            </Box>\n                            <Box sx={{ display: 'flex', gap: 0.5, flexWrap: 'wrap' }}>\n                              {Object.entries(assignment.weeklySchedule)\n                                .filter(([_, schedule]) => schedule.isActive)\n                                .map(([day, schedule]) => (\n                                  <Chip\n                                    key={day}\n                                    label={`${day} ${schedule.dailyAmount}`}\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    sx={{ fontSize: '0.75rem' }}\n                                  />\n                                ))}\n                            </Box>\n                          </Box>\n                        </Box>\n\n                        <Box sx={{ \n                          display: 'flex', \n                          justifyContent: 'space-between', \n                          alignItems: 'center',\n                          mt: 'auto'\n                        }}>\n                          <Typography variant=\"caption\" color=\"text.secondary\">\n                            시작: {assignment.startDate}\n                          </Typography>\n                          <Button\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleOpenDetailDialog(assignment);\n                            }}\n                            sx={{ \n                              minWidth: 'auto',\n                              px: isMobile ? 2 : 1.5,\n                              py: isMobile ? 1 : 0.5\n                            }}\n                          >\n                            상세보기\n                          </Button>\n                        </Box>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                ))}\n              </Grid>\n            ) : (\n              <Card sx={{ borderRadius: isMobile ? 2 : 1 }}>\n                <CardContent sx={{ \n                  textAlign: 'center', \n                  py: isMobile ? 6 : 4,\n                  px: isMobile ? 3 : 2\n                }}>\n                  <AssignmentIcon sx={{ \n                    fontSize: isMobile ? 80 : 64, \n                    color: 'text.secondary', \n                    mb: 2 \n                  }} />\n                  <Typography variant={isMobile ? \"h6\" : \"h6\"} color=\"text.secondary\" sx={{ mb: 1 }}>\n                    활성 과제가 없습니다\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    관리자에게 과제 배정을 요청하세요.\n                  </Typography>\n                </CardContent>\n              </Card>\n            )}\n          </Box>\n        </TabPanel>\n\n        {/* 설정 탭 */}\n        <TabPanel value={tabValue} index={2}>\n          <Box sx={{ mb: 3 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n              <SettingsIcon sx={{ mr: 1, color: 'primary.main' }} />\n              <Typography variant={isMobile ? \"h6\" : \"h5\"} sx={{ fontWeight: 600 }}>\n                학습 설정\n              </Typography>\n            </Box>\n\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <Card sx={{ borderRadius: isMobile ? 2 : 1 }}>\n                  <CardContent sx={{ p: isMobile ? 3 : 2 }}>\n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n                      <TimerIcon sx={{ mr: 1, color: 'primary.main' }} />\n                      <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\n                        단어 학습 타이머 설정\n                      </Typography>\n                    </Box>\n                    \n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                      단어의 뜻을 확인한 후 다음 단어로 넘어가는 시간을 설정합니다.\n                    </Typography>\n\n                    <Box sx={{ px: 2, mb: 3 }}>\n                      <Slider\n                        value={timerDuration}\n                        onChange={(e, value) => setTimerDuration(value as number)}\n                        min={0.5}\n                        max={5}\n                        step={0.5}\n                        marks={[\n                          { value: 0.5, label: '0.5초' },\n                          { value: 1.5, label: '1.5초' },\n                          { value: 3, label: '3초' },\n                          { value: 5, label: '5초' },\n                        ]}\n                        valueLabelDisplay=\"on\"\n                        valueLabelFormat={(value) => `${value}초`}\n                      />\n                    </Box>\n\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        현재 설정: {timerDuration}초\n                      </Typography>\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => {\n                          localStorage.setItem(`timer_duration_${studentId}`, timerDuration.toString());\n                          alert('설정이 저장되었습니다.');\n                        }}\n                      >\n                        저장\n                      </Button>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n\n              {/* 학습 이력 초기화 (개발/테스트용) */}\n              <Grid item xs={12} md={6}>\n                <Card sx={{ borderRadius: isMobile ? 2 : 1 }}>\n                  <CardContent sx={{ p: isMobile ? 3 : 2 }}>\n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n                      <RefreshIcon sx={{ mr: 1, color: 'warning.main' }} />\n                      <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\n                        학습 이력 초기화 (테스트용)\n                      </Typography>\n                    </Box>\n                    \n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                      테스트를 위해 이 학생의 모든 학습 이력을 초기화합니다.\n                      <br />\n                      <strong style={{ color: '#d32f2f' }}>주의: 이 작업은 되돌릴 수 없습니다!</strong>\n                    </Typography>\n\n                    <Box sx={{ display: 'flex', gap: 2 }}>\n                      <Button\n                        variant=\"outlined\"\n                        color=\"warning\"\n                        onClick={() => {\n                          if (window.confirm('정말로 이 학생의 모든 학습 이력을 초기화하시겠습니까?\\n\\n이 작업은 되돌릴 수 없습니다!')) {\n                            if (!student) return;\n                            \n                            const updatedStudent = {\n                              ...student,\n                              learningHistory: [],\n                              evaluationHistory: []\n                            };\n                            \n                            // 과제 진행률도 초기화\n                            updatedStudent.taskAssignments = updatedStudent.taskAssignments.map(assignment => ({\n                              ...assignment,\n                              progress: {\n                                ...assignment.progress,\n                                completed: 0\n                              }\n                            }));\n                            \n                            const students = loadStudents();\n                            const studentIndex = students.findIndex(s => s.id === student.id);\n                            if (studentIndex !== -1) {\n                              students[studentIndex] = updatedStudent;\n                              saveStudents(students);\n                              setStudent(updatedStudent);\n                              alert('학습 이력이 초기화되었습니다.');\n                            }\n                          }\n                        }}\n                      >\n                        학습 이력 초기화\n                      </Button>\n\n                      <Button\n                        variant=\"outlined\"\n                        color=\"info\"\n                        onClick={() => {\n                          if (!student) return;\n                          console.log('Current Learning History:', student.learningHistory);\n                          console.log('Current Evaluation History:', student.evaluationHistory);\n                          alert(`학습 이력: ${student.learningHistory?.length || 0}개\\n평가 이력: ${student.evaluationHistory?.length || 0}개\\n\\n자세한 내용은 개발자 도구 콘솔을 확인하세요.`);\n                        }}\n                      >\n                        이력 확인\n                      </Button>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n          </Box>\n        </TabPanel>\n\n        {/* 데스크톱 과제 상세 다이얼로그 */}\n        <Dialog open={openDetailDialog} onClose={handleCloseDetailDialog} maxWidth=\"md\" fullWidth>\n          <DialogTitle>\n            {selectedAssignment?.taskTitle} - 상세 정보\n          </DialogTitle>\n          <DialogContent>\n            {selectedAssignment && (\n              <Box sx={{ pt: 2 }}>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={6}>\n                    <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                      기본 정보\n                    </Typography>\n                    <Box sx={{ mb: 2 }}>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        영역: {getAreaText(selectedAssignment.area)}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        상태: {getStatusText(selectedAssignment.status)}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        시작일: {selectedAssignment.startDate}\n                      </Typography>\n                      {selectedAssignment.endDate && (\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          종료일: {selectedAssignment.endDate}\n                        </Typography>\n                      )}\n                      {selectedAssignment.area === 'vocabulary' && selectedAssignment.startUnit && (\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          시작 단원: {selectedAssignment.startUnit}\n                        </Typography>\n                      )}\n                    </Box>\n\n                    <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                      진행률\n                    </Typography>\n                    <Box sx={{ mb: 2 }}>\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                        <Typography variant=\"body2\">\n                          {selectedAssignment.progress.completed} / {selectedAssignment.progress.total} 완료\n                        </Typography>\n                        <Typography variant=\"body2\">\n                          {Math.round((selectedAssignment.progress.completed / selectedAssignment.progress.total) * 100)}%\n                        </Typography>\n                      </Box>\n                      <LinearProgress\n                        variant=\"determinate\"\n                        value={(selectedAssignment.progress.completed / selectedAssignment.progress.total) * 100}\n                        sx={{ height: 12, borderRadius: 6 }}\n                      />\n                    </Box>\n                  </Grid>\n\n                  <Grid item xs={12} md={6}>\n                    <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                      주간 스케줄\n                    </Typography>\n                    <TableContainer component={Paper} variant=\"outlined\">\n                      <Table size=\"small\">\n                        <TableHead>\n                          <TableRow>\n                            <TableCell>요일</TableCell>\n                            <TableCell>학습량</TableCell>\n                            <TableCell>상태</TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {['월', '화', '수', '목', '금', '토', '일'].map((day) => {\n                            const schedule = selectedAssignment.weeklySchedule[day];\n                            return (\n                              <TableRow key={day}>\n                                <TableCell>{day}</TableCell>\n                                <TableCell>\n                                  {schedule?.isActive ? schedule.dailyAmount : '-'}\n                                </TableCell>\n                                <TableCell>\n                                  {schedule?.isActive ? (\n                                    <Chip label=\"활성\" color=\"success\" size=\"small\" />\n                                  ) : (\n                                    <Chip label=\"비활성\" color=\"default\" size=\"small\" />\n                                  )}\n                                </TableCell>\n                              </TableRow>\n                            );\n                          })}\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                  </Grid>\n                </Grid>\n              </Box>\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseDetailDialog}>닫기</Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* 모바일 과제 상세 바텀시트 */}\n        <Drawer\n          anchor=\"bottom\"\n          open={openMobileDetail}\n          onClose={handleCloseDetailDialog}\n          PaperProps={{\n            sx: {\n              borderTopLeftRadius: 16,\n              borderTopRightRadius: 16,\n              maxHeight: '80vh',\n              minHeight: '50vh',\n            }\n          }}\n        >\n          {selectedAssignment && (\n            <Box sx={{ p: 3 }}>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n                <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\n                  {selectedAssignment.taskTitle}\n                </Typography>\n                <IconButton onClick={handleCloseDetailDialog}>\n                  <CloseIcon />\n                </IconButton>\n              </Box>\n\n              <List sx={{ p: 0 }}>\n                <ListItem sx={{ px: 0 }}>\n                  <ListItemIcon>\n                    <AssignmentIcon color=\"primary\" />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary=\"영역\"\n                    secondary={getAreaText(selectedAssignment.area)}\n                  />\n                </ListItem>\n\n                <ListItem sx={{ px: 0 }}>\n                  <ListItemIcon>\n                    <TrendingUpIcon color=\"primary\" />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary=\"상태\"\n                    secondary={getStatusText(selectedAssignment.status)}\n                  />\n                </ListItem>\n\n                <ListItem sx={{ px: 0 }}>\n                  <ListItemIcon>\n                    <CalendarIcon color=\"primary\" />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary=\"시작일\"\n                    secondary={selectedAssignment.startDate}\n                  />\n                </ListItem>\n\n                {selectedAssignment.endDate && (\n                  <ListItem sx={{ px: 0 }}>\n                    <ListItemIcon>\n                      <CheckCircleIcon color=\"primary\" />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"종료일\"\n                      secondary={selectedAssignment.endDate}\n                    />\n                  </ListItem>\n                )}\n\n                {selectedAssignment.area === 'vocabulary' && selectedAssignment.startUnit && (\n                  <ListItem sx={{ px: 0 }}>\n                    <ListItemIcon>\n                      <InfoIcon color=\"primary\" />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"시작 단원\"\n                      secondary={selectedAssignment.startUnit}\n                    />\n                  </ListItem>\n                )}\n              </List>\n\n              <Divider sx={{ my: 2 }} />\n\n              <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 600 }}>\n                진행률\n              </Typography>\n              <Box sx={{ mb: 2 }}>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                  <Typography variant=\"body2\">\n                    {selectedAssignment.progress.completed} / {selectedAssignment.progress.total} 완료\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"primary\" sx={{ fontWeight: 600 }}>\n                    {Math.round((selectedAssignment.progress.completed / selectedAssignment.progress.total) * 100)}%\n                  </Typography>\n                </Box>\n                <LinearProgress\n                  variant=\"determinate\"\n                  value={(selectedAssignment.progress.completed / selectedAssignment.progress.total) * 100}\n                  sx={{ height: 8, borderRadius: 4 }}\n                />\n              </Box>\n\n              <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 600 }}>\n                주간 스케줄\n              </Typography>\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                {['월', '화', '수', '목', '금', '토', '일'].map((day) => {\n                  const schedule = selectedAssignment.weeklySchedule[day];\n                  return (\n                    <Box\n                      key={day}\n                      sx={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                        p: 2,\n                        borderRadius: 1,\n                        backgroundColor: schedule?.isActive ? 'primary.50' : 'grey.50',\n                        border: schedule?.isActive ? '1px solid' : '1px solid',\n                        borderColor: schedule?.isActive ? 'primary.200' : 'grey.200',\n                      }}\n                    >\n                      <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\n                        {day}요일\n                      </Typography>\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {schedule?.isActive ? schedule.dailyAmount : '학습 없음'}\n                        </Typography>\n                        <Chip\n                          label={schedule?.isActive ? '활성' : '비활성'}\n                          color={schedule?.isActive ? 'success' : 'default'}\n                          size=\"small\"\n                        />\n                      </Box>\n                    </Box>\n                  );\n                })}\n              </Box>\n            </Box>\n          )}\n        </Drawer>\n\n\n\n        {/* 단어 학습 컴포넌트 */}\n        {showVocabularyLearning && selectedAssignment && (\n          <VocabularyLearning\n            assignment={selectedAssignment}\n            onComplete={handleCompleteVocabularyLearning}\n            onClose={handleCloseVocabularyLearning}\n            timerDuration={timerDuration}\n          />\n        )}\n\n        {/* 단어 평가 컴포넌트 */}\n        {showVocabularyEvaluation && selectedAssignment && (\n          <VocabularyEvaluation\n            assignment={selectedAssignment}\n            learningHistory={student?.learningHistory?.filter(\n              history => history.taskId === selectedAssignment.taskId\n            ) || []}\n            evaluationLevel={evaluationLevel}\n            firstEvaluationResults={evaluationLevel > 1 ? student?.evaluationHistory?.find(\n              e => e.taskId === selectedAssignment.taskId && e.evaluationLevel === evaluationLevel - 1\n            )?.results : undefined}\n            onComplete={handleCompleteVocabularyEvaluation}\n            onClose={handleCloseVocabularyEvaluation}\n          />\n        )}\n\n        {/* 평가 선택 다이얼로그 */}\n        <Dialog \n          open={showEvaluationSelectDialog} \n          onClose={() => setShowEvaluationSelectDialog(false)}\n          maxWidth=\"sm\"\n          fullWidth\n        >\n          <DialogTitle>평가 선택</DialogTitle>\n          <DialogContent>\n            <Box sx={{ py: 2 }}>\n              {(() => {\n                // 해당 과제의 모든 평가 기록\n                const allEvaluations = student?.evaluationHistory?.filter(\n                  e => e.taskId === selectedAssignment?.taskId\n                ) || [];\n                \n                // 가장 최근 평가\n                const latestEvaluation = allEvaluations.length > 0 \n                  ? allEvaluations.reduce((latest, current) => \n                      current.evaluationLevel > latest.evaluationLevel ? current : latest\n                    )\n                  : null;\n                \n                if (!latestEvaluation) return null;\n                \n                const correctCount = latestEvaluation.results.correctWords;\n                const incorrectCount = latestEvaluation.results.incorrectWords?.length || 0;\n                const totalCount = correctCount + incorrectCount;\n                const correctRate = Math.round((correctCount / totalCount) * 100);\n                const nextLevel = latestEvaluation.evaluationLevel + 1;\n                \n                return (\n                  <>\n                    <Typography variant=\"body1\" sx={{ mb: 3 }}>\n                      {latestEvaluation.evaluationLevel}차 평가를 완료하셨습니다. 어떤 평가를 진행하시겠습니까?\n                    </Typography>\n                    \n                    <Box sx={{ mb: 3, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\n                      <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 1 }}>\n                        {latestEvaluation.evaluationLevel}차 평가 결과\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        총 {totalCount}개 중 {correctCount}개 정답 (정답률 {correctRate}%)\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"error\" sx={{ mt: 0.5 }}>\n                        오답: {incorrectCount}개\n                      </Typography>\n                      <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mt: 1 }}>\n                        평가일: {new Date(latestEvaluation.date).toLocaleDateString('ko-KR')}\n                      </Typography>\n                    </Box>\n                    \n                    {/* 이전 평가 이력 표시 */}\n                    {allEvaluations.length > 1 && (\n                      <Box sx={{ mb: 3 }}>\n                        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mb: 1 }}>\n                          이전 평가 이력:\n                        </Typography>\n                        {allEvaluations\n                          .filter(e => e.evaluationLevel < latestEvaluation.evaluationLevel)\n                          .sort((a, b) => b.evaluationLevel - a.evaluationLevel)\n                          .map((evaluation) => (\n                            <Typography key={evaluation.evaluationLevel} variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block' }}>\n                              • {evaluation.evaluationLevel}차: {evaluation.results.correctWords}/{evaluation.results.totalWords}개 정답\n                            </Typography>\n                          ))}\n                      </Box>\n                    )}\n                    \n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                      <Button\n                        variant=\"outlined\"\n                        size=\"large\"\n                        onClick={() => {\n                          setEvaluationLevel(latestEvaluation.evaluationLevel);\n                          setShowEvaluationSelectDialog(false);\n                          setShowVocabularyEvaluation(true);\n                        }}\n                        sx={{ py: 2 }}\n                      >\n                        {latestEvaluation.evaluationLevel}차 평가 다시하기\n                        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mt: 0.5 }}>\n                          {latestEvaluation.evaluationLevel === 1 ? '전체 단어를' : '이전 오답 단어를'} 다시 평가합니다\n                        </Typography>\n                      </Button>\n                      \n                      {incorrectCount > 0 && nextLevel <= 5 && (\n                        <Button\n                          variant=\"contained\"\n                          size=\"large\"\n                          onClick={() => {\n                            setEvaluationLevel(nextLevel);\n                            setShowEvaluationSelectDialog(false);\n                            setShowVocabularyEvaluation(true);\n                          }}\n                          sx={{ py: 2 }}\n                        >\n                          {nextLevel}차 평가 진행하기\n                          <Typography variant=\"caption\" sx={{ display: 'block', mt: 0.5, color: 'inherit' }}>\n                            {latestEvaluation.evaluationLevel}차 평가에서 틀린 {incorrectCount}개 단어만 평가합니다\n                          </Typography>\n                        </Button>\n                      )}\n                      \n                      {nextLevel > 5 && incorrectCount > 0 && (\n                        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign: 'center', mt: 2 }}>\n                          5차 평가까지 완료하셨습니다. 추가 평가는 지원하지 않습니다.\n                        </Typography>\n                      )}\n                    </Box>\n                  </>\n                );\n              })()}\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setShowEvaluationSelectDialog(false)}>\n              취소\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Container>\n    </Box>\n  );\n};\n\nexport default StudentPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
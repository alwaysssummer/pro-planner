{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\pro_planner\\\\src\\\\components\\\\VocabularyEvaluation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, Typography, Card, CardContent, TextField, Button, LinearProgress, Dialog, DialogTitle, DialogContent, Chip, IconButton, Paper } from '@mui/material';\nimport { Close as CloseIcon, CheckCircle as CheckCircleIcon, Cancel as CancelIcon, NavigateNext as NavigateNextIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VocabularyEvaluation = ({\n  assignment,\n  learningHistory,\n  onComplete,\n  onClose\n}) => {\n  _s();\n  const [evaluationWords, setEvaluationWords] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [userInput, setUserInput] = useState('');\n  const [showResult, setShowResult] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [autoCompletedText, setAutoCompletedText] = useState('');\n  const inputRef = useRef(null);\n\n  // 평가 대상 단어 추출 (1차 학습에서 어려웠던 단어들)\n  useEffect(() => {\n    var _latestLearning$round;\n    if (!learningHistory || learningHistory.length === 0) {\n      console.error('No learning history found');\n      return;\n    }\n\n    // 가장 최근 학습 기록에서 첫 번째 라운드 데이터 가져오기\n    const latestLearning = learningHistory[learningHistory.length - 1];\n    const firstRound = (_latestLearning$round = latestLearning.rounds) === null || _latestLearning$round === void 0 ? void 0 : _latestLearning$round[0];\n    if (!firstRound || !firstRound.wordStates) {\n      console.error('No first round data found');\n      return;\n    }\n\n    // \"1번 더 볼래요\", \"모르겠어요\", \"아 몰랐어요\" 단어만 추출\n    const difficultWords = firstRound.wordStates.filter(wordState => wordState.status === 'repeat' || wordState.status === 'unknown' || wordState.status === 'forgot').map(wordState => ({\n      unit: wordState.word.unit,\n      english: wordState.word.english,\n      meaning: wordState.word.meaning\n    }));\n    setEvaluationWords(difficultWords);\n  }, [learningHistory]);\n\n  // 첫 글자 입력 시 자동완성 처리\n  useEffect(() => {\n    if (!userInput || currentIndex >= evaluationWords.length) return;\n    const currentWord = evaluationWords[currentIndex];\n    const meanings = currentWord.meaning.split(',').map(m => m.trim());\n\n    // 각 뜻에 대해 첫 글자 매칭 확인\n    for (const meaning of meanings) {\n      // 특수 패턴 처리 (A에게 B를 제공하다, ~라고 생각한다 등)\n      const patterns = [/A에게 B를 (.+)$/, /~라고 (.+)$/, /~을 (.+)$/, /~를 (.+)$/, /~에 (.+)$/, /~에게 (.+)$/];\n      let targetWord = meaning;\n      let prefix = '';\n      let suffix = '';\n\n      // 패턴 매칭\n      for (const pattern of patterns) {\n        const match = meaning.match(pattern);\n        if (match) {\n          targetWord = match[1];\n          prefix = meaning.substring(0, match.index + meaning.indexOf(match[1]));\n          suffix = '';\n          break;\n        }\n      }\n\n      // 일반적인 경우 (패턴이 없는 경우)\n      if (prefix === '' && targetWord === meaning) {\n        // 첫 글자가 일치하는지 확인\n        if (targetWord.startsWith(userInput)) {\n          setAutoCompletedText(targetWord);\n          setIsCorrect(true);\n          return;\n        }\n      } else {\n        // 패턴이 있는 경우\n        if (targetWord.startsWith(userInput)) {\n          setAutoCompletedText(meaning);\n          setIsCorrect(true);\n          return;\n        }\n      }\n    }\n\n    // 일치하는 첫 글자가 없으면\n    setAutoCompletedText('');\n    setIsCorrect(false);\n  }, [userInput, currentIndex, evaluationWords]);\n  const handleInputChange = e => {\n    const value = e.target.value;\n    if (value.length <= 1) {\n      // 첫 글자만 입력 가능\n      setUserInput(value);\n    }\n  };\n  const handleNext = () => {\n    if (currentIndex >= evaluationWords.length) return;\n\n    // 현재 단어 결과 저장\n    const updatedWords = [...evaluationWords];\n    updatedWords[currentIndex] = {\n      ...updatedWords[currentIndex],\n      isCorrect: isCorrect,\n      userInput: userInput\n    };\n    setEvaluationWords(updatedWords);\n\n    // 다음 단어로\n    if (currentIndex < evaluationWords.length - 1) {\n      var _inputRef$current;\n      setCurrentIndex(currentIndex + 1);\n      setUserInput('');\n      setAutoCompletedText('');\n      setIsCorrect(false);\n      setShowResult(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    } else {\n      // 평가 완료\n      handleEvaluationComplete();\n    }\n  };\n  const handleSkip = () => {\n    // 건너뛰기는 오답 처리\n    setIsCorrect(false);\n    handleNext();\n  };\n  const handleEvaluationComplete = () => {\n    const results = {\n      totalWords: evaluationWords.length,\n      correctWords: evaluationWords.filter(w => w.isCorrect).length,\n      incorrectWords: evaluationWords.filter(w => !w.isCorrect),\n      evaluationLevel: 1,\n      // 1차 평가\n      timestamp: new Date().toISOString()\n    };\n    setShowResult(true);\n    setTimeout(() => {\n      onComplete(results);\n    }, 2000);\n  };\n  if (evaluationWords.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: true,\n      onClose: onClose,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"\\uD3C9\\uAC00 \\uC900\\uBE44 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"\\uD3C9\\uAC00\\uD560 \\uB2E8\\uC5B4\\uB97C \\uC900\\uBE44\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this);\n  }\n  const currentWord = evaluationWords[currentIndex];\n  const progress = (currentIndex + 1) / evaluationWords.length * 100;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    onClose: onClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    PaperProps: {\n      sx: {\n        height: '80vh',\n        display: 'flex',\n        flexDirection: 'column'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"1\\uCC28 \\uD3C9\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: `${currentIndex + 1} / ${evaluationWords.length}`,\n          color: \"primary\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      sx: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: progress,\n          sx: {\n            height: 8,\n            borderRadius: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          flex: 1,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            textAlign: 'center',\n            width: '100%',\n            maxWidth: 600\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            sx: {\n              mb: 4,\n              fontWeight: 'bold'\n            },\n            children: currentWord === null || currentWord === void 0 ? void 0 : currentWord.english\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 4\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              ref: inputRef,\n              value: userInput,\n              onChange: handleInputChange,\n              placeholder: \"\\uB73B\\uC758 \\uCCAB \\uAE00\\uC790\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n              variant: \"outlined\",\n              size: \"medium\",\n              autoFocus: true,\n              sx: {\n                width: '100%',\n                maxWidth: 400,\n                '& .MuiOutlinedInput-root': {\n                  fontSize: '1.5rem'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), autoCompletedText && /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 3,\n              bgcolor: isCorrect ? 'success.50' : 'error.50',\n              border: 2,\n              borderColor: isCorrect ? 'success.main' : 'error.main',\n              borderRadius: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                gap: 2\n              },\n              children: [isCorrect ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                color: \"success\",\n                sx: {\n                  fontSize: 40\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(CancelIcon, {\n                color: \"error\",\n                sx: {\n                  fontSize: 40\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: autoCompletedText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            sx: {\n              mt: 2,\n              display: 'block'\n            },\n            children: [\"\\uC815\\uB2F5: \", currentWord === null || currentWord === void 0 ? void 0 : currentWord.meaning]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"large\",\n          onClick: handleSkip,\n          disabled: showResult,\n          children: \"\\uAC74\\uB108\\uB6F0\\uAE30 (\\uC624\\uB2F5)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"large\",\n          onClick: handleNext,\n          disabled: !userInput && !showResult,\n          endIcon: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 22\n          }, this),\n          children: currentIndex === evaluationWords.length - 1 ? '평가 완료' : '다음 단어'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showResult,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"1\\uCC28 \\uD3C9\\uAC00 \\uACB0\\uACFC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center',\n            py: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            sx: {\n              mb: 2\n            },\n            children: [evaluationWords.filter(w => w.isCorrect).length, \" / \", evaluationWords.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            children: [\"\\uC815\\uB2F5\\uB960: \", Math.round(evaluationWords.filter(w => w.isCorrect).length / evaluationWords.length * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), evaluationWords.filter(w => !w.isCorrect).length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            sx: {\n              mt: 2\n            },\n            children: [\"\\uC624\\uB2F5 \", evaluationWords.filter(w => !w.isCorrect).length, \"\\uAC1C\\uB294 2\\uCC28 \\uD3C9\\uAC00\\uC5D0\\uC11C \\uB2E4\\uC2DC \\uD655\\uC778\\uD569\\uB2C8\\uB2E4.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(VocabularyEvaluation, \"LyFAAciLIPvkOdYswwG0fglSUtE=\");\n_c = VocabularyEvaluation;\nexport default VocabularyEvaluation;\nvar _c;\n$RefreshReg$(_c, \"VocabularyEvaluation\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Typography","Card","CardContent","TextField","Button","LinearProgress","Dialog","DialogTitle","DialogContent","Chip","IconButton","Paper","Close","CloseIcon","CheckCircle","CheckCircleIcon","Cancel","CancelIcon","NavigateNext","NavigateNextIcon","jsxDEV","_jsxDEV","VocabularyEvaluation","assignment","learningHistory","onComplete","onClose","_s","evaluationWords","setEvaluationWords","currentIndex","setCurrentIndex","userInput","setUserInput","showResult","setShowResult","isCorrect","setIsCorrect","autoCompletedText","setAutoCompletedText","inputRef","_latestLearning$round","length","console","error","latestLearning","firstRound","rounds","wordStates","difficultWords","filter","wordState","status","map","unit","word","english","meaning","currentWord","meanings","split","m","trim","patterns","targetWord","prefix","suffix","pattern","match","substring","index","indexOf","startsWith","handleInputChange","e","value","target","handleNext","updatedWords","_inputRef$current","current","focus","handleEvaluationComplete","handleSkip","results","totalWords","correctWords","w","incorrectWords","evaluationLevel","timestamp","Date","toISOString","setTimeout","open","maxWidth","fullWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","progress","PaperProps","sx","height","display","flexDirection","alignItems","justifyContent","gap","variant","label","color","size","onClick","flex","borderRadius","textAlign","width","mb","fontWeight","ref","onChange","placeholder","autoFocus","fontSize","elevation","p","bgcolor","border","borderColor","mt","disabled","endIcon","py","Math","round","_c","$RefreshReg$"],"sources":["C:/Users/user/pro_planner/src/components/VocabularyEvaluation.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n  LinearProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Chip,\r\n  IconButton,\r\n  Paper,\r\n} from '@mui/material';\r\nimport {\r\n  Close as CloseIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Cancel as CancelIcon,\r\n  NavigateNext as NavigateNextIcon,\r\n} from '@mui/icons-material';\r\n\r\ninterface VocabularyWord {\r\n  unit: string;\r\n  english: string;\r\n  meaning: string;\r\n}\r\n\r\ninterface EvaluationWord extends VocabularyWord {\r\n  isCorrect?: boolean;\r\n  userInput?: string;\r\n}\r\n\r\ninterface VocabularyEvaluationProps {\r\n  assignment: any;\r\n  learningHistory: any[];\r\n  onComplete: (results: any) => void;\r\n  onClose: () => void;\r\n}\r\n\r\nconst VocabularyEvaluation: React.FC<VocabularyEvaluationProps> = ({\r\n  assignment,\r\n  learningHistory,\r\n  onComplete,\r\n  onClose,\r\n}) => {\r\n  const [evaluationWords, setEvaluationWords] = useState<EvaluationWord[]>([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [autoCompletedText, setAutoCompletedText] = useState('');\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // 평가 대상 단어 추출 (1차 학습에서 어려웠던 단어들)\r\n  useEffect(() => {\r\n    if (!learningHistory || learningHistory.length === 0) {\r\n      console.error('No learning history found');\r\n      return;\r\n    }\r\n\r\n    // 가장 최근 학습 기록에서 첫 번째 라운드 데이터 가져오기\r\n    const latestLearning = learningHistory[learningHistory.length - 1];\r\n    const firstRound = latestLearning.rounds?.[0];\r\n    \r\n    if (!firstRound || !firstRound.wordStates) {\r\n      console.error('No first round data found');\r\n      return;\r\n    }\r\n\r\n    // \"1번 더 볼래요\", \"모르겠어요\", \"아 몰랐어요\" 단어만 추출\r\n    const difficultWords = firstRound.wordStates\r\n      .filter((wordState: any) => \r\n        wordState.status === 'repeat' || \r\n        wordState.status === 'unknown' || \r\n        wordState.status === 'forgot'\r\n      )\r\n      .map((wordState: any) => ({\r\n        unit: wordState.word.unit,\r\n        english: wordState.word.english,\r\n        meaning: wordState.word.meaning,\r\n      }));\r\n\r\n    setEvaluationWords(difficultWords);\r\n  }, [learningHistory]);\r\n\r\n  // 첫 글자 입력 시 자동완성 처리\r\n  useEffect(() => {\r\n    if (!userInput || currentIndex >= evaluationWords.length) return;\r\n\r\n    const currentWord = evaluationWords[currentIndex];\r\n    const meanings = currentWord.meaning.split(',').map(m => m.trim());\r\n    \r\n    // 각 뜻에 대해 첫 글자 매칭 확인\r\n    for (const meaning of meanings) {\r\n      // 특수 패턴 처리 (A에게 B를 제공하다, ~라고 생각한다 등)\r\n      const patterns = [\r\n        /A에게 B를 (.+)$/,\r\n        /~라고 (.+)$/,\r\n        /~을 (.+)$/,\r\n        /~를 (.+)$/,\r\n        /~에 (.+)$/,\r\n        /~에게 (.+)$/,\r\n      ];\r\n\r\n      let targetWord = meaning;\r\n      let prefix = '';\r\n      let suffix = '';\r\n\r\n      // 패턴 매칭\r\n      for (const pattern of patterns) {\r\n        const match = meaning.match(pattern);\r\n        if (match) {\r\n          targetWord = match[1];\r\n          prefix = meaning.substring(0, match.index! + meaning.indexOf(match[1]));\r\n          suffix = '';\r\n          break;\r\n        }\r\n      }\r\n\r\n      // 일반적인 경우 (패턴이 없는 경우)\r\n      if (prefix === '' && targetWord === meaning) {\r\n        // 첫 글자가 일치하는지 확인\r\n        if (targetWord.startsWith(userInput)) {\r\n          setAutoCompletedText(targetWord);\r\n          setIsCorrect(true);\r\n          return;\r\n        }\r\n      } else {\r\n        // 패턴이 있는 경우\r\n        if (targetWord.startsWith(userInput)) {\r\n          setAutoCompletedText(meaning);\r\n          setIsCorrect(true);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    // 일치하는 첫 글자가 없으면\r\n    setAutoCompletedText('');\r\n    setIsCorrect(false);\r\n  }, [userInput, currentIndex, evaluationWords]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n    if (value.length <= 1) { // 첫 글자만 입력 가능\r\n      setUserInput(value);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentIndex >= evaluationWords.length) return;\r\n\r\n    // 현재 단어 결과 저장\r\n    const updatedWords = [...evaluationWords];\r\n    updatedWords[currentIndex] = {\r\n      ...updatedWords[currentIndex],\r\n      isCorrect: isCorrect,\r\n      userInput: userInput,\r\n    };\r\n    setEvaluationWords(updatedWords);\r\n\r\n    // 다음 단어로\r\n    if (currentIndex < evaluationWords.length - 1) {\r\n      setCurrentIndex(currentIndex + 1);\r\n      setUserInput('');\r\n      setAutoCompletedText('');\r\n      setIsCorrect(false);\r\n      setShowResult(false);\r\n      inputRef.current?.focus();\r\n    } else {\r\n      // 평가 완료\r\n      handleEvaluationComplete();\r\n    }\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    // 건너뛰기는 오답 처리\r\n    setIsCorrect(false);\r\n    handleNext();\r\n  };\r\n\r\n  const handleEvaluationComplete = () => {\r\n    const results = {\r\n      totalWords: evaluationWords.length,\r\n      correctWords: evaluationWords.filter(w => w.isCorrect).length,\r\n      incorrectWords: evaluationWords.filter(w => !w.isCorrect),\r\n      evaluationLevel: 1, // 1차 평가\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n\r\n    setShowResult(true);\r\n    setTimeout(() => {\r\n      onComplete(results);\r\n    }, 2000);\r\n  };\r\n\r\n  if (evaluationWords.length === 0) {\r\n    return (\r\n      <Dialog open={true} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>평가 준비 중...</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>평가할 단어를 준비하고 있습니다.</Typography>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  const currentWord = evaluationWords[currentIndex];\r\n  const progress = ((currentIndex + 1) / evaluationWords.length) * 100;\r\n\r\n  return (\r\n    <Dialog\r\n      open={true}\r\n      onClose={onClose}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n      PaperProps={{\r\n        sx: { height: '80vh', display: 'flex', flexDirection: 'column' }\r\n      }}\r\n    >\r\n      <DialogTitle sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n          <Typography variant=\"h6\">1차 평가</Typography>\r\n          <Chip\r\n            label={`${currentIndex + 1} / ${evaluationWords.length}`}\r\n            color=\"primary\"\r\n            size=\"small\"\r\n          />\r\n        </Box>\r\n        <IconButton onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n\r\n      <DialogContent sx={{ flex: 1, display: 'flex', flexDirection: 'column', gap: 3 }}>\r\n        {/* 진행률 표시 */}\r\n        <Box>\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            value={progress}\r\n            sx={{ height: 8, borderRadius: 4 }}\r\n          />\r\n        </Box>\r\n\r\n        {/* 단어 카드 */}\r\n        <Card sx={{ flex: 1, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n          <CardContent sx={{ textAlign: 'center', width: '100%', maxWidth: 600 }}>\r\n            {/* 영어 단어 */}\r\n            <Typography variant=\"h3\" sx={{ mb: 4, fontWeight: 'bold' }}>\r\n              {currentWord?.english}\r\n            </Typography>\r\n\r\n            {/* 입력 필드 */}\r\n            <Box sx={{ mb: 4 }}>\r\n              <TextField\r\n                ref={inputRef}\r\n                value={userInput}\r\n                onChange={handleInputChange}\r\n                placeholder=\"뜻의 첫 글자를 입력하세요\"\r\n                variant=\"outlined\"\r\n                size=\"medium\"\r\n                autoFocus\r\n                sx={{\r\n                  width: '100%',\r\n                  maxWidth: 400,\r\n                  '& .MuiOutlinedInput-root': {\r\n                    fontSize: '1.5rem',\r\n                  }\r\n                }}\r\n              />\r\n            </Box>\r\n\r\n            {/* 자동완성 결과 */}\r\n            {autoCompletedText && (\r\n              <Paper\r\n                elevation={3}\r\n                sx={{\r\n                  p: 3,\r\n                  bgcolor: isCorrect ? 'success.50' : 'error.50',\r\n                  border: 2,\r\n                  borderColor: isCorrect ? 'success.main' : 'error.main',\r\n                  borderRadius: 2,\r\n                }}\r\n              >\r\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: 2 }}>\r\n                  {isCorrect ? (\r\n                    <CheckCircleIcon color=\"success\" sx={{ fontSize: 40 }} />\r\n                  ) : (\r\n                    <CancelIcon color=\"error\" sx={{ fontSize: 40 }} />\r\n                  )}\r\n                  <Typography variant=\"h5\">\r\n                    {autoCompletedText}\r\n                  </Typography>\r\n                </Box>\r\n              </Paper>\r\n            )}\r\n\r\n            {/* 원래 뜻 (디버깅용 - 나중에 제거) */}\r\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 2, display: 'block' }}>\r\n              정답: {currentWord?.meaning}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* 액션 버튼 */}\r\n        <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center' }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            onClick={handleSkip}\r\n            disabled={showResult}\r\n          >\r\n            건너뛰기 (오답)\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            onClick={handleNext}\r\n            disabled={!userInput && !showResult}\r\n            endIcon={<NavigateNextIcon />}\r\n          >\r\n            {currentIndex === evaluationWords.length - 1 ? '평가 완료' : '다음 단어'}\r\n          </Button>\r\n        </Box>\r\n      </DialogContent>\r\n\r\n      {/* 결과 다이얼로그 */}\r\n      <Dialog open={showResult} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>1차 평가 결과</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ textAlign: 'center', py: 3 }}>\r\n            <Typography variant=\"h4\" sx={{ mb: 2 }}>\r\n              {evaluationWords.filter(w => w.isCorrect).length} / {evaluationWords.length}\r\n            </Typography>\r\n            <Typography variant=\"h6\" color=\"primary\">\r\n              정답률: {Math.round((evaluationWords.filter(w => w.isCorrect).length / evaluationWords.length) * 100)}%\r\n            </Typography>\r\n            {evaluationWords.filter(w => !w.isCorrect).length > 0 && (\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n                오답 {evaluationWords.filter(w => !w.isCorrect).length}개는 2차 평가에서 다시 확인합니다.\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default VocabularyEvaluation; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\pro_planner\\\\src\\\\components\\\\VocabularyEvaluation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, Typography, Card, CardContent, TextField, Button, LinearProgress, Dialog, DialogTitle, DialogContent, DialogActions, Chip, IconButton, Paper } from '@mui/material';\nimport { Close as CloseIcon, CheckCircle as CheckCircleIcon, NavigateNext as NavigateNextIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VocabularyEvaluation = ({\n  vocabularyData,\n  evaluationLevel,\n  previousEvaluation,\n  onComplete,\n  onClose\n}) => {\n  _s();\n  const [evaluationWords, setEvaluationWords] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [userInput, setUserInput] = useState('');\n  const [showResult, setShowResult] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [autoCompletedText, setAutoCompletedText] = useState('');\n  const inputRef = useRef(null);\n\n  // 평가 대상 단어 추출\n  useEffect(() => {\n    const words = getEvaluationWords();\n    setEvaluationWords(words);\n  }, []);\n  const getEvaluationWords = () => {\n    // 1차 평가: 전체 단어\n    if (evaluationLevel === 1) {\n      if (!vocabularyData) return [];\n      return vocabularyData.map(word => ({\n        ...word,\n        isCorrect: undefined,\n        userInput: undefined\n      }));\n    }\n\n    // 2차 이상: 이전 평가에서 틀린 단어만\n    if (previousEvaluation !== null && previousEvaluation !== void 0 && previousEvaluation.incorrectWords) {\n      return previousEvaluation.incorrectWords.map(word => ({\n        ...word,\n        isCorrect: undefined,\n        userInput: undefined\n      }));\n    }\n    return [];\n  };\n\n  // 사용자 입력에 따른 자동완성\n  useEffect(() => {\n    if (!userInput || currentIndex >= evaluationWords.length) return;\n    const currentWord = evaluationWords[currentIndex];\n    const meanings = currentWord.meaning.split(',').map(m => m.trim());\n\n    // 각 뜻에 대해 첫 글자 매칭 확인\n    for (const meaning of meanings) {\n      // 괄호 내용 제거\n      const cleanedMeaning = meaning.replace(/\\([^)]*\\)\\s*/g, '').trim();\n\n      // 첫 글자가 일치하는지 확인\n      if (cleanedMeaning.startsWith(userInput)) {\n        setAutoCompletedText(meaning);\n        setIsCorrect(true);\n        return;\n      }\n    }\n\n    // 일치하는 첫 글자가 없으면\n    setAutoCompletedText('');\n    setIsCorrect(false);\n  }, [userInput, currentIndex, evaluationWords]);\n  const handleInputChange = e => {\n    const value = e.target.value;\n    if (value.length <= 1) {\n      setUserInput(value);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && autoCompletedText && isCorrect) {\n      handleNext();\n    }\n  };\n  const handleNext = (skipMode = false) => {\n    if (currentIndex >= evaluationWords.length) return;\n    if (!skipMode && !userInput) {\n      alert('답을 입력해주세요.');\n      return;\n    }\n\n    // 현재 단어 결과 저장\n    const updatedWords = [...evaluationWords];\n    updatedWords[currentIndex] = {\n      ...updatedWords[currentIndex],\n      isCorrect: skipMode ? false : isCorrect,\n      userInput: userInput || '(건너뛰기)'\n    };\n    setEvaluationWords(updatedWords);\n\n    // 다음 단어로\n    if (currentIndex < evaluationWords.length - 1) {\n      var _inputRef$current;\n      setCurrentIndex(currentIndex + 1);\n      setUserInput('');\n      setAutoCompletedText('');\n      setIsCorrect(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    } else {\n      // 평가 완료\n      handleEvaluationComplete();\n    }\n  };\n  const handleSkip = () => {\n    handleNext(true);\n  };\n  const handleEvaluationComplete = () => {\n    const correctWords = evaluationWords.filter(w => w.isCorrect === true);\n    const incorrectWords = evaluationWords.filter(w => w.isCorrect !== true);\n    const results = {\n      evaluationLevel: evaluationLevel,\n      totalWords: evaluationWords.length,\n      correctWords: correctWords.length,\n      incorrectWords: incorrectWords,\n      correctRate: Math.round(correctWords.length / evaluationWords.length * 100),\n      timestamp: new Date().toISOString()\n    };\n    setShowResult(true);\n    setTimeout(() => {\n      onComplete(results);\n    }, 2000);\n  };\n  if (evaluationWords.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: true,\n      onClose: onClose,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"\\uD3C9\\uAC00 \\uC900\\uBE44\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            py: 2,\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              mb: 2\n            },\n            children: \"\\uD3C9\\uAC00\\uD560 \\uB2E8\\uC5B4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClose,\n          children: \"\\uB2EB\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this);\n  }\n  const currentWord = evaluationWords[currentIndex];\n  const progress = (currentIndex + 1) / evaluationWords.length * 100;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    onClose: onClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    PaperProps: {\n      sx: {\n        height: '80vh',\n        display: 'flex',\n        flexDirection: 'column'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [evaluationLevel, \"\\uCC28 \\uD3C9\\uAC00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: `${currentIndex + 1} / ${evaluationWords.length}`,\n          color: \"primary\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      sx: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: progress,\n          sx: {\n            height: 8,\n            borderRadius: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          flex: 1,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            textAlign: 'center',\n            width: '100%',\n            maxWidth: 600\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            sx: {\n              mb: 4,\n              fontWeight: 'bold'\n            },\n            children: currentWord === null || currentWord === void 0 ? void 0 : currentWord.english\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 4\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              ref: inputRef,\n              value: userInput,\n              onChange: handleInputChange,\n              onKeyPress: handleKeyPress,\n              placeholder: \"\\uB73B\\uC758 \\uCCAB \\uAE00\\uC790\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n              variant: \"outlined\",\n              size: \"medium\",\n              autoFocus: true,\n              sx: {\n                width: '100%',\n                maxWidth: 400,\n                '& .MuiOutlinedInput-root': {\n                  fontSize: '1.5rem'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), autoCompletedText && /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            onClick: isCorrect ? () => handleNext() : undefined,\n            sx: {\n              p: 3,\n              bgcolor: isCorrect ? 'success.50' : 'error.50',\n              border: 2,\n              borderColor: isCorrect ? 'success.main' : 'error.main',\n              borderRadius: 2,\n              cursor: isCorrect ? 'pointer' : 'default',\n              maxWidth: 400,\n              mx: 'auto',\n              transition: 'all 0.3s ease',\n              '&:hover': isCorrect ? {\n                bgcolor: 'success.100',\n                transform: 'scale(1.02)'\n              } : {}\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                gap: 1\n              },\n              children: [isCorrect && /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                color: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: isCorrect ? 'success.main' : 'error.main',\n                children: autoCompletedText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), isCorrect && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 1,\n                display: 'block'\n              },\n              children: \"\\uD074\\uB9AD\\uD558\\uAC70\\uB098 Enter\\uB97C \\uB20C\\uB7EC \\uB2E4\\uC74C\\uC73C\\uB85C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"large\",\n          onClick: handleSkip,\n          disabled: showResult,\n          children: \"\\uAC74\\uB108\\uB6F0\\uAE30 (\\uC624\\uB2F5)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"large\",\n          onClick: () => handleNext(),\n          disabled: !userInput && !showResult,\n          endIcon: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 22\n          }, this),\n          children: currentIndex === evaluationWords.length - 1 ? '평가 완료' : '다음 단어'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showResult,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [evaluationLevel, \"\\uCC28 \\uD3C9\\uAC00 \\uACB0\\uACFC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center',\n            py: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            sx: {\n              mb: 2\n            },\n            children: [evaluationWords.filter(w => w.isCorrect === true).length, \" / \", evaluationWords.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            children: [\"\\uC815\\uB2F5\\uB960: \", Math.round(evaluationWords.filter(w => w.isCorrect === true).length / evaluationWords.length * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), evaluationWords.filter(w => w.isCorrect !== true).length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"success.main\",\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this), \" \\uBAA8\\uB450 \\uC815\\uB2F5!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"success.main\",\n              sx: {\n                mt: 1,\n                fontWeight: 600\n              },\n              children: [evaluationLevel, \"\\uCC28 \\uD3C9\\uAC00 \\uC644\\uBCBD \\uD1B5\\uACFC! \\uD83C\\uDF89\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              children: [\"\\uC624\\uB2F5: \", evaluationWords.filter(w => w.isCorrect !== true).length, \"\\uAC1C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), evaluationLevel < 3 && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 1\n              },\n              children: [\"\\uC624\\uB2F5 \\uB2E8\\uC5B4\\uB294 \", evaluationLevel + 1, \"\\uCC28 \\uD3C9\\uAC00\\uC5D0\\uC11C \\uB2E4\\uC2DC \\uD655\\uC778\\uD569\\uB2C8\\uB2E4.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(VocabularyEvaluation, \"LyFAAciLIPvkOdYswwG0fglSUtE=\");\n_c = VocabularyEvaluation;\nexport default VocabularyEvaluation;\nvar _c;\n$RefreshReg$(_c, \"VocabularyEvaluation\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Typography","Card","CardContent","TextField","Button","LinearProgress","Dialog","DialogTitle","DialogContent","DialogActions","Chip","IconButton","Paper","Close","CloseIcon","CheckCircle","CheckCircleIcon","NavigateNext","NavigateNextIcon","jsxDEV","_jsxDEV","VocabularyEvaluation","vocabularyData","evaluationLevel","previousEvaluation","onComplete","onClose","_s","evaluationWords","setEvaluationWords","currentIndex","setCurrentIndex","userInput","setUserInput","showResult","setShowResult","isCorrect","setIsCorrect","autoCompletedText","setAutoCompletedText","inputRef","words","getEvaluationWords","map","word","undefined","incorrectWords","length","currentWord","meanings","meaning","split","m","trim","cleanedMeaning","replace","startsWith","handleInputChange","e","value","target","handleKeyPress","key","handleNext","skipMode","alert","updatedWords","_inputRef$current","current","focus","handleEvaluationComplete","handleSkip","correctWords","filter","w","results","totalWords","correctRate","Math","round","timestamp","Date","toISOString","setTimeout","open","maxWidth","fullWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","py","textAlign","variant","mb","onClick","progress","PaperProps","height","display","flexDirection","alignItems","justifyContent","gap","label","color","size","flex","borderRadius","width","fontWeight","english","ref","onChange","onKeyPress","placeholder","autoFocus","fontSize","elevation","p","bgcolor","border","borderColor","cursor","mx","transition","transform","mt","disabled","endIcon","_c","$RefreshReg$"],"sources":["C:/Users/user/pro_planner/src/components/VocabularyEvaluation.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n  LinearProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Chip,\r\n  IconButton,\r\n  Paper,\r\n} from '@mui/material';\r\nimport {\r\n  Close as CloseIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  NavigateNext as NavigateNextIcon,\r\n} from '@mui/icons-material';\r\n\r\ninterface VocabularyWord {\r\n  unit: string;\r\n  english: string;\r\n  meaning: string;\r\n}\r\n\r\ninterface EvaluationWord extends VocabularyWord {\r\n  isCorrect?: boolean;\r\n  userInput?: string;\r\n}\r\n\r\ninterface VocabularyEvaluationProps {\r\n  vocabularyData: VocabularyWord[];\r\n  evaluationLevel: number;\r\n  previousEvaluation?: any;\r\n  onComplete: (results: any) => void;\r\n  onClose: () => void;\r\n}\r\n\r\nconst VocabularyEvaluation: React.FC<VocabularyEvaluationProps> = ({\r\n  vocabularyData,\r\n  evaluationLevel,\r\n  previousEvaluation,\r\n  onComplete,\r\n  onClose,\r\n}) => {\r\n  const [evaluationWords, setEvaluationWords] = useState<EvaluationWord[]>([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [autoCompletedText, setAutoCompletedText] = useState('');\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // 평가 대상 단어 추출\r\n  useEffect(() => {\r\n    const words = getEvaluationWords();\r\n    setEvaluationWords(words);\r\n  }, []);\r\n\r\n  const getEvaluationWords = (): EvaluationWord[] => {\r\n    // 1차 평가: 전체 단어\r\n    if (evaluationLevel === 1) {\r\n      if (!vocabularyData) return [];\r\n      return vocabularyData.map((word: VocabularyWord) => ({\r\n        ...word,\r\n        isCorrect: undefined,\r\n        userInput: undefined,\r\n      }));\r\n    }\r\n\r\n    // 2차 이상: 이전 평가에서 틀린 단어만\r\n    if (previousEvaluation?.incorrectWords) {\r\n      return previousEvaluation.incorrectWords.map((word: VocabularyWord) => ({\r\n        ...word,\r\n        isCorrect: undefined,\r\n        userInput: undefined,\r\n      }));\r\n    }\r\n\r\n    return [];\r\n  };\r\n\r\n  // 사용자 입력에 따른 자동완성\r\n  useEffect(() => {\r\n    if (!userInput || currentIndex >= evaluationWords.length) return;\r\n\r\n    const currentWord = evaluationWords[currentIndex];\r\n    const meanings = currentWord.meaning.split(',').map(m => m.trim());\r\n    \r\n    // 각 뜻에 대해 첫 글자 매칭 확인\r\n    for (const meaning of meanings) {\r\n      // 괄호 내용 제거\r\n      const cleanedMeaning = meaning.replace(/\\([^)]*\\)\\s*/g, '').trim();\r\n      \r\n      // 첫 글자가 일치하는지 확인\r\n      if (cleanedMeaning.startsWith(userInput)) {\r\n        setAutoCompletedText(meaning);\r\n        setIsCorrect(true);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // 일치하는 첫 글자가 없으면\r\n    setAutoCompletedText('');\r\n    setIsCorrect(false);\r\n  }, [userInput, currentIndex, evaluationWords]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n    if (value.length <= 1) {\r\n      setUserInput(value);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter' && autoCompletedText && isCorrect) {\r\n      handleNext();\r\n    }\r\n  };\r\n\r\n  const handleNext = (skipMode = false) => {\r\n    if (currentIndex >= evaluationWords.length) return;\r\n\r\n    if (!skipMode && !userInput) {\r\n      alert('답을 입력해주세요.');\r\n      return;\r\n    }\r\n\r\n    // 현재 단어 결과 저장\r\n    const updatedWords = [...evaluationWords];\r\n    updatedWords[currentIndex] = {\r\n      ...updatedWords[currentIndex],\r\n      isCorrect: skipMode ? false : isCorrect,\r\n      userInput: userInput || '(건너뛰기)',\r\n    };\r\n    setEvaluationWords(updatedWords);\r\n\r\n    // 다음 단어로\r\n    if (currentIndex < evaluationWords.length - 1) {\r\n      setCurrentIndex(currentIndex + 1);\r\n      setUserInput('');\r\n      setAutoCompletedText('');\r\n      setIsCorrect(false);\r\n      inputRef.current?.focus();\r\n    } else {\r\n      // 평가 완료\r\n      handleEvaluationComplete();\r\n    }\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    handleNext(true);\r\n  };\r\n\r\n  const handleEvaluationComplete = () => {\r\n    const correctWords = evaluationWords.filter(w => w.isCorrect === true);\r\n    const incorrectWords = evaluationWords.filter(w => w.isCorrect !== true);\r\n    \r\n    const results = {\r\n      evaluationLevel: evaluationLevel,\r\n      totalWords: evaluationWords.length,\r\n      correctWords: correctWords.length,\r\n      incorrectWords: incorrectWords,\r\n      correctRate: Math.round((correctWords.length / evaluationWords.length) * 100),\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n\r\n    setShowResult(true);\r\n    setTimeout(() => {\r\n      onComplete(results);\r\n    }, 2000);\r\n  };\r\n\r\n  if (evaluationWords.length === 0) {\r\n    return (\r\n      <Dialog open={true} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>평가 준비</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ py: 2, textAlign: 'center' }}>\r\n            <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n              평가할 단어가 없습니다.\r\n            </Typography>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onClose}>닫기</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  const currentWord = evaluationWords[currentIndex];\r\n  const progress = ((currentIndex + 1) / evaluationWords.length) * 100;\r\n\r\n  return (\r\n    <Dialog\r\n      open={true}\r\n      onClose={onClose}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n      PaperProps={{\r\n        sx: { height: '80vh', display: 'flex', flexDirection: 'column' }\r\n      }}\r\n    >\r\n      <DialogTitle sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n          <Typography variant=\"h6\">{evaluationLevel}차 평가</Typography>\r\n          <Chip\r\n            label={`${currentIndex + 1} / ${evaluationWords.length}`}\r\n            color=\"primary\"\r\n            size=\"small\"\r\n          />\r\n        </Box>\r\n        <IconButton onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n\r\n      <DialogContent sx={{ flex: 1, display: 'flex', flexDirection: 'column', gap: 3 }}>\r\n        {/* 진행률 표시 */}\r\n        <Box>\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            value={progress}\r\n            sx={{ height: 8, borderRadius: 4 }}\r\n          />\r\n        </Box>\r\n\r\n        {/* 단어 카드 */}\r\n        <Card sx={{ flex: 1, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n          <CardContent sx={{ textAlign: 'center', width: '100%', maxWidth: 600 }}>\r\n            {/* 영어 단어 */}\r\n            <Typography variant=\"h3\" sx={{ mb: 4, fontWeight: 'bold' }}>\r\n              {currentWord?.english}\r\n            </Typography>\r\n\r\n            {/* 입력 필드 */}\r\n            <Box sx={{ mb: 4 }}>\r\n              <TextField\r\n                ref={inputRef}\r\n                value={userInput}\r\n                onChange={handleInputChange}\r\n                onKeyPress={handleKeyPress}\r\n                placeholder=\"뜻의 첫 글자를 입력하세요\"\r\n                variant=\"outlined\"\r\n                size=\"medium\"\r\n                autoFocus\r\n                sx={{\r\n                  width: '100%',\r\n                  maxWidth: 400,\r\n                  '& .MuiOutlinedInput-root': {\r\n                    fontSize: '1.5rem',\r\n                  }\r\n                }}\r\n              />\r\n            </Box>\r\n\r\n            {/* 자동완성 결과 */}\r\n            {autoCompletedText && (\r\n              <Paper\r\n                elevation={3}\r\n                onClick={isCorrect ? () => handleNext() : undefined}\r\n                sx={{\r\n                  p: 3,\r\n                  bgcolor: isCorrect ? 'success.50' : 'error.50',\r\n                  border: 2,\r\n                  borderColor: isCorrect ? 'success.main' : 'error.main',\r\n                  borderRadius: 2,\r\n                  cursor: isCorrect ? 'pointer' : 'default',\r\n                  maxWidth: 400,\r\n                  mx: 'auto',\r\n                  transition: 'all 0.3s ease',\r\n                  '&:hover': isCorrect ? {\r\n                    bgcolor: 'success.100',\r\n                    transform: 'scale(1.02)',\r\n                  } : {},\r\n                }}\r\n              >\r\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: 1 }}>\r\n                  {isCorrect && <CheckCircleIcon color=\"success\" />}\r\n                  <Typography variant=\"h6\" color={isCorrect ? 'success.main' : 'error.main'}>\r\n                    {autoCompletedText}\r\n                  </Typography>\r\n                </Box>\r\n                {isCorrect && (\r\n                  <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1, display: 'block' }}>\r\n                    클릭하거나 Enter를 눌러 다음으로\r\n                  </Typography>\r\n                )}\r\n              </Paper>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* 액션 버튼 */}\r\n        <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center' }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            onClick={handleSkip}\r\n            disabled={showResult}\r\n          >\r\n            건너뛰기 (오답)\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            onClick={() => handleNext()}\r\n            disabled={!userInput && !showResult}\r\n            endIcon={<NavigateNextIcon />}\r\n          >\r\n            {currentIndex === evaluationWords.length - 1 ? '평가 완료' : '다음 단어'}\r\n          </Button>\r\n        </Box>\r\n      </DialogContent>\r\n\r\n      {/* 결과 다이얼로그 */}\r\n      <Dialog open={showResult} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>{evaluationLevel}차 평가 결과</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ textAlign: 'center', py: 3 }}>\r\n            <Typography variant=\"h4\" sx={{ mb: 2 }}>\r\n              {evaluationWords.filter(w => w.isCorrect === true).length} / {evaluationWords.length}\r\n            </Typography>\r\n            <Typography variant=\"h6\" color=\"primary\">\r\n              정답률: {Math.round((evaluationWords.filter(w => w.isCorrect === true).length / evaluationWords.length) * 100)}%\r\n            </Typography>\r\n            \r\n            {evaluationWords.filter(w => w.isCorrect !== true).length === 0 ? (\r\n              <Box sx={{ mt: 2 }}>\r\n                <Typography variant=\"h6\" color=\"success.main\" sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: 1 }}>\r\n                  <CheckCircleIcon /> 모두 정답!\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"success.main\" sx={{ mt: 1, fontWeight: 600 }}>\r\n                  {evaluationLevel}차 평가 완벽 통과! 🎉\r\n                </Typography>\r\n              </Box>\r\n            ) : (\r\n              <Box sx={{ mt: 2 }}>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                  오답: {evaluationWords.filter(w => w.isCorrect !== true).length}개\r\n                </Typography>\r\n                {evaluationLevel < 3 && (\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                    오답 단어는 {evaluationLevel + 1}차 평가에서 다시 확인합니다.\r\n                  </Typography>\r\n                )}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default VocabularyEvaluation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\pro_planner\\\\src\\\\components\\\\VocabularyEvaluation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, Card, CardContent, Button, TextField, LinearProgress, IconButton, useTheme, useMediaQuery, Container, Alert, Chip } from '@mui/material';\nimport { CheckCircle as CheckCircleIcon, Close as CloseIcon, PlayArrow as PlayArrowIcon, Send as SendIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VocabularyEvaluation = ({\n  vocabularyData,\n  onComplete,\n  onClose\n}) => {\n  _s();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [isEvaluating, setIsEvaluating] = useState(false);\n  const [evaluationResults, setEvaluationResults] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [currentResult, setCurrentResult] = useState(null);\n\n  // 데이터 유효성 검사\n  if (!vocabularyData || vocabularyData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        py: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          borderRadius: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            p: 3,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"error\",\n            children: \"\\uD3C9\\uAC00\\uD560 \\uB2E8\\uC5B4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            sx: {\n              mt: 2\n            },\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n  const currentWord = vocabularyData[currentWordIndex];\n  const progress = (currentWordIndex + 1) / vocabularyData.length * 100;\n\n  // 디버깅 로그 추가\n  console.log('=== VocabularyEvaluation 디버깅 ===');\n  console.log('vocabularyData:', vocabularyData);\n  console.log('currentWordIndex:', currentWordIndex);\n  console.log('currentWord:', currentWord);\n  console.log('currentWord.word:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.word);\n  console.log('currentWord.meaning:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.meaning);\n\n  // 현재 단어가 유효한지 확인\n  if (!currentWord) {\n    console.error('currentWord가 undefined입니다');\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        py: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          borderRadius: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            p: 3,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"error\",\n            children: \"\\uB2E8\\uC5B4 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC62C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            sx: {\n              mt: 2\n            },\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n  const evaluateWithGemini = async (userAnswer, correctAnswer, word) => {\n    try {\n      const GEMINI_API_KEY = process.env.REACT_APP_GEMINI_API_KEY;\n      console.log('=== Gemini API 디버깅 ===');\n      console.log('환경변수 GEMINI_API_KEY 존재 여부:', !!GEMINI_API_KEY);\n      console.log('API 키 앞 10자리:', GEMINI_API_KEY ? GEMINI_API_KEY.substring(0, 10) + '...' : 'undefined');\n      if (!GEMINI_API_KEY) {\n        console.log('Gemini API 키가 없어 로컬 채점을 사용합니다.');\n        return evaluateLocally(userAnswer, correctAnswer);\n      }\n      const prompt = `다음 영어 단어의 뜻을 채점해주세요:\n영어 단어: ${word}\n정답: ${correctAnswer}\n사용자 답변: ${userAnswer}\n점수만 숫자로 답변해주세요. (100: 정답, 50-90: 부분정답, 0: 오답)`;\n      console.log('Gemini API 호출 시작...');\n      console.log('프롬프트:', prompt);\n      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${GEMINI_API_KEY}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: prompt\n            }]\n          }]\n        })\n      });\n      console.log('API 응답 상태:', response.status);\n      console.log('API 응답 OK:', response.ok);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API 응답 오류 내용:', errorText);\n        throw new Error(`API 응답 오류: ${response.status} - ${errorText}`);\n      }\n      const data = await response.json();\n      console.log('API 응답 데이터:', data);\n      if (!data.candidates || !data.candidates[0] || !data.candidates[0].content) {\n        console.error('API 응답 형식 오류:', data);\n        throw new Error('API 응답 형식 오류');\n      }\n      const scoreText = data.candidates[0].content.parts[0].text.trim();\n      console.log('추출된 점수 텍스트:', scoreText);\n      const score = parseInt(scoreText);\n      console.log('파싱된 점수:', score);\n      if (isNaN(score)) {\n        throw new Error(`점수 파싱 오류: \"${scoreText}\"`);\n      }\n      const finalScore = Math.max(0, Math.min(100, score));\n      console.log('최종 점수:', finalScore);\n      return finalScore;\n    } catch (error) {\n      console.error('Gemini API 호출 실패:', error);\n      console.log('로컬 채점으로 대체합니다.');\n      return evaluateLocally(userAnswer, correctAnswer);\n    }\n  };\n  const evaluateLocally = (userAnswer, correctAnswer) => {\n    // undefined나 null 체크\n    if (!userAnswer || !correctAnswer) {\n      console.error('Invalid input for evaluation:', {\n        userAnswer,\n        correctAnswer\n      });\n      return 0;\n    }\n    const cleanUser = userAnswer.toString().trim().toLowerCase();\n    const cleanCorrect = correctAnswer.toString().trim().toLowerCase();\n\n    // 정확한 매칭\n    if (cleanUser === cleanCorrect) return 100;\n\n    // 부분 매칭 (키워드 포함)\n    const userWords = cleanUser.split(/[\\s,]+/).filter(word => word.length > 0);\n    const correctWords = cleanCorrect.split(/[\\s,]+/).filter(word => word.length > 0);\n    if (userWords.length === 0 || correctWords.length === 0) {\n      return 0;\n    }\n    let matchCount = 0;\n    userWords.forEach(userWord => {\n      correctWords.forEach(correctWord => {\n        // 완전 일치\n        if (userWord === correctWord) {\n          matchCount += 2;\n        }\n        // 부분 포함\n        else if (userWord.includes(correctWord) || correctWord.includes(userWord)) {\n          matchCount += 1;\n        }\n      });\n    });\n    if (matchCount > 0) {\n      const maxPossibleMatches = Math.max(userWords.length, correctWords.length) * 2;\n      const score = Math.round(matchCount / maxPossibleMatches * 100);\n      return Math.min(90, score); // 최대 90점으로 제한\n    }\n    return 0;\n  };\n  const handleSubmitAnswer = async () => {\n    console.log('=== handleSubmitAnswer 디버깅 ===');\n    console.log('userAnswer:', userAnswer);\n    console.log('userAnswer.trim():', userAnswer === null || userAnswer === void 0 ? void 0 : userAnswer.trim());\n    console.log('currentWord:', currentWord);\n    console.log('currentWord.meaning:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.meaning);\n    console.log('currentWord.word:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.word);\n    console.log('currentWord.id:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.id);\n    if (!userAnswer || !userAnswer.trim()) {\n      console.error('사용자 답변이 비어있음');\n      alert('답변을 입력해주세요.');\n      return;\n    }\n    if (!currentWord) {\n      console.error('currentWord가 undefined');\n      alert('단어 정보가 올바르지 않습니다. (currentWord 없음)');\n      return;\n    }\n    if (!currentWord.meaning) {\n      console.error('currentWord.meaning이 undefined:', currentWord);\n      alert('단어 정보가 올바르지 않습니다. (meaning 없음)');\n      return;\n    }\n    setIsEvaluating(true);\n    try {\n      const score = await evaluateWithGemini(userAnswer, currentWord.meaning, currentWord.word);\n      const isCorrect = score >= 80;\n      const result = {\n        wordId: currentWord.id || 'unknown',\n        word: currentWord.word || 'unknown',\n        userAnswer: userAnswer.trim(),\n        correctAnswer: currentWord.meaning || 'unknown',\n        score: score,\n        isCorrect: isCorrect\n      };\n      setCurrentResult(result);\n      setShowResult(true);\n    } catch (error) {\n      console.error('평가 중 오류 발생:', error);\n      alert('평가 중 오류가 발생했습니다.');\n    } finally {\n      setIsEvaluating(false);\n    }\n  };\n  const handleNextWord = () => {\n    if (currentResult) {\n      setEvaluationResults([...evaluationResults, currentResult]);\n    }\n    if (currentWordIndex + 1 < vocabularyData.length) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setUserAnswer('');\n      setShowResult(false);\n      setCurrentResult(null);\n    } else {\n      const finalResults = currentResult ? [...evaluationResults, currentResult] : evaluationResults;\n      onComplete(finalResults);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      py: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        borderRadius: isMobile ? 2 : 1\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          p: isMobile ? 3 : 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              fontWeight: 600\n            },\n            children: \"\\uB2E8\\uC5B4 \\uD3C9\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: onClose,\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [currentWordIndex + 1, \" / \", vocabularyData.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"primary\",\n              children: [Math.round(progress), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n            variant: \"determinate\",\n            value: progress,\n            sx: {\n              height: 8,\n              borderRadius: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), !showResult ? /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              sx: {\n                fontWeight: 700,\n                mb: 2\n              },\n              children: currentWord.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), currentWord.example && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              sx: {\n                mb: 2\n              },\n              children: [\"\\uC608\\uBB38: \", currentWord.example]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                mb: 2\n              },\n              children: \"\\uC774 \\uB2E8\\uC5B4\\uC758 \\uB73B\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              rows: 3,\n              variant: \"outlined\",\n              placeholder: \"\\uB73B\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n              value: userAnswer,\n              onChange: e => setUserAnswer(e.target.value),\n              onKeyPress: e => {\n                if (e.key === 'Enter' && !e.shiftKey && !isEvaluating && userAnswer.trim()) {\n                  e.preventDefault();\n                  handleSubmitAnswer();\n                }\n              },\n              disabled: isEvaluating,\n              sx: {\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"contained\",\n              size: \"large\",\n              onClick: handleSubmitAnswer,\n              disabled: !userAnswer.trim() || isEvaluating,\n              startIcon: isEvaluating ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 67\n              }, this),\n              children: isEvaluating ? '평가 중...' : '평가하기'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              sx: {\n                mb: 2\n              },\n              children: currentWord.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Alert, {\n              severity: currentResult !== null && currentResult !== void 0 && currentResult.isCorrect ? 'success' : 'error',\n              sx: {\n                mb: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: currentResult !== null && currentResult !== void 0 && currentResult.isCorrect ? '정답입니다!' : '틀렸습니다.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                children: [\"\\uB2F9\\uC2E0\\uC758 \\uB2F5\\uBCC0: \", currentResult === null || currentResult === void 0 ? void 0 : currentResult.userAnswer]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                children: [\"\\uC815\\uB2F5: \", currentResult === null || currentResult === void 0 ? void 0 : currentResult.correctAnswer]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: `점수: ${(currentResult === null || currentResult === void 0 ? void 0 : currentResult.score) || 0}점`,\n              color: ((currentResult === null || currentResult === void 0 ? void 0 : currentResult.score) || 0) >= 80 ? 'success' : 'error',\n              sx: {\n                fontSize: '1.1rem',\n                fontWeight: 600\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            size: \"large\",\n            onClick: handleNextWord,\n            startIcon: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 28\n            }, this),\n            children: currentWordIndex + 1 < vocabularyData.length ? '다음 단어' : '평가 완료'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n};\n_s(VocabularyEvaluation, \"G78yxP58qXm/UT2f7W49KnXsPe4=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = VocabularyEvaluation;\nexport default VocabularyEvaluation;\nvar _c;\n$RefreshReg$(_c, \"VocabularyEvaluation\");","map":{"version":3,"names":["React","useState","Box","Typography","Card","CardContent","Button","TextField","LinearProgress","IconButton","useTheme","useMediaQuery","Container","Alert","Chip","CheckCircle","CheckCircleIcon","Close","CloseIcon","PlayArrow","PlayArrowIcon","Send","SendIcon","jsxDEV","_jsxDEV","VocabularyEvaluation","vocabularyData","onComplete","onClose","_s","theme","isMobile","breakpoints","down","currentWordIndex","setCurrentWordIndex","userAnswer","setUserAnswer","isEvaluating","setIsEvaluating","evaluationResults","setEvaluationResults","showResult","setShowResult","currentResult","setCurrentResult","length","maxWidth","sx","py","children","borderRadius","p","textAlign","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","mt","currentWord","progress","console","log","word","meaning","error","evaluateWithGemini","correctAnswer","GEMINI_API_KEY","process","env","REACT_APP_GEMINI_API_KEY","substring","evaluateLocally","prompt","response","fetch","method","headers","body","JSON","stringify","contents","parts","text","status","ok","errorText","Error","data","json","candidates","content","scoreText","trim","score","parseInt","isNaN","finalScore","Math","max","min","cleanUser","toString","toLowerCase","cleanCorrect","userWords","split","filter","correctWords","matchCount","forEach","userWord","correctWord","includes","maxPossibleMatches","round","handleSubmitAnswer","id","alert","isCorrect","result","wordId","handleNextWord","finalResults","display","justifyContent","alignItems","mb","fontWeight","value","height","example","fullWidth","multiline","rows","placeholder","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","disabled","size","startIcon","severity","label","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/user/pro_planner/src/components/VocabularyEvaluation.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  TextField,\r\n  LinearProgress,\r\n  IconButton,\r\n  useTheme,\r\n  useMediaQuery,\r\n  Container,\r\n  Alert,\r\n  Chip,\r\n} from '@mui/material';\r\nimport {\r\n  CheckCircle as CheckCircleIcon,\r\n  Close as CloseIcon,\r\n  PlayArrow as PlayArrowIcon,\r\n  Send as SendIcon,\r\n} from '@mui/icons-material';\r\n\r\ninterface EvaluationWord {\r\n  id: string;\r\n  word: string;\r\n  meaning: string;\r\n  example?: string;\r\n}\r\n\r\ninterface EvaluationResult {\r\n  wordId: string;\r\n  word: string;\r\n  userAnswer: string;\r\n  correctAnswer: string;\r\n  score: number;\r\n  isCorrect: boolean;\r\n}\r\n\r\ninterface VocabularyEvaluationProps {\r\n  vocabularyData: EvaluationWord[];\r\n  onComplete: (results: EvaluationResult[]) => void;\r\n  onClose: () => void;\r\n}\r\n\r\nconst VocabularyEvaluation: React.FC<VocabularyEvaluationProps> = ({\r\n  vocabularyData,\r\n  onComplete,\r\n  onClose,\r\n}) => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n  \r\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [isEvaluating, setIsEvaluating] = useState(false);\r\n  const [evaluationResults, setEvaluationResults] = useState<EvaluationResult[]>([]);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [currentResult, setCurrentResult] = useState<EvaluationResult | null>(null);\r\n\r\n  // 데이터 유효성 검사\r\n  if (!vocabularyData || vocabularyData.length === 0) {\r\n    return (\r\n      <Container maxWidth=\"md\" sx={{ py: 2 }}>\r\n        <Card sx={{ borderRadius: 2 }}>\r\n          <CardContent sx={{ p: 3, textAlign: 'center' }}>\r\n            <Typography variant=\"h6\" color=\"error\">\r\n              평가할 단어가 없습니다.\r\n            </Typography>\r\n            <Button onClick={onClose} sx={{ mt: 2 }}>\r\n              닫기\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  const currentWord = vocabularyData[currentWordIndex];\r\n  const progress = ((currentWordIndex + 1) / vocabularyData.length) * 100;\r\n\r\n  // 디버깅 로그 추가\r\n  console.log('=== VocabularyEvaluation 디버깅 ===');\r\n  console.log('vocabularyData:', vocabularyData);\r\n  console.log('currentWordIndex:', currentWordIndex);\r\n  console.log('currentWord:', currentWord);\r\n  console.log('currentWord.word:', currentWord?.word);\r\n  console.log('currentWord.meaning:', currentWord?.meaning);\r\n\r\n  // 현재 단어가 유효한지 확인\r\n  if (!currentWord) {\r\n    console.error('currentWord가 undefined입니다');\r\n    return (\r\n      <Container maxWidth=\"md\" sx={{ py: 2 }}>\r\n        <Card sx={{ borderRadius: 2 }}>\r\n          <CardContent sx={{ p: 3, textAlign: 'center' }}>\r\n            <Typography variant=\"h6\" color=\"error\">\r\n              단어 정보를 불러올 수 없습니다.\r\n            </Typography>\r\n            <Button onClick={onClose} sx={{ mt: 2 }}>\r\n              닫기\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  const evaluateWithGemini = async (userAnswer: string, correctAnswer: string, word: string) => {\r\n    try {\r\n      const GEMINI_API_KEY = process.env.REACT_APP_GEMINI_API_KEY;\r\n      \r\n      console.log('=== Gemini API 디버깅 ===');\r\n      console.log('환경변수 GEMINI_API_KEY 존재 여부:', !!GEMINI_API_KEY);\r\n      console.log('API 키 앞 10자리:', GEMINI_API_KEY ? GEMINI_API_KEY.substring(0, 10) + '...' : 'undefined');\r\n      \r\n      if (!GEMINI_API_KEY) {\r\n        console.log('Gemini API 키가 없어 로컬 채점을 사용합니다.');\r\n        return evaluateLocally(userAnswer, correctAnswer);\r\n      }\r\n\r\n      const prompt = `다음 영어 단어의 뜻을 채점해주세요:\r\n영어 단어: ${word}\r\n정답: ${correctAnswer}\r\n사용자 답변: ${userAnswer}\r\n점수만 숫자로 답변해주세요. (100: 정답, 50-90: 부분정답, 0: 오답)`;\r\n\r\n      console.log('Gemini API 호출 시작...');\r\n      console.log('프롬프트:', prompt);\r\n\r\n      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${GEMINI_API_KEY}`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          contents: [{ parts: [{ text: prompt }] }]\r\n        })\r\n      });\r\n\r\n      console.log('API 응답 상태:', response.status);\r\n      console.log('API 응답 OK:', response.ok);\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('API 응답 오류 내용:', errorText);\r\n        throw new Error(`API 응답 오류: ${response.status} - ${errorText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('API 응답 데이터:', data);\r\n      \r\n      if (!data.candidates || !data.candidates[0] || !data.candidates[0].content) {\r\n        console.error('API 응답 형식 오류:', data);\r\n        throw new Error('API 응답 형식 오류');\r\n      }\r\n\r\n      const scoreText = data.candidates[0].content.parts[0].text.trim();\r\n      console.log('추출된 점수 텍스트:', scoreText);\r\n      \r\n      const score = parseInt(scoreText);\r\n      console.log('파싱된 점수:', score);\r\n      \r\n      if (isNaN(score)) {\r\n        throw new Error(`점수 파싱 오류: \"${scoreText}\"`);\r\n      }\r\n      \r\n      const finalScore = Math.max(0, Math.min(100, score));\r\n      console.log('최종 점수:', finalScore);\r\n      \r\n      return finalScore;\r\n    } catch (error) {\r\n      console.error('Gemini API 호출 실패:', error);\r\n      console.log('로컬 채점으로 대체합니다.');\r\n      return evaluateLocally(userAnswer, correctAnswer);\r\n    }\r\n  };\r\n\r\n  const evaluateLocally = (userAnswer: string, correctAnswer: string) => {\r\n    // undefined나 null 체크\r\n    if (!userAnswer || !correctAnswer) {\r\n      console.error('Invalid input for evaluation:', { userAnswer, correctAnswer });\r\n      return 0;\r\n    }\r\n    \r\n    const cleanUser = userAnswer.toString().trim().toLowerCase();\r\n    const cleanCorrect = correctAnswer.toString().trim().toLowerCase();\r\n    \r\n    // 정확한 매칭\r\n    if (cleanUser === cleanCorrect) return 100;\r\n    \r\n    // 부분 매칭 (키워드 포함)\r\n    const userWords = cleanUser.split(/[\\s,]+/).filter(word => word.length > 0);\r\n    const correctWords = cleanCorrect.split(/[\\s,]+/).filter(word => word.length > 0);\r\n    \r\n    if (userWords.length === 0 || correctWords.length === 0) {\r\n      return 0;\r\n    }\r\n    \r\n    let matchCount = 0;\r\n    userWords.forEach(userWord => {\r\n      correctWords.forEach(correctWord => {\r\n        // 완전 일치\r\n        if (userWord === correctWord) {\r\n          matchCount += 2;\r\n        }\r\n        // 부분 포함\r\n        else if (userWord.includes(correctWord) || correctWord.includes(userWord)) {\r\n          matchCount += 1;\r\n        }\r\n      });\r\n    });\r\n    \r\n    if (matchCount > 0) {\r\n      const maxPossibleMatches = Math.max(userWords.length, correctWords.length) * 2;\r\n      const score = Math.round((matchCount / maxPossibleMatches) * 100);\r\n      return Math.min(90, score); // 최대 90점으로 제한\r\n    }\r\n    \r\n    return 0;\r\n  };\r\n\r\n  const handleSubmitAnswer = async () => {\r\n    console.log('=== handleSubmitAnswer 디버깅 ===');\r\n    console.log('userAnswer:', userAnswer);\r\n    console.log('userAnswer.trim():', userAnswer?.trim());\r\n    console.log('currentWord:', currentWord);\r\n    console.log('currentWord.meaning:', currentWord?.meaning);\r\n    console.log('currentWord.word:', currentWord?.word);\r\n    console.log('currentWord.id:', currentWord?.id);\r\n\r\n    if (!userAnswer || !userAnswer.trim()) {\r\n      console.error('사용자 답변이 비어있음');\r\n      alert('답변을 입력해주세요.');\r\n      return;\r\n    }\r\n\r\n    if (!currentWord) {\r\n      console.error('currentWord가 undefined');\r\n      alert('단어 정보가 올바르지 않습니다. (currentWord 없음)');\r\n      return;\r\n    }\r\n\r\n    if (!currentWord.meaning) {\r\n      console.error('currentWord.meaning이 undefined:', currentWord);\r\n      alert('단어 정보가 올바르지 않습니다. (meaning 없음)');\r\n      return;\r\n    }\r\n\r\n    setIsEvaluating(true);\r\n\r\n    try {\r\n      const score = await evaluateWithGemini(userAnswer, currentWord.meaning, currentWord.word);\r\n      const isCorrect = score >= 80;\r\n\r\n      const result: EvaluationResult = {\r\n        wordId: currentWord.id || 'unknown',\r\n        word: currentWord.word || 'unknown',\r\n        userAnswer: userAnswer.trim(),\r\n        correctAnswer: currentWord.meaning || 'unknown',\r\n        score: score,\r\n        isCorrect: isCorrect,\r\n      };\r\n\r\n      setCurrentResult(result);\r\n      setShowResult(true);\r\n    } catch (error) {\r\n      console.error('평가 중 오류 발생:', error);\r\n      alert('평가 중 오류가 발생했습니다.');\r\n    } finally {\r\n      setIsEvaluating(false);\r\n    }\r\n  };\r\n\r\n  const handleNextWord = () => {\r\n    if (currentResult) {\r\n      setEvaluationResults([...evaluationResults, currentResult]);\r\n    }\r\n\r\n    if (currentWordIndex + 1 < vocabularyData.length) {\r\n      setCurrentWordIndex(currentWordIndex + 1);\r\n      setUserAnswer('');\r\n      setShowResult(false);\r\n      setCurrentResult(null);\r\n    } else {\r\n      const finalResults = currentResult ? [...evaluationResults, currentResult] : evaluationResults;\r\n      onComplete(finalResults);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ py: 2 }}>\r\n      <Card sx={{ borderRadius: isMobile ? 2 : 1 }}>\r\n        <CardContent sx={{ p: isMobile ? 3 : 2 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n            <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\r\n              단어 평가\r\n            </Typography>\r\n            <IconButton onClick={onClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n\r\n          <Box sx={{ mb: 3 }}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n              <Typography variant=\"body2\">\r\n                {currentWordIndex + 1} / {vocabularyData.length}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"primary\">\r\n                {Math.round(progress)}%\r\n              </Typography>\r\n            </Box>\r\n            <LinearProgress variant=\"determinate\" value={progress} sx={{ height: 8, borderRadius: 4 }} />\r\n          </Box>\r\n\r\n          {!showResult ? (\r\n            <Box>\r\n              <Box sx={{ textAlign: 'center', mb: 4 }}>\r\n                <Typography variant=\"h3\" sx={{ fontWeight: 700, mb: 2 }}>\r\n                  {currentWord.word}\r\n                </Typography>\r\n                {currentWord.example && (\r\n                  <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n                    예문: {currentWord.example}\r\n                  </Typography>\r\n                )}\r\n              </Box>\r\n\r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                  이 단어의 뜻을 입력하세요:\r\n                </Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  multiline\r\n                  rows={3}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"뜻을 입력하세요...\"\r\n                  value={userAnswer}\r\n                  onChange={(e) => setUserAnswer(e.target.value)}\r\n                  onKeyPress={(e) => {\r\n                    if (e.key === 'Enter' && !e.shiftKey && !isEvaluating && userAnswer.trim()) {\r\n                      e.preventDefault();\r\n                      handleSubmitAnswer();\r\n                    }\r\n                  }}\r\n                  disabled={isEvaluating}\r\n                  sx={{ mb: 2 }}\r\n                />\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  size=\"large\"\r\n                  onClick={handleSubmitAnswer}\r\n                  disabled={!userAnswer.trim() || isEvaluating}\r\n                  startIcon={isEvaluating ? <CheckCircleIcon /> : <SendIcon />}\r\n                >\r\n                  {isEvaluating ? '평가 중...' : '평가하기'}\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          ) : (\r\n            <Box>\r\n              <Box sx={{ textAlign: 'center', mb: 3 }}>\r\n                <Typography variant=\"h4\" sx={{ mb: 2 }}>\r\n                  {currentWord.word}\r\n                </Typography>\r\n                \r\n                <Alert severity={currentResult?.isCorrect ? 'success' : 'error'} sx={{ mb: 2 }}>\r\n                  <Typography variant=\"h6\">\r\n                    {currentResult?.isCorrect ? '정답입니다!' : '틀렸습니다.'}\r\n                  </Typography>\r\n                </Alert>\r\n\r\n                <Box sx={{ mb: 2 }}>\r\n                  <Typography variant=\"body1\" color=\"text.secondary\">\r\n                    당신의 답변: {currentResult?.userAnswer}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" color=\"text.secondary\">\r\n                    정답: {currentResult?.correctAnswer}\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Chip\r\n                  label={`점수: ${currentResult?.score || 0}점`}\r\n                  color={(currentResult?.score || 0) >= 80 ? 'success' : 'error'}\r\n                  sx={{ fontSize: '1.1rem', fontWeight: 600 }}\r\n                />\r\n              </Box>\r\n\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                onClick={handleNextWord}\r\n                startIcon={<PlayArrowIcon />}\r\n              >\r\n                {currentWordIndex + 1 < vocabularyData.length ? '다음 단어' : '평가 완료'}\r\n              </Button>\r\n            </Box>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VocabularyEvaluation; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
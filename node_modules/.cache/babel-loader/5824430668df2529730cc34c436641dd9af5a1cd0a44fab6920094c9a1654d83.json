{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\pro_planner\\\\src\\\\components\\\\VocabularyEvaluation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Card, CardContent, Button, TextField, IconButton, useTheme, useMediaQuery, Container } from '@mui/material';\nimport { Close as CloseIcon, PlayArrow as PlayArrowIcon, Send as SendIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VocabularyEvaluation = ({\n  vocabularyData,\n  onComplete,\n  onClose\n}) => {\n  _s();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [isEvaluating, setIsEvaluating] = useState(false);\n  const [evaluationResults, setEvaluationResults] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [currentResult, setCurrentResult] = useState(null);\n  const [autoNextTimer, setAutoNextTimer] = useState(null);\n  const [inputRef, setInputRef] = useState(null);\n\n  // 라운드 관리 상태\n  const [currentRound, setCurrentRound] = useState(1);\n  const [wordsToEvaluate, setWordsToEvaluate] = useState(vocabularyData);\n  const [allResults, setAllResults] = useState([]);\n  const [isEvaluationComplete, setIsEvaluationComplete] = useState(false);\n\n  // 평가 완료 후 자동으로 다음 단어 이동\n  useEffect(() => {\n    if (showResult && currentResult) {\n      // 기존 타이머가 있다면 정리\n      if (autoNextTimer) {\n        clearTimeout(autoNextTimer);\n      }\n\n      // 2초 후 자동으로 다음 단어로 이동\n      const timer = setTimeout(() => {\n        handleNextWord();\n      }, 2000);\n      setAutoNextTimer(timer);\n    }\n\n    // 클린업 함수\n    return () => {\n      if (autoNextTimer) {\n        clearTimeout(autoNextTimer);\n        setAutoNextTimer(null);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showResult, currentResult]);\n\n  // 다음 단어로 넘어갈 때 입력창 자동 포커스\n  useEffect(() => {\n    if (!showResult && inputRef) {\n      // 약간의 지연을 두어 DOM 업데이트 후 포커스\n      setTimeout(() => {\n        inputRef.focus();\n      }, 100);\n    }\n  }, [currentWordIndex, showResult, inputRef]);\n\n  // 평가 완료 상태 체크\n  if (isEvaluationComplete) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        py: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          borderRadius: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            p: 3,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"success.main\",\n            children: \"\\uD3C9\\uAC00\\uAC00 \\uC644\\uB8CC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            sx: {\n              mt: 2\n            },\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 데이터 유효성 검사\n  if (!vocabularyData || vocabularyData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        py: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          borderRadius: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            p: 3,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"error\",\n            children: \"\\uD3C9\\uAC00\\uD560 \\uB2E8\\uC5B4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            sx: {\n              mt: 2\n            },\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n  const currentWord = wordsToEvaluate[currentWordIndex];\n\n  // 디버깅 로그 추가\n  console.log('=== VocabularyEvaluation 디버깅 ===');\n  console.log('wordsToEvaluate:', wordsToEvaluate);\n  console.log('currentWordIndex:', currentWordIndex);\n  console.log('currentWord:', currentWord);\n  console.log('currentWord.word:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.word);\n  console.log('currentWord.meaning:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.meaning);\n\n  // 현재 단어가 유효한지 확인\n  if (!currentWord) {\n    console.error('currentWord가 undefined입니다');\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        py: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          borderRadius: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            p: 3,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"error\",\n            children: \"\\uB2E8\\uC5B4 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC62C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            sx: {\n              mt: 2\n            },\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 기호와 부호를 제거하는 함수\n  const removeSymbols = text => {\n    return text.toLowerCase().trim().replace(/[()\\[\\]{}<>\"\"''`~!@#$%^&*+=|\\\\:;'\",.?]/g, '') // 괄호, 따옴표, 특수문자 제거\n    .replace(/\\s+/g, ' '); // 연속된 공백을 하나로\n  };\n  const evaluateWithGemini = async (userAnswer, correctAnswer, word) => {\n    try {\n      // API 키를 직접 설정 (환경변수 문제 해결)\n      const GEMINI_API_KEY = 'AIzaSyDQJ6SXBexKbCGeU-DXWCVmtfCJ56gAATs';\n      console.log('=== Gemini API 디버깅 ===');\n      console.log('Gemini API 키 설정됨:', !!GEMINI_API_KEY);\n      console.log('API 키 앞 10자리:', GEMINI_API_KEY.substring(0, 10) + '...');\n\n      // 기호 제거된 답변들\n      const cleanUserAnswer = removeSymbols(userAnswer);\n      const cleanCorrectAnswer = removeSymbols(correctAnswer);\n      console.log('원본 사용자 답변:', userAnswer);\n      console.log('정리된 사용자 답변:', cleanUserAnswer);\n      console.log('원본 정답:', correctAnswer);\n      console.log('정리된 정답:', cleanCorrectAnswer);\n\n      // 기호 제거 후 정확히 일치하면 100점\n      if (cleanUserAnswer === cleanCorrectAnswer) {\n        console.log('기호 제거 후 완전 일치 - 100점');\n        return 100;\n      }\n\n      // 핵심 단어 부분 정답 체크\n      const checkPartialMatch = (userAnswer, correctAnswer) => {\n        const userWords = userAnswer.toLowerCase().split(/[\\s,~을를이가에서의도로]/);\n        const correctWords = correctAnswer.toLowerCase().split(/[\\s,~을를이가에서의도로]/);\n\n        // 핵심 동사/명사 추출 (2글자 이상)\n        const userKeywords = userWords.filter(word => word.length >= 2);\n        const correctKeywords = correctWords.filter(word => word.length >= 2);\n        console.log('사용자 키워드:', userKeywords);\n        console.log('정답 키워드:', correctKeywords);\n\n        // 동의어 매핑\n        const synonyms = new Map([['요구하다', ['필요하다', '구하다', '원하다', '바라다']], ['필요하다', ['요구하다', '구하다', '원하다', '바라다']], ['제공하다', ['주다', '공급하다', '드리다', '건네다']], ['주다', ['제공하다', '공급하다', '드리다', '건네다']], ['만들다', ['생성하다', '창조하다', '제작하다', '생산하다']], ['생성하다', ['만들다', '창조하다', '제작하다', '생산하다']]]);\n\n        // 핵심 키워드가 포함되어 있는지 체크\n        for (const userKeyword of userKeywords) {\n          for (const correctKeyword of correctKeywords) {\n            // 직접 매치\n            if (userKeyword.includes(correctKeyword) || correctKeyword.includes(userKeyword)) {\n              console.log(`키워드 직접 매치: ${userKeyword} <-> ${correctKeyword}`);\n              return true;\n            }\n\n            // 동의어 매치\n            const correctSynonyms = synonyms.get(correctKeyword) || [];\n            const userSynonyms = synonyms.get(userKeyword) || [];\n            if (correctSynonyms.includes(userKeyword) || userSynonyms.includes(correctKeyword)) {\n              console.log(`동의어 매치: ${userKeyword} <-> ${correctKeyword}`);\n              return true;\n            }\n          }\n        }\n        return false;\n      };\n\n      // 부분 정답 체크\n      if (checkPartialMatch(cleanUserAnswer, cleanCorrectAnswer)) {\n        console.log('핵심 키워드 매치 - 100점');\n        return 100;\n      }\n      const prompt = `다음 영어 단어의 뜻을 채점해주세요:\n영어 단어: ${word}\n정답: ${correctAnswer}\n사용자 답변: ${userAnswer}\n\n채점 기준:\n1. 핵심 의미가 일치하면 100점 (완전정답)\n2. 핵심 동사나 명사가 포함되어 있으면 100점 처리\n   - 예: \"A에게 B를 요구하다\" → \"요구하다\", \"필요하다\"도 100점\n   - 예: \"~을 제공하다\" → \"제공하다\", \"주다\"도 100점  \n3. 의미가 유사하거나 부분적으로 맞으면 80-90점\n4. 완전히 틀리면 0점\n\n점수만 숫자로 답변해주세요.`;\n      console.log('Gemini API 호출 시작...');\n      console.log('프롬프트:', prompt);\n      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${GEMINI_API_KEY}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: prompt\n            }]\n          }]\n        })\n      });\n      console.log('API 응답 상태:', response.status);\n      console.log('API 응답 OK:', response.ok);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API 응답 오류 내용:', errorText);\n        throw new Error(`API 응답 오류: ${response.status} - ${errorText}`);\n      }\n      const data = await response.json();\n      console.log('API 응답 데이터:', data);\n      if (!data.candidates || !data.candidates[0] || !data.candidates[0].content) {\n        console.error('API 응답 형식 오류:', data);\n        throw new Error('API 응답 형식 오류');\n      }\n      const scoreText = data.candidates[0].content.parts[0].text.trim();\n      console.log('추출된 점수 텍스트:', scoreText);\n      const score = parseInt(scoreText);\n      console.log('파싱된 점수:', score);\n      if (isNaN(score)) {\n        throw new Error(`점수 파싱 오류: \"${scoreText}\"`);\n      }\n      const finalScore = Math.max(0, Math.min(100, score));\n      console.log('최종 점수:', finalScore);\n      return finalScore;\n    } catch (error) {\n      console.error('Gemini API 호출 실패:', error);\n\n      // API 실패 시 기본 채점 로직 (기호 제거 후 비교)\n      const cleanUser = removeSymbols(userAnswer);\n      const cleanCorrect = removeSymbols(correctAnswer);\n      if (cleanUser === cleanCorrect) {\n        console.log('API 실패 시 기본 채점: 기호 제거 후 완전 일치 - 100점');\n        return 100;\n      } else if (cleanUser.includes(cleanCorrect) || cleanCorrect.includes(cleanUser)) {\n        console.log('API 실패 시 기본 채점: 기호 제거 후 부분 일치 - 70점');\n        return 70;\n      } else {\n        console.log('API 실패 시 기본 채점: 기호 제거 후 불일치 - 30점');\n        return 30; // API 실패 시 최소 점수 보장\n      }\n    }\n  };\n  const handleSubmitAnswer = async () => {\n    // 평가 완료 상태 체크\n    if (isEvaluationComplete) {\n      console.log('평가가 이미 완료되었습니다.');\n      return;\n    }\n    console.log('=== handleSubmitAnswer 디버깅 ===');\n    console.log('userAnswer:', userAnswer);\n    console.log('userAnswer.trim():', userAnswer === null || userAnswer === void 0 ? void 0 : userAnswer.trim());\n    console.log('currentWord:', currentWord);\n    console.log('currentWord.meaning:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.meaning);\n    console.log('currentWord.word:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.word);\n    console.log('currentWord.id:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.id);\n    if (!userAnswer || !userAnswer.trim()) {\n      console.error('사용자 답변이 비어있음');\n      alert('답변을 입력해주세요.');\n      return;\n    }\n    if (!currentWord) {\n      console.error('currentWord가 undefined');\n      alert('단어 정보가 올바르지 않습니다. (currentWord 없음)');\n      return;\n    }\n    if (!currentWord.meaning) {\n      console.error('currentWord.meaning이 undefined:', currentWord);\n      alert('단어 정보가 올바르지 않습니다. (meaning 없음)');\n      return;\n    }\n    setIsEvaluating(true);\n    try {\n      const score = await evaluateWithGemini(userAnswer, currentWord.meaning, currentWord.word);\n      const isCorrect = score >= 80;\n      const result = {\n        wordId: currentWord.id || 'unknown',\n        word: currentWord.word || 'unknown',\n        userAnswer: userAnswer.trim(),\n        correctAnswer: currentWord.meaning || 'unknown',\n        score: score,\n        isCorrect: isCorrect\n      };\n      setCurrentResult(result);\n      setShowResult(true);\n    } catch (error) {\n      console.error('평가 중 오류 발생:', error);\n      alert('평가 중 오류가 발생했습니다.');\n    } finally {\n      setIsEvaluating(false);\n    }\n  };\n  const handleNextWord = () => {\n    // 평가 완료 상태 체크\n    if (isEvaluationComplete) {\n      console.log('평가가 이미 완료되었습니다.');\n      return;\n    }\n\n    // 자동 이동 타이머가 있다면 취소\n    if (autoNextTimer) {\n      clearTimeout(autoNextTimer);\n      setAutoNextTimer(null);\n    }\n    if (currentResult) {\n      // 현재 결과를 저장\n      const newResults = [...evaluationResults, currentResult];\n      setEvaluationResults(newResults);\n\n      // 전체 결과에도 추가/업데이트\n      const updatedAllResults = [...allResults];\n      const existingIndex = updatedAllResults.findIndex(r => r.wordId === currentResult.wordId);\n      if (existingIndex >= 0) {\n        updatedAllResults[existingIndex] = currentResult;\n      } else {\n        updatedAllResults.push(currentResult);\n      }\n      setAllResults(updatedAllResults);\n    }\n\n    // 다음 단어로 이동 또는 라운드 완료 체크\n    if (currentWordIndex + 1 < wordsToEvaluate.length) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setUserAnswer('');\n      setShowResult(false);\n      setCurrentResult(null);\n    } else {\n      // 라운드 완료 - 현재 라운드의 모든 결과 수집\n      const currentRoundResults = [...evaluationResults];\n      if (currentResult) {\n        currentRoundResults.push(currentResult);\n      }\n\n      // 현재 라운드에서 100점 미만인 단어들 찾기\n      const incompleteWords = wordsToEvaluate.filter((word, index) => {\n        const result = currentRoundResults[index];\n        return !result || result.score < 100;\n      });\n      console.log('=== 라운드 완료 디버깅 ===');\n      console.log('현재 라운드:', currentRound);\n      console.log('현재 라운드 결과:', currentRoundResults);\n      console.log('미완성 단어 수:', incompleteWords.length);\n      console.log('미완성 단어들:', incompleteWords);\n      if (incompleteWords.length > 0 && currentRound < 3) {\n        // 최대 3라운드로 제한\n        // 다음 라운드 시작\n        console.log('다음 라운드 시작:', currentRound + 1);\n        setCurrentRound(currentRound + 1);\n        setWordsToEvaluate(incompleteWords);\n        setCurrentWordIndex(0);\n        setEvaluationResults([]);\n        setUserAnswer('');\n        setShowResult(false);\n        setCurrentResult(null);\n      } else {\n        // 모든 단어 완료 또는 최대 라운드 도달\n        console.log('평가 완료 - 모든 결과 전달');\n        const finalResults = [...allResults];\n        if (currentResult) {\n          const existingIndex = finalResults.findIndex(r => r.wordId === currentResult.wordId);\n          if (existingIndex >= 0) {\n            finalResults[existingIndex] = currentResult;\n          } else {\n            finalResults.push(currentResult);\n          }\n        }\n        setIsEvaluationComplete(true);\n        onComplete(finalResults);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      py: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        borderRadius: isMobile ? 2 : 1\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          p: isMobile ? 3 : 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              sx: {\n                fontWeight: 600\n              },\n              children: \"\\uB2E8\\uC5B4 \\uD3C9\\uAC00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"\\uB77C\\uC6B4\\uB4DC \", currentRound, \" - \", wordsToEvaluate.length, \"\\uAC1C \\uB2E8\\uC5B4\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: onClose,\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), !showResult ? /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              sx: {\n                fontWeight: 700,\n                mb: 2\n              },\n              children: currentWord.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this), currentWord.example && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              sx: {\n                mb: 2\n              },\n              children: [\"\\uC608\\uBB38: \", currentWord.example]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                mb: 2\n              },\n              children: \"\\uC774 \\uB2E8\\uC5B4\\uC758 \\uB73B\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              rows: 3,\n              variant: \"outlined\",\n              placeholder: \"\\uB73B\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n              value: userAnswer,\n              onChange: e => setUserAnswer(e.target.value),\n              onKeyPress: e => {\n                if (e.key === 'Enter' && !e.shiftKey && !isEvaluating && userAnswer.trim()) {\n                  e.preventDefault();\n                  handleSubmitAnswer();\n                }\n              },\n              disabled: isEvaluating,\n              sx: {\n                mb: 2\n              },\n              inputRef: ref => setInputRef(ref)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"contained\",\n              size: \"large\",\n              onClick: handleSubmitAnswer,\n              disabled: !userAnswer.trim() || isEvaluating,\n              startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 30\n              }, this),\n              children: isEvaluating ? '평가 중...' : '평가하기'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              sx: {\n                mb: 3,\n                fontWeight: 600\n              },\n              children: currentWord.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                mb: 2,\n                color: 'text.primary'\n              },\n              children: [\"\\uC815\\uB2F5: \", currentResult === null || currentResult === void 0 ? void 0 : currentResult.correctAnswer, \" / \\uC785\\uB825\\uAC12: \", currentResult === null || currentResult === void 0 ? void 0 : currentResult.userAnswer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              sx: {\n                fontWeight: 600,\n                color: (currentResult === null || currentResult === void 0 ? void 0 : currentResult.score) === 100 ? 'success.main' : 'primary.main'\n              },\n              children: [currentResult === null || currentResult === void 0 ? void 0 : currentResult.score, \"\\uC810\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            size: \"large\",\n            onClick: handleNextWord,\n            startIcon: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 22\n            }, this),\n            color: (currentResult === null || currentResult === void 0 ? void 0 : currentResult.score) === 100 ? 'success' : 'primary',\n            children: \"\\uB77C\\uC6B4\\uB4DC \\uC644\\uB8CC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 471,\n    columnNumber: 5\n  }, this);\n};\n_s(VocabularyEvaluation, \"Q2U6N+lyIPSxIbtim8Bd3ByGWfk=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = VocabularyEvaluation;\nexport default VocabularyEvaluation;\nvar _c;\n$RefreshReg$(_c, \"VocabularyEvaluation\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Card","CardContent","Button","TextField","IconButton","useTheme","useMediaQuery","Container","Close","CloseIcon","PlayArrow","PlayArrowIcon","Send","SendIcon","jsxDEV","_jsxDEV","VocabularyEvaluation","vocabularyData","onComplete","onClose","_s","theme","isMobile","breakpoints","down","currentWordIndex","setCurrentWordIndex","userAnswer","setUserAnswer","isEvaluating","setIsEvaluating","evaluationResults","setEvaluationResults","showResult","setShowResult","currentResult","setCurrentResult","autoNextTimer","setAutoNextTimer","inputRef","setInputRef","currentRound","setCurrentRound","wordsToEvaluate","setWordsToEvaluate","allResults","setAllResults","isEvaluationComplete","setIsEvaluationComplete","clearTimeout","timer","setTimeout","handleNextWord","focus","maxWidth","sx","py","children","borderRadius","p","textAlign","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","mt","length","currentWord","console","log","word","meaning","error","removeSymbols","text","toLowerCase","trim","replace","evaluateWithGemini","correctAnswer","GEMINI_API_KEY","substring","cleanUserAnswer","cleanCorrectAnswer","checkPartialMatch","userWords","split","correctWords","userKeywords","filter","correctKeywords","synonyms","Map","userKeyword","correctKeyword","includes","correctSynonyms","get","userSynonyms","prompt","response","fetch","method","headers","body","JSON","stringify","contents","parts","status","ok","errorText","Error","data","json","candidates","content","scoreText","score","parseInt","isNaN","finalScore","Math","max","min","cleanUser","cleanCorrect","handleSubmitAnswer","id","alert","isCorrect","result","wordId","newResults","updatedAllResults","existingIndex","findIndex","r","push","currentRoundResults","incompleteWords","index","finalResults","display","justifyContent","alignItems","mb","fontWeight","example","fullWidth","multiline","rows","placeholder","value","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","disabled","ref","size","startIcon","_c","$RefreshReg$"],"sources":["C:/Users/user/pro_planner/src/components/VocabularyEvaluation.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Button,\n  TextField,\n  IconButton,\n  useTheme,\n  useMediaQuery,\n  Container,\n  Alert,\n  Chip,\n} from '@mui/material';\nimport {\n  Close as CloseIcon,\n  PlayArrow as PlayArrowIcon,\n  Send as SendIcon,\n} from '@mui/icons-material';\n\ninterface EvaluationWord {\n  id: string;\n  word: string;\n  meaning: string;\n  example?: string;\n}\n\ninterface EvaluationResult {\n  wordId: string;\n  word: string;\n  userAnswer: string;\n  correctAnswer: string;\n  score: number;\n  isCorrect: boolean;\n}\n\ninterface VocabularyEvaluationProps {\n  vocabularyData: EvaluationWord[];\n  onComplete: (results: EvaluationResult[]) => void;\n  onClose: () => void;\n}\n\nconst VocabularyEvaluation: React.FC<VocabularyEvaluationProps> = ({\n  vocabularyData,\n  onComplete,\n  onClose,\n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  \n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [isEvaluating, setIsEvaluating] = useState(false);\n  const [evaluationResults, setEvaluationResults] = useState<EvaluationResult[]>([]);\n  const [showResult, setShowResult] = useState(false);\n  const [currentResult, setCurrentResult] = useState<EvaluationResult | null>(null);\n  const [autoNextTimer, setAutoNextTimer] = useState<NodeJS.Timeout | null>(null);\n  const [inputRef, setInputRef] = useState<HTMLInputElement | null>(null);\n  \n  // 라운드 관리 상태\n  const [currentRound, setCurrentRound] = useState(1);\n  const [wordsToEvaluate, setWordsToEvaluate] = useState<EvaluationWord[]>(vocabularyData);\n  const [allResults, setAllResults] = useState<EvaluationResult[]>([]);\n  const [isEvaluationComplete, setIsEvaluationComplete] = useState(false);\n\n  // 평가 완료 후 자동으로 다음 단어 이동\n  useEffect(() => {\n    if (showResult && currentResult) {\n      // 기존 타이머가 있다면 정리\n      if (autoNextTimer) {\n        clearTimeout(autoNextTimer);\n      }\n      \n      // 2초 후 자동으로 다음 단어로 이동\n      const timer = setTimeout(() => {\n        handleNextWord();\n      }, 2000);\n      \n      setAutoNextTimer(timer);\n    }\n    \n    // 클린업 함수\n    return () => {\n      if (autoNextTimer) {\n        clearTimeout(autoNextTimer);\n        setAutoNextTimer(null);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showResult, currentResult]);\n\n  // 다음 단어로 넘어갈 때 입력창 자동 포커스\n  useEffect(() => {\n    if (!showResult && inputRef) {\n      // 약간의 지연을 두어 DOM 업데이트 후 포커스\n      setTimeout(() => {\n        inputRef.focus();\n      }, 100);\n    }\n  }, [currentWordIndex, showResult, inputRef]);\n\n  // 평가 완료 상태 체크\n  if (isEvaluationComplete) {\n    return (\n      <Container maxWidth=\"md\" sx={{ py: 2 }}>\n        <Card sx={{ borderRadius: 2 }}>\n          <CardContent sx={{ p: 3, textAlign: 'center' }}>\n            <Typography variant=\"h6\" color=\"success.main\">\n              평가가 완료되었습니다!\n            </Typography>\n            <Button onClick={onClose} sx={{ mt: 2 }}>\n              닫기\n            </Button>\n          </CardContent>\n        </Card>\n      </Container>\n    );\n  }\n\n  // 데이터 유효성 검사\n  if (!vocabularyData || vocabularyData.length === 0) {\n    return (\n      <Container maxWidth=\"md\" sx={{ py: 2 }}>\n        <Card sx={{ borderRadius: 2 }}>\n          <CardContent sx={{ p: 3, textAlign: 'center' }}>\n            <Typography variant=\"h6\" color=\"error\">\n              평가할 단어가 없습니다.\n            </Typography>\n            <Button onClick={onClose} sx={{ mt: 2 }}>\n              닫기\n            </Button>\n          </CardContent>\n        </Card>\n      </Container>\n    );\n  }\n\n  const currentWord = wordsToEvaluate[currentWordIndex];\n\n\n  // 디버깅 로그 추가\n  console.log('=== VocabularyEvaluation 디버깅 ===');\n  console.log('wordsToEvaluate:', wordsToEvaluate);\n  console.log('currentWordIndex:', currentWordIndex);\n  console.log('currentWord:', currentWord);\n  console.log('currentWord.word:', currentWord?.word);\n  console.log('currentWord.meaning:', currentWord?.meaning);\n\n  // 현재 단어가 유효한지 확인\n  if (!currentWord) {\n    console.error('currentWord가 undefined입니다');\n    return (\n      <Container maxWidth=\"md\" sx={{ py: 2 }}>\n        <Card sx={{ borderRadius: 2 }}>\n          <CardContent sx={{ p: 3, textAlign: 'center' }}>\n            <Typography variant=\"h6\" color=\"error\">\n              단어 정보를 불러올 수 없습니다.\n            </Typography>\n            <Button onClick={onClose} sx={{ mt: 2 }}>\n              닫기\n            </Button>\n          </CardContent>\n        </Card>\n      </Container>\n    );\n  }\n\n  // 기호와 부호를 제거하는 함수\n  const removeSymbols = (text: string): string => {\n    return text\n      .toLowerCase()\n      .trim()\n      .replace(/[()\\[\\]{}<>\"\"''`~!@#$%^&*+=|\\\\:;'\",.?]/g, '') // 괄호, 따옴표, 특수문자 제거\n      .replace(/\\s+/g, ' '); // 연속된 공백을 하나로\n  };\n\n  const evaluateWithGemini = async (userAnswer: string, correctAnswer: string, word: string) => {\n    try {\n      // API 키를 직접 설정 (환경변수 문제 해결)\n      const GEMINI_API_KEY = 'AIzaSyDQJ6SXBexKbCGeU-DXWCVmtfCJ56gAATs';\n      \n      console.log('=== Gemini API 디버깅 ===');\n      console.log('Gemini API 키 설정됨:', !!GEMINI_API_KEY);\n      console.log('API 키 앞 10자리:', GEMINI_API_KEY.substring(0, 10) + '...');\n\n      // 기호 제거된 답변들\n      const cleanUserAnswer = removeSymbols(userAnswer);\n      const cleanCorrectAnswer = removeSymbols(correctAnswer);\n      \n      console.log('원본 사용자 답변:', userAnswer);\n      console.log('정리된 사용자 답변:', cleanUserAnswer);\n      console.log('원본 정답:', correctAnswer);\n      console.log('정리된 정답:', cleanCorrectAnswer);\n\n      // 기호 제거 후 정확히 일치하면 100점\n      if (cleanUserAnswer === cleanCorrectAnswer) {\n        console.log('기호 제거 후 완전 일치 - 100점');\n        return 100;\n      }\n\n      // 핵심 단어 부분 정답 체크\n      const checkPartialMatch = (userAnswer: string, correctAnswer: string) => {\n        const userWords = userAnswer.toLowerCase().split(/[\\s,~을를이가에서의도로]/);\n        const correctWords = correctAnswer.toLowerCase().split(/[\\s,~을를이가에서의도로]/);\n        \n        // 핵심 동사/명사 추출 (2글자 이상)\n        const userKeywords = userWords.filter(word => word.length >= 2);\n        const correctKeywords = correctWords.filter(word => word.length >= 2);\n        \n        console.log('사용자 키워드:', userKeywords);\n        console.log('정답 키워드:', correctKeywords);\n        \n        // 동의어 매핑\n        const synonyms = new Map([\n          ['요구하다', ['필요하다', '구하다', '원하다', '바라다']],\n          ['필요하다', ['요구하다', '구하다', '원하다', '바라다']],\n          ['제공하다', ['주다', '공급하다', '드리다', '건네다']],\n          ['주다', ['제공하다', '공급하다', '드리다', '건네다']],\n          ['만들다', ['생성하다', '창조하다', '제작하다', '생산하다']],\n          ['생성하다', ['만들다', '창조하다', '제작하다', '생산하다']],\n        ]);\n        \n        // 핵심 키워드가 포함되어 있는지 체크\n        for (const userKeyword of userKeywords) {\n          for (const correctKeyword of correctKeywords) {\n            // 직접 매치\n            if (userKeyword.includes(correctKeyword) || correctKeyword.includes(userKeyword)) {\n              console.log(`키워드 직접 매치: ${userKeyword} <-> ${correctKeyword}`);\n              return true;\n            }\n            \n            // 동의어 매치\n            const correctSynonyms = synonyms.get(correctKeyword) || [];\n            const userSynonyms = synonyms.get(userKeyword) || [];\n            \n            if (correctSynonyms.includes(userKeyword) || userSynonyms.includes(correctKeyword)) {\n              console.log(`동의어 매치: ${userKeyword} <-> ${correctKeyword}`);\n              return true;\n            }\n          }\n        }\n        \n        return false;\n      };\n\n      // 부분 정답 체크\n      if (checkPartialMatch(cleanUserAnswer, cleanCorrectAnswer)) {\n        console.log('핵심 키워드 매치 - 100점');\n        return 100;\n      }\n\n      const prompt = `다음 영어 단어의 뜻을 채점해주세요:\n영어 단어: ${word}\n정답: ${correctAnswer}\n사용자 답변: ${userAnswer}\n\n채점 기준:\n1. 핵심 의미가 일치하면 100점 (완전정답)\n2. 핵심 동사나 명사가 포함되어 있으면 100점 처리\n   - 예: \"A에게 B를 요구하다\" → \"요구하다\", \"필요하다\"도 100점\n   - 예: \"~을 제공하다\" → \"제공하다\", \"주다\"도 100점  \n3. 의미가 유사하거나 부분적으로 맞으면 80-90점\n4. 완전히 틀리면 0점\n\n점수만 숫자로 답변해주세요.`;\n\n      console.log('Gemini API 호출 시작...');\n      console.log('프롬프트:', prompt);\n\n      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${GEMINI_API_KEY}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          contents: [{ parts: [{ text: prompt }] }]\n        })\n      });\n\n      console.log('API 응답 상태:', response.status);\n      console.log('API 응답 OK:', response.ok);\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API 응답 오류 내용:', errorText);\n        throw new Error(`API 응답 오류: ${response.status} - ${errorText}`);\n      }\n\n      const data = await response.json();\n      console.log('API 응답 데이터:', data);\n      \n      if (!data.candidates || !data.candidates[0] || !data.candidates[0].content) {\n        console.error('API 응답 형식 오류:', data);\n        throw new Error('API 응답 형식 오류');\n      }\n\n      const scoreText = data.candidates[0].content.parts[0].text.trim();\n      console.log('추출된 점수 텍스트:', scoreText);\n      \n      const score = parseInt(scoreText);\n      console.log('파싱된 점수:', score);\n      \n      if (isNaN(score)) {\n        throw new Error(`점수 파싱 오류: \"${scoreText}\"`);\n      }\n      \n      const finalScore = Math.max(0, Math.min(100, score));\n      console.log('최종 점수:', finalScore);\n      \n      return finalScore;\n    } catch (error) {\n      console.error('Gemini API 호출 실패:', error);\n      \n      // API 실패 시 기본 채점 로직 (기호 제거 후 비교)\n      const cleanUser = removeSymbols(userAnswer);\n      const cleanCorrect = removeSymbols(correctAnswer);\n      \n      if (cleanUser === cleanCorrect) {\n        console.log('API 실패 시 기본 채점: 기호 제거 후 완전 일치 - 100점');\n        return 100;\n      } else if (cleanUser.includes(cleanCorrect) || cleanCorrect.includes(cleanUser)) {\n        console.log('API 실패 시 기본 채점: 기호 제거 후 부분 일치 - 70점');\n        return 70;\n      } else {\n        console.log('API 실패 시 기본 채점: 기호 제거 후 불일치 - 30점');\n        return 30; // API 실패 시 최소 점수 보장\n      }\n    }\n  };\n\n  const handleSubmitAnswer = async () => {\n    // 평가 완료 상태 체크\n    if (isEvaluationComplete) {\n      console.log('평가가 이미 완료되었습니다.');\n      return;\n    }\n\n    console.log('=== handleSubmitAnswer 디버깅 ===');\n    console.log('userAnswer:', userAnswer);\n    console.log('userAnswer.trim():', userAnswer?.trim());\n    console.log('currentWord:', currentWord);\n    console.log('currentWord.meaning:', currentWord?.meaning);\n    console.log('currentWord.word:', currentWord?.word);\n    console.log('currentWord.id:', currentWord?.id);\n\n    if (!userAnswer || !userAnswer.trim()) {\n      console.error('사용자 답변이 비어있음');\n      alert('답변을 입력해주세요.');\n      return;\n    }\n    \n    if (!currentWord) {\n      console.error('currentWord가 undefined');\n      alert('단어 정보가 올바르지 않습니다. (currentWord 없음)');\n      return;\n    }\n    \n    if (!currentWord.meaning) {\n      console.error('currentWord.meaning이 undefined:', currentWord);\n      alert('단어 정보가 올바르지 않습니다. (meaning 없음)');\n      return;\n    }\n    \n    setIsEvaluating(true);\n\n    try {\n      const score = await evaluateWithGemini(userAnswer, currentWord.meaning, currentWord.word);\n      const isCorrect = score >= 80;\n\n      const result: EvaluationResult = {\n        wordId: currentWord.id || 'unknown',\n        word: currentWord.word || 'unknown',\n        userAnswer: userAnswer.trim(),\n        correctAnswer: currentWord.meaning || 'unknown',\n        score: score,\n        isCorrect: isCorrect,\n      };\n\n      setCurrentResult(result);\n      setShowResult(true);\n    } catch (error) {\n      console.error('평가 중 오류 발생:', error);\n      alert('평가 중 오류가 발생했습니다.');\n    } finally {\n      setIsEvaluating(false);\n    }\n  };\n\n  const handleNextWord = () => {\n    // 평가 완료 상태 체크\n    if (isEvaluationComplete) {\n      console.log('평가가 이미 완료되었습니다.');\n      return;\n    }\n\n    // 자동 이동 타이머가 있다면 취소\n    if (autoNextTimer) {\n      clearTimeout(autoNextTimer);\n      setAutoNextTimer(null);\n    }\n    \n    if (currentResult) {\n      // 현재 결과를 저장\n      const newResults = [...evaluationResults, currentResult];\n      setEvaluationResults(newResults);\n      \n      // 전체 결과에도 추가/업데이트\n      const updatedAllResults = [...allResults];\n      const existingIndex = updatedAllResults.findIndex(r => r.wordId === currentResult.wordId);\n      if (existingIndex >= 0) {\n        updatedAllResults[existingIndex] = currentResult;\n      } else {\n        updatedAllResults.push(currentResult);\n      }\n      setAllResults(updatedAllResults);\n    }\n\n    // 다음 단어로 이동 또는 라운드 완료 체크\n    if (currentWordIndex + 1 < wordsToEvaluate.length) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setUserAnswer('');\n      setShowResult(false);\n      setCurrentResult(null);\n    } else {\n      // 라운드 완료 - 현재 라운드의 모든 결과 수집\n      const currentRoundResults = [...evaluationResults];\n      if (currentResult) {\n        currentRoundResults.push(currentResult);\n      }\n      \n      // 현재 라운드에서 100점 미만인 단어들 찾기\n      const incompleteWords = wordsToEvaluate.filter((word, index) => {\n        const result = currentRoundResults[index];\n        return !result || result.score < 100;\n      });\n      \n      console.log('=== 라운드 완료 디버깅 ===');\n      console.log('현재 라운드:', currentRound);\n      console.log('현재 라운드 결과:', currentRoundResults);\n      console.log('미완성 단어 수:', incompleteWords.length);\n      console.log('미완성 단어들:', incompleteWords);\n      \n      if (incompleteWords.length > 0 && currentRound < 3) { // 최대 3라운드로 제한\n        // 다음 라운드 시작\n        console.log('다음 라운드 시작:', currentRound + 1);\n        setCurrentRound(currentRound + 1);\n        setWordsToEvaluate(incompleteWords);\n        setCurrentWordIndex(0);\n        setEvaluationResults([]);\n        setUserAnswer('');\n        setShowResult(false);\n        setCurrentResult(null);\n      } else {\n        // 모든 단어 완료 또는 최대 라운드 도달\n        console.log('평가 완료 - 모든 결과 전달');\n        const finalResults = [...allResults];\n        if (currentResult) {\n          const existingIndex = finalResults.findIndex(r => r.wordId === currentResult.wordId);\n          if (existingIndex >= 0) {\n            finalResults[existingIndex] = currentResult;\n          } else {\n            finalResults.push(currentResult);\n          }\n        }\n        setIsEvaluationComplete(true);\n        onComplete(finalResults);\n      }\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ py: 2 }}>\n      <Card sx={{ borderRadius: isMobile ? 2 : 1 }}>\n        <CardContent sx={{ p: isMobile ? 3 : 2 }}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n            <Box>\n              <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\n                단어 평가\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                라운드 {currentRound} - {wordsToEvaluate.length}개 단어\n              </Typography>\n            </Box>\n            <IconButton onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          </Box>\n\n\n\n          {!showResult ? (\n            <Box>\n              <Box sx={{ textAlign: 'center', mb: 4 }}>\n                <Typography variant=\"h3\" sx={{ fontWeight: 700, mb: 2 }}>\n            {currentWord.word}\n          </Typography>\n          {currentWord.example && (\n                  <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                    예문: {currentWord.example}\n            </Typography>\n          )}\n              </Box>\n\n        <Box sx={{ mb: 3 }}>\n                <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                  이 단어의 뜻을 입력하세요:\n          </Typography>\n                          <TextField\n                  fullWidth\n                  multiline\n                  rows={3}\n                  variant=\"outlined\"\n                  placeholder=\"뜻을 입력하세요...\"\n                  value={userAnswer}\n                  onChange={(e) => setUserAnswer(e.target.value)}\n                  onKeyPress={(e) => {\n                    if (e.key === 'Enter' && !e.shiftKey && !isEvaluating && userAnswer.trim()) {\n                      e.preventDefault();\n                      handleSubmitAnswer();\n                    }\n                  }}\n                  disabled={isEvaluating}\n                  sx={{ mb: 2 }}\n                  inputRef={(ref) => setInputRef(ref)}\n                />\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  size=\"large\"\n                  onClick={handleSubmitAnswer}\n                  disabled={!userAnswer.trim() || isEvaluating}\n                  startIcon={<SendIcon />}\n                >\n                  {isEvaluating ? '평가 중...' : '평가하기'}\n                </Button>\n              </Box>\n            </Box>\n          ) : (\n            <Box>\n              <Box sx={{ textAlign: 'center', mb: 3 }}>\n                {/* 영단어 */}\n                <Typography variant=\"h4\" sx={{ mb: 3, fontWeight: 600 }}>\n                  {currentWord.word}\n                </Typography>\n                \n                {/* 정답/입력값 */}\n                <Typography variant=\"h6\" sx={{ mb: 2, color: 'text.primary' }}>\n                  정답: {currentResult?.correctAnswer} / 입력값: {currentResult?.userAnswer}\n                </Typography>\n                \n                {/* 점수 */}\n                <Typography variant=\"h5\" sx={{ \n                  fontWeight: 600,\n                  color: currentResult?.score === 100 ? 'success.main' : 'primary.main'\n                }}>\n                  {currentResult?.score}점\n                </Typography>\n                \n\n        </Box>\n\n        <Button\n          fullWidth\n          variant=\"contained\"\n          size=\"large\"\n          onClick={handleNextWord}\n          startIcon={<PlayArrowIcon />}\n          color={currentResult?.score === 100 ? 'success' : 'primary'}\n        >\n          라운드 완료\n        </Button>\n        </Box>\n          )}\n      </CardContent>\n    </Card>\n    </Container>\n  );\n};\n\nexport default VocabularyEvaluation; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
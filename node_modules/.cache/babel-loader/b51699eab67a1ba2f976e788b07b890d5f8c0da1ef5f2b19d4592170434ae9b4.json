{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\pro_planner\\\\src\\\\components\\\\VocabularyEvaluation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Button, TextField, LinearProgress, Alert, Box, Typography } from '@mui/material';\nimport { CheckCircle as CheckCircleIcon, Cancel as CancelIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VocabularyEvaluation = ({\n  vocabularyData,\n  onComplete,\n  attemptNumber,\n  studentId\n}) => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [userInput, setUserInput] = useState('');\n  const [results, setResults] = useState([]);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [suggestions, setSuggestions] = useState([]);\n  const [evaluationWords, setEvaluationWords] = useState([]);\n\n  // 평가 대상 단어 필터링 (1라운드에서 \"알겠어요\"를 선택한 단어 제외)\n  useEffect(() => {\n    const wordsToEvaluate = vocabularyData.filter(item => !(item.round === 1 && item.isKnown === true));\n    setEvaluationWords(wordsToEvaluate);\n  }, [vocabularyData]);\n  const currentWord = evaluationWords[currentIndex];\n  const progress = evaluationWords.length > 0 ? (currentIndex + 1) / evaluationWords.length * 100 : 0;\n\n  // 뜻에서 주요 부분의 첫 글자 추출하는 함수\n  const extractKeyLetter = meaning => {\n    // 괄호 제거\n    let cleanMeaning = meaning.replace(/\\([^)]*\\)/g, '').trim();\n\n    // 조사 제거 패턴\n    const particlePatterns = [/~라고\\s+/g, /~하고\\s+/g, /~에게\\s+/g, /~를\\s+/g, /~을\\s+/g, /~가\\s+/g, /~이\\s+/g, /~의\\s+/g, /~에\\s+/g, /~로\\s+/g, /~으로\\s+/g, /A에게\\s+B를\\s+/g];\n    particlePatterns.forEach(pattern => {\n      cleanMeaning = cleanMeaning.replace(pattern, '');\n    });\n\n    // 공백으로 분리\n    const words = cleanMeaning.split(/\\s+/);\n\n    // 단어가 하나면 그 단어 반환\n    if (words.length === 1) {\n      return words[0];\n    }\n\n    // 동사나 명사 찾기 (보통 마지막 단어가 핵심)\n    // 하지만 \"제공하다\", \"주다\" 같은 동사가 앞에 있을 수도 있음\n    for (const word of words) {\n      // 동사 어미로 끝나는 단어 찾기\n      if (word.endsWith('하다') || word.endsWith('되다') || word.endsWith('이다')) {\n        return word.charAt(0);\n      }\n    }\n\n    // 명사일 가능성이 높은 첫 번째 의미있는 단어의 첫 글자\n    return words[0].charAt(0);\n  };\n\n  // 자동완성 제안 생성\n  const generateSuggestions = input => {\n    if (!currentWord || !input) {\n      setSuggestions([]);\n      return;\n    }\n    const keyLetter = extractKeyLetter(currentWord.meaning);\n\n    // 한 글자 단어인 경우\n    if (keyLetter.length === 1) {\n      if (input === keyLetter) {\n        setSuggestions([currentWord.meaning]);\n      } else {\n        setSuggestions([]);\n      }\n    } else {\n      // 전체 단어가 정답인 경우\n      if (keyLetter.toLowerCase().startsWith(input.toLowerCase())) {\n        setSuggestions([keyLetter]);\n      } else {\n        setSuggestions([]);\n      }\n    }\n  };\n\n  // 입력 변경 처리\n  const handleInputChange = value => {\n    setUserInput(value);\n    generateSuggestions(value);\n\n    // 자동완성 제안이 없으면 오답 처리\n    if (value && currentWord) {\n      const keyLetter = extractKeyLetter(currentWord.meaning);\n      const isMatch = keyLetter.length === 1 ? value === keyLetter : keyLetter.toLowerCase().startsWith(value.toLowerCase());\n      if (!isMatch && value.length >= 1) {\n        // 첫 글자가 틀렸으면 바로 오답 처리\n        handleAnswer(false, value);\n      }\n    }\n  };\n\n  // 답변 처리\n  const handleAnswer = (correct, answer) => {\n    setIsCorrect(correct);\n    setShowFeedback(true);\n    const result = {\n      wordId: currentWord.id,\n      isCorrect: correct,\n      userAnswer: answer\n    };\n    setResults([...results, result]);\n\n    // 1초 후 다음 문제로\n    setTimeout(() => {\n      if (currentIndex < evaluationWords.length - 1) {\n        setCurrentIndex(currentIndex + 1);\n        setUserInput('');\n        setShowFeedback(false);\n        setIsCorrect(null);\n        setSuggestions([]);\n      } else {\n        // 평가 완료\n        onComplete([...results, result], attemptNumber);\n      }\n    }, 1000);\n  };\n\n  // 자동완성 선택 또는 엔터키 처리\n  const handleSuggestionSelect = suggestion => {\n    const keyLetter = extractKeyLetter(currentWord.meaning);\n    const isFullAnswer = keyLetter.length > 1;\n    if (isFullAnswer && suggestion === keyLetter) {\n      handleAnswer(true, suggestion);\n    } else if (!isFullAnswer && suggestion === currentWord.meaning) {\n      handleAnswer(true, keyLetter);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && suggestions.length > 0) {\n      handleSuggestionSelect(suggestions[0]);\n    }\n  };\n  if (evaluationWords.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        maxWidth: 600,\n        mx: 'auto',\n        mt: 3\n      },\n      children: \"\\uD3C9\\uAC00\\uD560 \\uB2E8\\uC5B4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uBA3C\\uC800 \\uD559\\uC2B5\\uC744 \\uC644\\uB8CC\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this);\n  }\n  if (!currentWord) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 800,\n      mx: 'auto',\n      mt: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: [attemptNumber, \"\\uCC28 \\uD3C9\\uAC00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [currentIndex + 1, \" / \", evaluationWords.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: progress,\n        sx: {\n          mb: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          sx: {\n            fontWeight: 'bold',\n            mb: 2\n          },\n          children: currentWord.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), currentWord.example && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            fontStyle: 'italic',\n            color: 'text.secondary'\n          },\n          children: [\"\\\"\", currentWord.example, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mb: 1\n          },\n          children: \"\\uB73B\\uC758 \\uCCAB \\uAE00\\uC790\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            value: userInput,\n            onChange: e => handleInputChange(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"\\uCCAB \\uAE00\\uC790 \\uC785\\uB825...\",\n            disabled: showFeedback,\n            autoFocus: true,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), suggestions.length > 0 && !showFeedback && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              top: '100%',\n              left: 0,\n              right: 0,\n              mt: 0.5,\n              bgcolor: 'background.paper',\n              border: 1,\n              borderColor: 'divider',\n              borderRadius: 1,\n              boxShadow: 2,\n              zIndex: 10\n            },\n            children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleSuggestionSelect(suggestion),\n              fullWidth: true,\n              sx: {\n                justifyContent: 'flex-start',\n                px: 2,\n                py: 1,\n                textTransform: 'none',\n                '&:hover': {\n                  bgcolor: 'action.hover'\n                }\n              },\n              children: suggestion\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), showFeedback && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: isCorrect ? 'success' : 'error',\n        icon: isCorrect ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 53\n        }, this),\n        sx: {\n          mb: 3\n        },\n        children: isCorrect ? '정답입니다!' : `오답입니다. 정답: ${currentWord.meaning}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          gap: 0.5\n        },\n        children: evaluationWords.map((_, index) => {\n          var _results$index;\n          return /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 8,\n              height: 8,\n              borderRadius: '50%',\n              bgcolor: index < currentIndex ? (_results$index = results[index]) !== null && _results$index !== void 0 && _results$index.isCorrect ? 'success.main' : 'error.main' : index === currentIndex ? 'primary.main' : 'grey.300'\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s(VocabularyEvaluation, \"aWJjcRjCjXN5medc1ckOV7Qxiao=\");\n_c = VocabularyEvaluation;\nexport default VocabularyEvaluation;\nvar _c;\n$RefreshReg$(_c, \"VocabularyEvaluation\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Button","TextField","LinearProgress","Alert","Box","Typography","CheckCircle","CheckCircleIcon","Cancel","CancelIcon","jsxDEV","_jsxDEV","VocabularyEvaluation","vocabularyData","onComplete","attemptNumber","studentId","_s","currentIndex","setCurrentIndex","userInput","setUserInput","results","setResults","showFeedback","setShowFeedback","isCorrect","setIsCorrect","suggestions","setSuggestions","evaluationWords","setEvaluationWords","wordsToEvaluate","filter","item","round","isKnown","currentWord","progress","length","extractKeyLetter","meaning","cleanMeaning","replace","trim","particlePatterns","forEach","pattern","words","split","word","endsWith","charAt","generateSuggestions","input","keyLetter","toLowerCase","startsWith","handleInputChange","value","isMatch","handleAnswer","correct","answer","result","wordId","id","userAnswer","setTimeout","handleSuggestionSelect","suggestion","isFullAnswer","handleKeyPress","e","key","severity","sx","maxWidth","mx","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","mb","variant","color","textAlign","fontWeight","example","fontStyle","position","fullWidth","onChange","target","onKeyPress","placeholder","disabled","autoFocus","top","left","right","bgcolor","border","borderColor","borderRadius","boxShadow","zIndex","map","index","onClick","px","py","textTransform","icon","gap","_","_results$index","width","height","_c","$RefreshReg$"],"sources":["C:/Users/user/pro_planner/src/components/VocabularyEvaluation.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  TextField,\r\n  LinearProgress,\r\n  Alert,\r\n  Box,\r\n  Typography,\r\n  Chip,\r\n} from '@mui/material';\r\nimport {\r\n  CheckCircle as CheckCircleIcon,\r\n  Cancel as CancelIcon,\r\n} from '@mui/icons-material';\r\n\r\ninterface VocabularyItem {\r\n  id: string;\r\n  word: string;\r\n  meaning: string;\r\n  example?: string;\r\n  translation?: string;\r\n  round?: number;\r\n  isKnown?: boolean;\r\n}\r\n\r\ninterface EvaluationResult {\r\n  wordId: string;\r\n  isCorrect: boolean;\r\n  userAnswer: string;\r\n}\r\n\r\ninterface VocabularyEvaluationProps {\r\n  vocabularyData: VocabularyItem[];\r\n  onComplete: (results: EvaluationResult[], attemptNumber: number) => void;\r\n  attemptNumber: number;\r\n  studentId: string;\r\n}\r\n\r\nconst VocabularyEvaluation: React.FC<VocabularyEvaluationProps> = ({\r\n  vocabularyData,\r\n  onComplete,\r\n  attemptNumber,\r\n  studentId\r\n}) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [results, setResults] = useState<EvaluationResult[]>([]);\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState<boolean | null>(null);\r\n  const [suggestions, setSuggestions] = useState<string[]>([]);\r\n  const [evaluationWords, setEvaluationWords] = useState<VocabularyItem[]>([]);\r\n\r\n  // 평가 대상 단어 필터링 (1라운드에서 \"알겠어요\"를 선택한 단어 제외)\r\n  useEffect(() => {\r\n    const wordsToEvaluate = vocabularyData.filter(\r\n      item => !(item.round === 1 && item.isKnown === true)\r\n    );\r\n    setEvaluationWords(wordsToEvaluate);\r\n  }, [vocabularyData]);\r\n\r\n  const currentWord = evaluationWords[currentIndex];\r\n  const progress = evaluationWords.length > 0 \r\n    ? ((currentIndex + 1) / evaluationWords.length) * 100 \r\n    : 0;\r\n\r\n  // 뜻에서 주요 부분의 첫 글자 추출하는 함수\r\n  const extractKeyLetter = (meaning: string): string => {\r\n    // 괄호 제거\r\n    let cleanMeaning = meaning.replace(/\\([^)]*\\)/g, '').trim();\r\n    \r\n    // 조사 제거 패턴\r\n    const particlePatterns = [\r\n      /~라고\\s+/g,\r\n      /~하고\\s+/g,\r\n      /~에게\\s+/g,\r\n      /~를\\s+/g,\r\n      /~을\\s+/g,\r\n      /~가\\s+/g,\r\n      /~이\\s+/g,\r\n      /~의\\s+/g,\r\n      /~에\\s+/g,\r\n      /~로\\s+/g,\r\n      /~으로\\s+/g,\r\n      /A에게\\s+B를\\s+/g,\r\n    ];\r\n\r\n    particlePatterns.forEach(pattern => {\r\n      cleanMeaning = cleanMeaning.replace(pattern, '');\r\n    });\r\n\r\n    // 공백으로 분리\r\n    const words = cleanMeaning.split(/\\s+/);\r\n    \r\n    // 단어가 하나면 그 단어 반환\r\n    if (words.length === 1) {\r\n      return words[0];\r\n    }\r\n\r\n    // 동사나 명사 찾기 (보통 마지막 단어가 핵심)\r\n    // 하지만 \"제공하다\", \"주다\" 같은 동사가 앞에 있을 수도 있음\r\n    for (const word of words) {\r\n      // 동사 어미로 끝나는 단어 찾기\r\n      if (word.endsWith('하다') || word.endsWith('되다') || word.endsWith('이다')) {\r\n        return word.charAt(0);\r\n      }\r\n    }\r\n\r\n    // 명사일 가능성이 높은 첫 번째 의미있는 단어의 첫 글자\r\n    return words[0].charAt(0);\r\n  };\r\n\r\n  // 자동완성 제안 생성\r\n  const generateSuggestions = (input: string) => {\r\n    if (!currentWord || !input) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n\r\n    const keyLetter = extractKeyLetter(currentWord.meaning);\r\n    \r\n    // 한 글자 단어인 경우\r\n    if (keyLetter.length === 1) {\r\n      if (input === keyLetter) {\r\n        setSuggestions([currentWord.meaning]);\r\n      } else {\r\n        setSuggestions([]);\r\n      }\r\n    } else {\r\n      // 전체 단어가 정답인 경우\r\n      if (keyLetter.toLowerCase().startsWith(input.toLowerCase())) {\r\n        setSuggestions([keyLetter]);\r\n      } else {\r\n        setSuggestions([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 입력 변경 처리\r\n  const handleInputChange = (value: string) => {\r\n    setUserInput(value);\r\n    generateSuggestions(value);\r\n    \r\n    // 자동완성 제안이 없으면 오답 처리\r\n    if (value && currentWord) {\r\n      const keyLetter = extractKeyLetter(currentWord.meaning);\r\n      const isMatch = keyLetter.length === 1 \r\n        ? value === keyLetter \r\n        : keyLetter.toLowerCase().startsWith(value.toLowerCase());\r\n      \r\n      if (!isMatch && value.length >= 1) {\r\n        // 첫 글자가 틀렸으면 바로 오답 처리\r\n        handleAnswer(false, value);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 답변 처리\r\n  const handleAnswer = (correct: boolean, answer: string) => {\r\n    setIsCorrect(correct);\r\n    setShowFeedback(true);\r\n    \r\n    const result: EvaluationResult = {\r\n      wordId: currentWord.id,\r\n      isCorrect: correct,\r\n      userAnswer: answer\r\n    };\r\n    \r\n    setResults([...results, result]);\r\n    \r\n    // 1초 후 다음 문제로\r\n    setTimeout(() => {\r\n      if (currentIndex < evaluationWords.length - 1) {\r\n        setCurrentIndex(currentIndex + 1);\r\n        setUserInput('');\r\n        setShowFeedback(false);\r\n        setIsCorrect(null);\r\n        setSuggestions([]);\r\n      } else {\r\n        // 평가 완료\r\n        onComplete([...results, result], attemptNumber);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  // 자동완성 선택 또는 엔터키 처리\r\n  const handleSuggestionSelect = (suggestion: string) => {\r\n    const keyLetter = extractKeyLetter(currentWord.meaning);\r\n    const isFullAnswer = keyLetter.length > 1;\r\n    \r\n    if (isFullAnswer && suggestion === keyLetter) {\r\n      handleAnswer(true, suggestion);\r\n    } else if (!isFullAnswer && suggestion === currentWord.meaning) {\r\n      handleAnswer(true, keyLetter);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter' && suggestions.length > 0) {\r\n      handleSuggestionSelect(suggestions[0]);\r\n    }\r\n  };\r\n\r\n  if (evaluationWords.length === 0) {\r\n    return (\r\n      <Alert severity=\"info\" sx={{ maxWidth: 600, mx: 'auto', mt: 3 }}>\r\n        평가할 단어가 없습니다. 먼저 학습을 완료해주세요.\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  if (!currentWord) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 800, mx: 'auto', mt: 3 }}>\r\n      <CardContent>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n          <Typography variant=\"h5\">{attemptNumber}차 평가</Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {currentIndex + 1} / {evaluationWords.length}\r\n          </Typography>\r\n        </Box>\r\n        <LinearProgress variant=\"determinate\" value={progress} sx={{ mb: 3 }} />\r\n        {/* 현재 단어 표시 */}\r\n        <Box sx={{ textAlign: 'center', mb: 4 }}>\r\n          <Typography variant=\"h3\" sx={{ fontWeight: 'bold', mb: 2 }}>\r\n            {currentWord.word}\r\n          </Typography>\r\n          {currentWord.example && (\r\n            <Typography variant=\"body1\" sx={{ fontStyle: 'italic', color: 'text.secondary' }}>\r\n              \"{currentWord.example}\"\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n\r\n        {/* 입력 필드 */}\r\n        <Box sx={{ mb: 3 }}>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n            뜻의 첫 글자를 입력하세요\r\n          </Typography>\r\n          <Box sx={{ position: 'relative' }}>\r\n            <TextField\r\n              fullWidth\r\n              value={userInput}\r\n              onChange={(e) => handleInputChange(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"첫 글자 입력...\"\r\n              disabled={showFeedback}\r\n              autoFocus\r\n              variant=\"outlined\"\r\n            />\r\n            \r\n            {/* 자동완성 제안 */}\r\n            {suggestions.length > 0 && !showFeedback && (\r\n              <Box sx={{\r\n                position: 'absolute',\r\n                top: '100%',\r\n                left: 0,\r\n                right: 0,\r\n                mt: 0.5,\r\n                bgcolor: 'background.paper',\r\n                border: 1,\r\n                borderColor: 'divider',\r\n                borderRadius: 1,\r\n                boxShadow: 2,\r\n                zIndex: 10\r\n              }}>\r\n                {suggestions.map((suggestion, index) => (\r\n                  <Button\r\n                    key={index}\r\n                    onClick={() => handleSuggestionSelect(suggestion)}\r\n                    fullWidth\r\n                    sx={{\r\n                      justifyContent: 'flex-start',\r\n                      px: 2,\r\n                      py: 1,\r\n                      textTransform: 'none',\r\n                      '&:hover': {\r\n                        bgcolor: 'action.hover'\r\n                      }\r\n                    }}\r\n                  >\r\n                    {suggestion}\r\n                  </Button>\r\n                ))}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* 피드백 표시 */}\r\n        {showFeedback && (\r\n          <Alert\r\n            severity={isCorrect ? 'success' : 'error'}\r\n            icon={isCorrect ? <CheckCircleIcon /> : <CancelIcon />}\r\n            sx={{ mb: 3 }}\r\n          >\r\n            {isCorrect ? '정답입니다!' : `오답입니다. 정답: ${currentWord.meaning}`}\r\n          </Alert>\r\n        )}\r\n\r\n        {/* 진행 상태 */}\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', gap: 0.5 }}>\r\n          {evaluationWords.map((_, index) => (\r\n            <Box\r\n              key={index}\r\n              sx={{\r\n                width: 8,\r\n                height: 8,\r\n                borderRadius: '50%',\r\n                bgcolor: index < currentIndex\r\n                  ? results[index]?.isCorrect\r\n                    ? 'success.main'\r\n                    : 'error.main'\r\n                  : index === currentIndex\r\n                  ? 'primary.main'\r\n                  : 'grey.300'\r\n              }}\r\n            />\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default VocabularyEvaluation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\pro_planner\\\\src\\\\components\\\\VocabularyEvaluation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Card, CardContent, Button, TextField, LinearProgress, IconButton, useTheme, useMediaQuery, Container, Alert, Chip } from '@mui/material';\nimport { Close as CloseIcon, PlayArrow as PlayArrowIcon, Send as SendIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VocabularyEvaluation = ({\n  vocabularyData,\n  onComplete,\n  onClose\n}) => {\n  _s();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [isEvaluating, setIsEvaluating] = useState(false);\n  const [evaluationResults, setEvaluationResults] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [currentResult, setCurrentResult] = useState(null);\n  const [autoNextTimer, setAutoNextTimer] = useState(null);\n  const [inputRef, setInputRef] = useState(null);\n\n  // 라운드 관리 상태\n  const [currentRound, setCurrentRound] = useState(1);\n  const [wordsToEvaluate, setWordsToEvaluate] = useState(vocabularyData);\n  const [allResults, setAllResults] = useState([]);\n  const [isEvaluationComplete, setIsEvaluationComplete] = useState(false);\n\n  // 평가 완료 후 자동으로 다음 단어 이동\n  useEffect(() => {\n    if (showResult && currentResult) {\n      // 기존 타이머가 있다면 정리\n      if (autoNextTimer) {\n        clearTimeout(autoNextTimer);\n      }\n\n      // 3초 후 자동으로 다음 단어로 이동\n      const timer = setTimeout(() => {\n        handleNextWord();\n      }, 3000);\n      setAutoNextTimer(timer);\n    }\n\n    // 클린업 함수\n    return () => {\n      if (autoNextTimer) {\n        clearTimeout(autoNextTimer);\n        setAutoNextTimer(null);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showResult, currentResult]);\n\n  // 다음 단어로 넘어갈 때 입력창 자동 포커스\n  useEffect(() => {\n    if (!showResult && inputRef) {\n      // 약간의 지연을 두어 DOM 업데이트 후 포커스\n      setTimeout(() => {\n        inputRef.focus();\n      }, 100);\n    }\n  }, [currentWordIndex, showResult, inputRef]);\n\n  // 평가 완료 상태 체크\n  if (isEvaluationComplete) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        py: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          borderRadius: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            p: 3,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"success.main\",\n            children: \"\\uD3C9\\uAC00\\uAC00 \\uC644\\uB8CC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            sx: {\n              mt: 2\n            },\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 데이터 유효성 검사\n  if (!vocabularyData || vocabularyData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        py: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          borderRadius: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            p: 3,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"error\",\n            children: \"\\uD3C9\\uAC00\\uD560 \\uB2E8\\uC5B4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            sx: {\n              mt: 2\n            },\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n  const currentWord = wordsToEvaluate[currentWordIndex];\n  const progress = (currentWordIndex + 1) / wordsToEvaluate.length * 100;\n\n  // 디버깅 로그 추가\n  console.log('=== VocabularyEvaluation 디버깅 ===');\n  console.log('wordsToEvaluate:', wordsToEvaluate);\n  console.log('currentWordIndex:', currentWordIndex);\n  console.log('currentWord:', currentWord);\n  console.log('currentWord.word:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.word);\n  console.log('currentWord.meaning:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.meaning);\n\n  // 현재 단어가 유효한지 확인\n  if (!currentWord) {\n    console.error('currentWord가 undefined입니다');\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        py: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          borderRadius: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            p: 3,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"error\",\n            children: \"\\uB2E8\\uC5B4 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC62C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            sx: {\n              mt: 2\n            },\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 기호와 부호를 제거하는 함수\n  const removeSymbols = text => {\n    return text.toLowerCase().trim().replace(/[()\\[\\]{}<>\"\"''`~!@#$%^&*+=|\\\\:;'\",.?]/g, '') // 괄호, 따옴표, 특수문자 제거\n    .replace(/\\s+/g, ' '); // 연속된 공백을 하나로\n  };\n  const evaluateWithGemini = async (userAnswer, correctAnswer, word) => {\n    try {\n      // API 키를 직접 설정 (환경변수 문제 해결)\n      const GEMINI_API_KEY = 'AIzaSyDQJ6SXBexKbCGeU-DXWCVmtfCJ56gAATs';\n      console.log('=== Gemini API 디버깅 ===');\n      console.log('Gemini API 키 설정됨:', !!GEMINI_API_KEY);\n      console.log('API 키 앞 10자리:', GEMINI_API_KEY.substring(0, 10) + '...');\n\n      // 기호 제거된 답변들\n      const cleanUserAnswer = removeSymbols(userAnswer);\n      const cleanCorrectAnswer = removeSymbols(correctAnswer);\n      console.log('원본 사용자 답변:', userAnswer);\n      console.log('정리된 사용자 답변:', cleanUserAnswer);\n      console.log('원본 정답:', correctAnswer);\n      console.log('정리된 정답:', cleanCorrectAnswer);\n\n      // 기호 제거 후 정확히 일치하면 100점\n      if (cleanUserAnswer === cleanCorrectAnswer) {\n        console.log('기호 제거 후 완전 일치 - 100점');\n        return 100;\n      }\n      const prompt = `다음 영어 단어의 뜻을 채점해주세요:\n영어 단어: ${word}\n정답: ${correctAnswer}\n사용자 답변: ${userAnswer}\n\n채점 기준:\n1. 핵심 의미가 일치하면 100점 (완전정답)\n2. 핵심 동사나 명사가 포함되어 있으면 100점 처리\n   - 예: \"A에게 B를 요구하다\" → \"요구하다\", \"필요하다\"도 100점\n   - 예: \"~을 제공하다\" → \"제공하다\", \"주다\"도 100점  \n3. 의미가 유사하거나 부분적으로 맞으면 80-90점\n4. 완전히 틀리면 0점\n\n점수만 숫자로 답변해주세요.`;\n      console.log('Gemini API 호출 시작...');\n      console.log('프롬프트:', prompt);\n      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${GEMINI_API_KEY}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: prompt\n            }]\n          }]\n        })\n      });\n      console.log('API 응답 상태:', response.status);\n      console.log('API 응답 OK:', response.ok);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API 응답 오류 내용:', errorText);\n        throw new Error(`API 응답 오류: ${response.status} - ${errorText}`);\n      }\n      const data = await response.json();\n      console.log('API 응답 데이터:', data);\n      if (!data.candidates || !data.candidates[0] || !data.candidates[0].content) {\n        console.error('API 응답 형식 오류:', data);\n        throw new Error('API 응답 형식 오류');\n      }\n      const scoreText = data.candidates[0].content.parts[0].text.trim();\n      console.log('추출된 점수 텍스트:', scoreText);\n      const score = parseInt(scoreText);\n      console.log('파싱된 점수:', score);\n      if (isNaN(score)) {\n        throw new Error(`점수 파싱 오류: \"${scoreText}\"`);\n      }\n      const finalScore = Math.max(0, Math.min(100, score));\n      console.log('최종 점수:', finalScore);\n      return finalScore;\n    } catch (error) {\n      console.error('Gemini API 호출 실패:', error);\n\n      // API 실패 시 기본 채점 로직 (기호 제거 후 비교)\n      const cleanUser = removeSymbols(userAnswer);\n      const cleanCorrect = removeSymbols(correctAnswer);\n      if (cleanUser === cleanCorrect) {\n        console.log('API 실패 시 기본 채점: 기호 제거 후 완전 일치 - 100점');\n        return 100;\n      } else if (cleanUser.includes(cleanCorrect) || cleanCorrect.includes(cleanUser)) {\n        console.log('API 실패 시 기본 채점: 기호 제거 후 부분 일치 - 70점');\n        return 70;\n      } else {\n        console.log('API 실패 시 기본 채점: 기호 제거 후 불일치 - 30점');\n        return 30; // API 실패 시 최소 점수 보장\n      }\n    }\n  };\n  const handleSubmitAnswer = async () => {\n    // 평가 완료 상태 체크\n    if (isEvaluationComplete) {\n      console.log('평가가 이미 완료되었습니다.');\n      return;\n    }\n    console.log('=== handleSubmitAnswer 디버깅 ===');\n    console.log('userAnswer:', userAnswer);\n    console.log('userAnswer.trim():', userAnswer === null || userAnswer === void 0 ? void 0 : userAnswer.trim());\n    console.log('currentWord:', currentWord);\n    console.log('currentWord.meaning:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.meaning);\n    console.log('currentWord.word:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.word);\n    console.log('currentWord.id:', currentWord === null || currentWord === void 0 ? void 0 : currentWord.id);\n    if (!userAnswer || !userAnswer.trim()) {\n      console.error('사용자 답변이 비어있음');\n      alert('답변을 입력해주세요.');\n      return;\n    }\n    if (!currentWord) {\n      console.error('currentWord가 undefined');\n      alert('단어 정보가 올바르지 않습니다. (currentWord 없음)');\n      return;\n    }\n    if (!currentWord.meaning) {\n      console.error('currentWord.meaning이 undefined:', currentWord);\n      alert('단어 정보가 올바르지 않습니다. (meaning 없음)');\n      return;\n    }\n    setIsEvaluating(true);\n    try {\n      const score = await evaluateWithGemini(userAnswer, currentWord.meaning, currentWord.word);\n      const isCorrect = score >= 80;\n      const result = {\n        wordId: currentWord.id || 'unknown',\n        word: currentWord.word || 'unknown',\n        userAnswer: userAnswer.trim(),\n        correctAnswer: currentWord.meaning || 'unknown',\n        score: score,\n        isCorrect: isCorrect\n      };\n      setCurrentResult(result);\n      setShowResult(true);\n    } catch (error) {\n      console.error('평가 중 오류 발생:', error);\n      alert('평가 중 오류가 발생했습니다.');\n    } finally {\n      setIsEvaluating(false);\n    }\n  };\n  const handleNextWord = () => {\n    // 평가 완료 상태 체크\n    if (isEvaluationComplete) {\n      console.log('평가가 이미 완료되었습니다.');\n      return;\n    }\n\n    // 자동 이동 타이머가 있다면 취소\n    if (autoNextTimer) {\n      clearTimeout(autoNextTimer);\n      setAutoNextTimer(null);\n    }\n    if (currentResult) {\n      // 현재 결과를 저장\n      const newResults = [...evaluationResults, currentResult];\n      setEvaluationResults(newResults);\n\n      // 전체 결과에도 추가/업데이트\n      const updatedAllResults = [...allResults];\n      const existingIndex = updatedAllResults.findIndex(r => r.wordId === currentResult.wordId);\n      if (existingIndex >= 0) {\n        updatedAllResults[existingIndex] = currentResult;\n      } else {\n        updatedAllResults.push(currentResult);\n      }\n      setAllResults(updatedAllResults);\n    }\n\n    // 다음 단어로 이동 또는 라운드 완료 체크\n    if (currentWordIndex + 1 < wordsToEvaluate.length) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setUserAnswer('');\n      setShowResult(false);\n      setCurrentResult(null);\n    } else {\n      // 라운드 완료 - 현재 라운드의 모든 결과 수집\n      const currentRoundResults = [...evaluationResults];\n      if (currentResult) {\n        currentRoundResults.push(currentResult);\n      }\n\n      // 현재 라운드에서 100점 미만인 단어들 찾기\n      const incompleteWords = wordsToEvaluate.filter((word, index) => {\n        const result = currentRoundResults[index];\n        return !result || result.score < 100;\n      });\n      console.log('=== 라운드 완료 디버깅 ===');\n      console.log('현재 라운드:', currentRound);\n      console.log('현재 라운드 결과:', currentRoundResults);\n      console.log('미완성 단어 수:', incompleteWords.length);\n      console.log('미완성 단어들:', incompleteWords);\n      if (incompleteWords.length > 0 && currentRound < 3) {\n        // 최대 3라운드로 제한\n        // 다음 라운드 시작\n        console.log('다음 라운드 시작:', currentRound + 1);\n        setCurrentRound(currentRound + 1);\n        setWordsToEvaluate(incompleteWords);\n        setCurrentWordIndex(0);\n        setEvaluationResults([]);\n        setUserAnswer('');\n        setShowResult(false);\n        setCurrentResult(null);\n      } else {\n        // 모든 단어 완료 또는 최대 라운드 도달\n        console.log('평가 완료 - 모든 결과 전달');\n        const finalResults = [...allResults];\n        if (currentResult) {\n          const existingIndex = finalResults.findIndex(r => r.wordId === currentResult.wordId);\n          if (existingIndex >= 0) {\n            finalResults[existingIndex] = currentResult;\n          } else {\n            finalResults.push(currentResult);\n          }\n        }\n        setIsEvaluationComplete(true);\n        onComplete(finalResults);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      py: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        borderRadius: isMobile ? 2 : 1\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          p: isMobile ? 3 : 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              sx: {\n                fontWeight: 600\n              },\n              children: \"\\uB2E8\\uC5B4 \\uD3C9\\uAC00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"\\uB77C\\uC6B4\\uB4DC \", currentRound, \" - \", wordsToEvaluate.length, \"\\uAC1C \\uB2E8\\uC5B4\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: onClose,\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [currentWordIndex + 1, \" / \", wordsToEvaluate.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"primary\",\n              children: [Math.round(progress), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n            variant: \"determinate\",\n            value: progress,\n            sx: {\n              height: 8,\n              borderRadius: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), !showResult ? /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              sx: {\n                fontWeight: 700,\n                mb: 2\n              },\n              children: currentWord.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this), currentWord.example && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              sx: {\n                mb: 2\n              },\n              children: [\"\\uC608\\uBB38: \", currentWord.example]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                mb: 2\n              },\n              children: \"\\uC774 \\uB2E8\\uC5B4\\uC758 \\uB73B\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              rows: 3,\n              variant: \"outlined\",\n              placeholder: \"\\uB73B\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n              value: userAnswer,\n              onChange: e => setUserAnswer(e.target.value),\n              onKeyPress: e => {\n                if (e.key === 'Enter' && !e.shiftKey && !isEvaluating && userAnswer.trim()) {\n                  e.preventDefault();\n                  handleSubmitAnswer();\n                }\n              },\n              disabled: isEvaluating,\n              sx: {\n                mb: 2\n              },\n              inputRef: ref => setInputRef(ref)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"contained\",\n              size: \"large\",\n              onClick: handleSubmitAnswer,\n              disabled: !userAnswer.trim() || isEvaluating,\n              startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 30\n              }, this),\n              children: isEvaluating ? '평가 중...' : '평가하기'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              sx: {\n                mb: 2\n              },\n              children: currentWord.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Alert, {\n              severity: (currentResult === null || currentResult === void 0 ? void 0 : currentResult.score) === 100 ? 'success' : 'info',\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: (currentResult === null || currentResult === void 0 ? void 0 : currentResult.score) === 100 ? '완벽합니다! 100점!' : `${currentResult === null || currentResult === void 0 ? void 0 : currentResult.score}점 - ${currentRound === 1 ? '1차 평가 완료' : '재시험 완료'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this), currentResult && currentResult.score < 100 && currentRound === 1 && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  mt: 1\n                },\n                children: \"\\uD2C0\\uB9B0 \\uB2E8\\uC5B4\\uB294 \\uB098\\uC911\\uC5D0 \\uB2E4\\uC2DC \\uD3C9\\uAC00\\uD569\\uB2C8\\uB2E4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 21\n              }, this), currentResult && currentResult.score < 100 && currentRound > 1 && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  mt: 1\n                },\n                children: \"\\uB2E4\\uC74C \\uB77C\\uC6B4\\uB4DC\\uC5D0\\uC11C \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD558\\uC138\\uC694\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                children: [\"\\uB2F9\\uC2E0\\uC758 \\uB2F5\\uBCC0: \", currentResult === null || currentResult === void 0 ? void 0 : currentResult.userAnswer]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                children: [\"\\uC815\\uB2F5: \", currentResult === null || currentResult === void 0 ? void 0 : currentResult.correctAnswer]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: `점수: ${(currentResult === null || currentResult === void 0 ? void 0 : currentResult.score) || 0}점`,\n              color: (currentResult === null || currentResult === void 0 ? void 0 : currentResult.score) === 100 ? 'success' : 'default',\n              sx: {\n                fontSize: '1.1rem',\n                fontWeight: 600\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 2,\n                textAlign: 'center'\n              },\n              children: \"3\\uCD08 \\uD6C4 \\uC790\\uB3D9\\uC73C\\uB85C \\uB2E4\\uC74C \\uB2E8\\uC5B4\\uB85C \\uC774\\uB3D9\\uD569\\uB2C8\\uB2E4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            size: \"large\",\n            onClick: handleNextWord,\n            startIcon: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 22\n            }, this),\n            color: (currentResult === null || currentResult === void 0 ? void 0 : currentResult.score) === 100 ? 'success' : 'primary',\n            children: currentWordIndex + 1 < wordsToEvaluate.length ? '다음 단어' : '라운드 완료'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 421,\n    columnNumber: 5\n  }, this);\n};\n_s(VocabularyEvaluation, \"Q2U6N+lyIPSxIbtim8Bd3ByGWfk=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = VocabularyEvaluation;\nexport default VocabularyEvaluation;\nvar _c;\n$RefreshReg$(_c, \"VocabularyEvaluation\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Card","CardContent","Button","TextField","LinearProgress","IconButton","useTheme","useMediaQuery","Container","Alert","Chip","Close","CloseIcon","PlayArrow","PlayArrowIcon","Send","SendIcon","jsxDEV","_jsxDEV","VocabularyEvaluation","vocabularyData","onComplete","onClose","_s","theme","isMobile","breakpoints","down","currentWordIndex","setCurrentWordIndex","userAnswer","setUserAnswer","isEvaluating","setIsEvaluating","evaluationResults","setEvaluationResults","showResult","setShowResult","currentResult","setCurrentResult","autoNextTimer","setAutoNextTimer","inputRef","setInputRef","currentRound","setCurrentRound","wordsToEvaluate","setWordsToEvaluate","allResults","setAllResults","isEvaluationComplete","setIsEvaluationComplete","clearTimeout","timer","setTimeout","handleNextWord","focus","maxWidth","sx","py","children","borderRadius","p","textAlign","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","mt","length","currentWord","progress","console","log","word","meaning","error","removeSymbols","text","toLowerCase","trim","replace","evaluateWithGemini","correctAnswer","GEMINI_API_KEY","substring","cleanUserAnswer","cleanCorrectAnswer","prompt","response","fetch","method","headers","body","JSON","stringify","contents","parts","status","ok","errorText","Error","data","json","candidates","content","scoreText","score","parseInt","isNaN","finalScore","Math","max","min","cleanUser","cleanCorrect","includes","handleSubmitAnswer","id","alert","isCorrect","result","wordId","newResults","updatedAllResults","existingIndex","findIndex","r","push","currentRoundResults","incompleteWords","filter","index","finalResults","display","justifyContent","alignItems","mb","fontWeight","round","value","height","example","fullWidth","multiline","rows","placeholder","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","disabled","ref","size","startIcon","severity","label","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/user/pro_planner/src/components/VocabularyEvaluation.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Button,\n  TextField,\n  LinearProgress,\n  IconButton,\n  useTheme,\n  useMediaQuery,\n  Container,\n  Alert,\n  Chip,\n} from '@mui/material';\nimport {\n  Close as CloseIcon,\n  PlayArrow as PlayArrowIcon,\n  Send as SendIcon,\n} from '@mui/icons-material';\n\ninterface EvaluationWord {\n  id: string;\n  word: string;\n  meaning: string;\n  example?: string;\n}\n\ninterface EvaluationResult {\n  wordId: string;\n  word: string;\n  userAnswer: string;\n  correctAnswer: string;\n  score: number;\n  isCorrect: boolean;\n}\n\ninterface VocabularyEvaluationProps {\n  vocabularyData: EvaluationWord[];\n  onComplete: (results: EvaluationResult[]) => void;\n  onClose: () => void;\n}\n\nconst VocabularyEvaluation: React.FC<VocabularyEvaluationProps> = ({\n  vocabularyData,\n  onComplete,\n  onClose,\n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  \n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [isEvaluating, setIsEvaluating] = useState(false);\n  const [evaluationResults, setEvaluationResults] = useState<EvaluationResult[]>([]);\n  const [showResult, setShowResult] = useState(false);\n  const [currentResult, setCurrentResult] = useState<EvaluationResult | null>(null);\n  const [autoNextTimer, setAutoNextTimer] = useState<NodeJS.Timeout | null>(null);\n  const [inputRef, setInputRef] = useState<HTMLInputElement | null>(null);\n  \n  // 라운드 관리 상태\n  const [currentRound, setCurrentRound] = useState(1);\n  const [wordsToEvaluate, setWordsToEvaluate] = useState<EvaluationWord[]>(vocabularyData);\n  const [allResults, setAllResults] = useState<EvaluationResult[]>([]);\n  const [isEvaluationComplete, setIsEvaluationComplete] = useState(false);\n\n  // 평가 완료 후 자동으로 다음 단어 이동\n  useEffect(() => {\n    if (showResult && currentResult) {\n      // 기존 타이머가 있다면 정리\n      if (autoNextTimer) {\n        clearTimeout(autoNextTimer);\n      }\n      \n      // 3초 후 자동으로 다음 단어로 이동\n      const timer = setTimeout(() => {\n        handleNextWord();\n      }, 3000);\n      \n      setAutoNextTimer(timer);\n    }\n    \n    // 클린업 함수\n    return () => {\n      if (autoNextTimer) {\n        clearTimeout(autoNextTimer);\n        setAutoNextTimer(null);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showResult, currentResult]);\n\n  // 다음 단어로 넘어갈 때 입력창 자동 포커스\n  useEffect(() => {\n    if (!showResult && inputRef) {\n      // 약간의 지연을 두어 DOM 업데이트 후 포커스\n      setTimeout(() => {\n        inputRef.focus();\n      }, 100);\n    }\n  }, [currentWordIndex, showResult, inputRef]);\n\n  // 평가 완료 상태 체크\n  if (isEvaluationComplete) {\n    return (\n      <Container maxWidth=\"md\" sx={{ py: 2 }}>\n        <Card sx={{ borderRadius: 2 }}>\n          <CardContent sx={{ p: 3, textAlign: 'center' }}>\n            <Typography variant=\"h6\" color=\"success.main\">\n              평가가 완료되었습니다!\n            </Typography>\n            <Button onClick={onClose} sx={{ mt: 2 }}>\n              닫기\n            </Button>\n          </CardContent>\n        </Card>\n      </Container>\n    );\n  }\n\n  // 데이터 유효성 검사\n  if (!vocabularyData || vocabularyData.length === 0) {\n    return (\n      <Container maxWidth=\"md\" sx={{ py: 2 }}>\n        <Card sx={{ borderRadius: 2 }}>\n          <CardContent sx={{ p: 3, textAlign: 'center' }}>\n            <Typography variant=\"h6\" color=\"error\">\n              평가할 단어가 없습니다.\n            </Typography>\n            <Button onClick={onClose} sx={{ mt: 2 }}>\n              닫기\n            </Button>\n          </CardContent>\n        </Card>\n      </Container>\n    );\n  }\n\n  const currentWord = wordsToEvaluate[currentWordIndex];\n  const progress = ((currentWordIndex + 1) / wordsToEvaluate.length) * 100;\n\n  // 디버깅 로그 추가\n  console.log('=== VocabularyEvaluation 디버깅 ===');\n  console.log('wordsToEvaluate:', wordsToEvaluate);\n  console.log('currentWordIndex:', currentWordIndex);\n  console.log('currentWord:', currentWord);\n  console.log('currentWord.word:', currentWord?.word);\n  console.log('currentWord.meaning:', currentWord?.meaning);\n\n  // 현재 단어가 유효한지 확인\n  if (!currentWord) {\n    console.error('currentWord가 undefined입니다');\n    return (\n      <Container maxWidth=\"md\" sx={{ py: 2 }}>\n        <Card sx={{ borderRadius: 2 }}>\n          <CardContent sx={{ p: 3, textAlign: 'center' }}>\n            <Typography variant=\"h6\" color=\"error\">\n              단어 정보를 불러올 수 없습니다.\n            </Typography>\n            <Button onClick={onClose} sx={{ mt: 2 }}>\n              닫기\n            </Button>\n          </CardContent>\n        </Card>\n      </Container>\n    );\n  }\n\n  // 기호와 부호를 제거하는 함수\n  const removeSymbols = (text: string): string => {\n    return text\n      .toLowerCase()\n      .trim()\n      .replace(/[()\\[\\]{}<>\"\"''`~!@#$%^&*+=|\\\\:;'\",.?]/g, '') // 괄호, 따옴표, 특수문자 제거\n      .replace(/\\s+/g, ' '); // 연속된 공백을 하나로\n  };\n\n  const evaluateWithGemini = async (userAnswer: string, correctAnswer: string, word: string) => {\n    try {\n      // API 키를 직접 설정 (환경변수 문제 해결)\n      const GEMINI_API_KEY = 'AIzaSyDQJ6SXBexKbCGeU-DXWCVmtfCJ56gAATs';\n      \n      console.log('=== Gemini API 디버깅 ===');\n      console.log('Gemini API 키 설정됨:', !!GEMINI_API_KEY);\n      console.log('API 키 앞 10자리:', GEMINI_API_KEY.substring(0, 10) + '...');\n\n      // 기호 제거된 답변들\n      const cleanUserAnswer = removeSymbols(userAnswer);\n      const cleanCorrectAnswer = removeSymbols(correctAnswer);\n      \n      console.log('원본 사용자 답변:', userAnswer);\n      console.log('정리된 사용자 답변:', cleanUserAnswer);\n      console.log('원본 정답:', correctAnswer);\n      console.log('정리된 정답:', cleanCorrectAnswer);\n\n      // 기호 제거 후 정확히 일치하면 100점\n      if (cleanUserAnswer === cleanCorrectAnswer) {\n        console.log('기호 제거 후 완전 일치 - 100점');\n        return 100;\n      }\n\n      const prompt = `다음 영어 단어의 뜻을 채점해주세요:\n영어 단어: ${word}\n정답: ${correctAnswer}\n사용자 답변: ${userAnswer}\n\n채점 기준:\n1. 핵심 의미가 일치하면 100점 (완전정답)\n2. 핵심 동사나 명사가 포함되어 있으면 100점 처리\n   - 예: \"A에게 B를 요구하다\" → \"요구하다\", \"필요하다\"도 100점\n   - 예: \"~을 제공하다\" → \"제공하다\", \"주다\"도 100점  \n3. 의미가 유사하거나 부분적으로 맞으면 80-90점\n4. 완전히 틀리면 0점\n\n점수만 숫자로 답변해주세요.`;\n\n      console.log('Gemini API 호출 시작...');\n      console.log('프롬프트:', prompt);\n\n      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${GEMINI_API_KEY}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          contents: [{ parts: [{ text: prompt }] }]\n        })\n      });\n\n      console.log('API 응답 상태:', response.status);\n      console.log('API 응답 OK:', response.ok);\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API 응답 오류 내용:', errorText);\n        throw new Error(`API 응답 오류: ${response.status} - ${errorText}`);\n      }\n\n      const data = await response.json();\n      console.log('API 응답 데이터:', data);\n      \n      if (!data.candidates || !data.candidates[0] || !data.candidates[0].content) {\n        console.error('API 응답 형식 오류:', data);\n        throw new Error('API 응답 형식 오류');\n      }\n\n      const scoreText = data.candidates[0].content.parts[0].text.trim();\n      console.log('추출된 점수 텍스트:', scoreText);\n      \n      const score = parseInt(scoreText);\n      console.log('파싱된 점수:', score);\n      \n      if (isNaN(score)) {\n        throw new Error(`점수 파싱 오류: \"${scoreText}\"`);\n      }\n      \n      const finalScore = Math.max(0, Math.min(100, score));\n      console.log('최종 점수:', finalScore);\n      \n      return finalScore;\n    } catch (error) {\n      console.error('Gemini API 호출 실패:', error);\n      \n      // API 실패 시 기본 채점 로직 (기호 제거 후 비교)\n      const cleanUser = removeSymbols(userAnswer);\n      const cleanCorrect = removeSymbols(correctAnswer);\n      \n      if (cleanUser === cleanCorrect) {\n        console.log('API 실패 시 기본 채점: 기호 제거 후 완전 일치 - 100점');\n        return 100;\n      } else if (cleanUser.includes(cleanCorrect) || cleanCorrect.includes(cleanUser)) {\n        console.log('API 실패 시 기본 채점: 기호 제거 후 부분 일치 - 70점');\n        return 70;\n      } else {\n        console.log('API 실패 시 기본 채점: 기호 제거 후 불일치 - 30점');\n        return 30; // API 실패 시 최소 점수 보장\n      }\n    }\n  };\n\n  const handleSubmitAnswer = async () => {\n    // 평가 완료 상태 체크\n    if (isEvaluationComplete) {\n      console.log('평가가 이미 완료되었습니다.');\n      return;\n    }\n\n    console.log('=== handleSubmitAnswer 디버깅 ===');\n    console.log('userAnswer:', userAnswer);\n    console.log('userAnswer.trim():', userAnswer?.trim());\n    console.log('currentWord:', currentWord);\n    console.log('currentWord.meaning:', currentWord?.meaning);\n    console.log('currentWord.word:', currentWord?.word);\n    console.log('currentWord.id:', currentWord?.id);\n\n    if (!userAnswer || !userAnswer.trim()) {\n      console.error('사용자 답변이 비어있음');\n      alert('답변을 입력해주세요.');\n      return;\n    }\n    \n    if (!currentWord) {\n      console.error('currentWord가 undefined');\n      alert('단어 정보가 올바르지 않습니다. (currentWord 없음)');\n      return;\n    }\n    \n    if (!currentWord.meaning) {\n      console.error('currentWord.meaning이 undefined:', currentWord);\n      alert('단어 정보가 올바르지 않습니다. (meaning 없음)');\n      return;\n    }\n    \n    setIsEvaluating(true);\n\n    try {\n      const score = await evaluateWithGemini(userAnswer, currentWord.meaning, currentWord.word);\n      const isCorrect = score >= 80;\n\n      const result: EvaluationResult = {\n        wordId: currentWord.id || 'unknown',\n        word: currentWord.word || 'unknown',\n        userAnswer: userAnswer.trim(),\n        correctAnswer: currentWord.meaning || 'unknown',\n        score: score,\n        isCorrect: isCorrect,\n      };\n\n      setCurrentResult(result);\n      setShowResult(true);\n    } catch (error) {\n      console.error('평가 중 오류 발생:', error);\n      alert('평가 중 오류가 발생했습니다.');\n    } finally {\n      setIsEvaluating(false);\n    }\n  };\n\n  const handleNextWord = () => {\n    // 평가 완료 상태 체크\n    if (isEvaluationComplete) {\n      console.log('평가가 이미 완료되었습니다.');\n      return;\n    }\n\n    // 자동 이동 타이머가 있다면 취소\n    if (autoNextTimer) {\n      clearTimeout(autoNextTimer);\n      setAutoNextTimer(null);\n    }\n    \n    if (currentResult) {\n      // 현재 결과를 저장\n      const newResults = [...evaluationResults, currentResult];\n      setEvaluationResults(newResults);\n      \n      // 전체 결과에도 추가/업데이트\n      const updatedAllResults = [...allResults];\n      const existingIndex = updatedAllResults.findIndex(r => r.wordId === currentResult.wordId);\n      if (existingIndex >= 0) {\n        updatedAllResults[existingIndex] = currentResult;\n      } else {\n        updatedAllResults.push(currentResult);\n      }\n      setAllResults(updatedAllResults);\n    }\n\n    // 다음 단어로 이동 또는 라운드 완료 체크\n    if (currentWordIndex + 1 < wordsToEvaluate.length) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setUserAnswer('');\n      setShowResult(false);\n      setCurrentResult(null);\n    } else {\n      // 라운드 완료 - 현재 라운드의 모든 결과 수집\n      const currentRoundResults = [...evaluationResults];\n      if (currentResult) {\n        currentRoundResults.push(currentResult);\n      }\n      \n      // 현재 라운드에서 100점 미만인 단어들 찾기\n      const incompleteWords = wordsToEvaluate.filter((word, index) => {\n        const result = currentRoundResults[index];\n        return !result || result.score < 100;\n      });\n      \n      console.log('=== 라운드 완료 디버깅 ===');\n      console.log('현재 라운드:', currentRound);\n      console.log('현재 라운드 결과:', currentRoundResults);\n      console.log('미완성 단어 수:', incompleteWords.length);\n      console.log('미완성 단어들:', incompleteWords);\n      \n      if (incompleteWords.length > 0 && currentRound < 3) { // 최대 3라운드로 제한\n        // 다음 라운드 시작\n        console.log('다음 라운드 시작:', currentRound + 1);\n        setCurrentRound(currentRound + 1);\n        setWordsToEvaluate(incompleteWords);\n        setCurrentWordIndex(0);\n        setEvaluationResults([]);\n        setUserAnswer('');\n        setShowResult(false);\n        setCurrentResult(null);\n      } else {\n        // 모든 단어 완료 또는 최대 라운드 도달\n        console.log('평가 완료 - 모든 결과 전달');\n        const finalResults = [...allResults];\n        if (currentResult) {\n          const existingIndex = finalResults.findIndex(r => r.wordId === currentResult.wordId);\n          if (existingIndex >= 0) {\n            finalResults[existingIndex] = currentResult;\n          } else {\n            finalResults.push(currentResult);\n          }\n        }\n        setIsEvaluationComplete(true);\n        onComplete(finalResults);\n      }\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ py: 2 }}>\n      <Card sx={{ borderRadius: isMobile ? 2 : 1 }}>\n        <CardContent sx={{ p: isMobile ? 3 : 2 }}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n            <Box>\n              <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\n                단어 평가\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                라운드 {currentRound} - {wordsToEvaluate.length}개 단어\n              </Typography>\n            </Box>\n            <IconButton onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          </Box>\n\n          <Box sx={{ mb: 3 }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n              <Typography variant=\"body2\">\n                {currentWordIndex + 1} / {wordsToEvaluate.length}\n              </Typography>\n              <Typography variant=\"body2\" color=\"primary\">\n                {Math.round(progress)}%\n              </Typography>\n            </Box>\n            <LinearProgress variant=\"determinate\" value={progress} sx={{ height: 8, borderRadius: 4 }} />\n          </Box>\n\n          {!showResult ? (\n            <Box>\n              <Box sx={{ textAlign: 'center', mb: 4 }}>\n                <Typography variant=\"h3\" sx={{ fontWeight: 700, mb: 2 }}>\n            {currentWord.word}\n          </Typography>\n          {currentWord.example && (\n                  <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                    예문: {currentWord.example}\n            </Typography>\n          )}\n              </Box>\n\n        <Box sx={{ mb: 3 }}>\n                <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                  이 단어의 뜻을 입력하세요:\n          </Typography>\n                          <TextField\n                  fullWidth\n                  multiline\n                  rows={3}\n                  variant=\"outlined\"\n                  placeholder=\"뜻을 입력하세요...\"\n                  value={userAnswer}\n                  onChange={(e) => setUserAnswer(e.target.value)}\n                  onKeyPress={(e) => {\n                    if (e.key === 'Enter' && !e.shiftKey && !isEvaluating && userAnswer.trim()) {\n                      e.preventDefault();\n                      handleSubmitAnswer();\n                    }\n                  }}\n                  disabled={isEvaluating}\n                  sx={{ mb: 2 }}\n                  inputRef={(ref) => setInputRef(ref)}\n                />\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  size=\"large\"\n                  onClick={handleSubmitAnswer}\n                  disabled={!userAnswer.trim() || isEvaluating}\n                  startIcon={<SendIcon />}\n                >\n                  {isEvaluating ? '평가 중...' : '평가하기'}\n                </Button>\n              </Box>\n            </Box>\n          ) : (\n            <Box>\n              <Box sx={{ textAlign: 'center', mb: 3 }}>\n                <Typography variant=\"h4\" sx={{ mb: 2 }}>\n                  {currentWord.word}\n                </Typography>\n                \n                <Alert \n                  severity={currentResult?.score === 100 ? 'success' : 'info'} \n                  sx={{ mb: 2 }}\n                >\n                  <Typography variant=\"h6\">\n                    {currentResult?.score === 100 \n                      ? '완벽합니다! 100점!' \n                      : `${currentResult?.score}점 - ${currentRound === 1 ? '1차 평가 완료' : '재시험 완료'}`\n                    }\n                  </Typography>\n                  {currentResult && currentResult.score < 100 && currentRound === 1 && (\n                    <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                      틀린 단어는 나중에 다시 평가합니다\n                    </Typography>\n                  )}\n                  {currentResult && currentResult.score < 100 && currentRound > 1 && (\n                    <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                      다음 라운드에서 다시 시도하세요\n                    </Typography>\n                  )}\n                </Alert>\n\n                <Box sx={{ mb: 2 }}>\n                  <Typography variant=\"body1\" color=\"text.secondary\">\n                    당신의 답변: {currentResult?.userAnswer}\n                  </Typography>\n                  <Typography variant=\"body1\" color=\"text.secondary\">\n                    정답: {currentResult?.correctAnswer}\n                  </Typography>\n                </Box>\n\n                <Chip\n                  label={`점수: ${currentResult?.score || 0}점`}\n                  color={currentResult?.score === 100 ? 'success' : 'default'}\n                  sx={{ fontSize: '1.1rem', fontWeight: 600 }}\n                />\n                \n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2, textAlign: 'center' }}>\n                  3초 후 자동으로 다음 단어로 이동합니다\n                </Typography>\n        </Box>\n\n        <Button\n          fullWidth\n          variant=\"contained\"\n          size=\"large\"\n          onClick={handleNextWord}\n          startIcon={<PlayArrowIcon />}\n          color={currentResult?.score === 100 ? 'success' : 'primary'}\n        >\n          {currentWordIndex + 1 < wordsToEvaluate.length ? '다음 단어' : '라운드 완료'}\n        </Button>\n        </Box>\n          )}\n      </CardContent>\n    </Card>\n    </Container>\n  );\n};\n\nexport default VocabularyEvaluation; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}